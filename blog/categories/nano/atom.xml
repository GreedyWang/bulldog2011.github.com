<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: nano | Abstraction Builder]]></title>
  <link href="http://bulldog2011.github.com/blog/categories/nano/atom.xml" rel="self"/>
  <link href="http://bulldog2011.github.com/"/>
  <updated>2013-04-17T22:38:54+08:00</updated>
  <id>http://bulldog2011.github.com/</id>
  <author>
    <name><![CDATA[Bulldog]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Nano Tutorial 3 - Hello eBay Finding]]></title>
    <link href="http://bulldog2011.github.com/blog/2013/04/17/nano-tutorial-3-hello-ebay-finding/"/>
    <updated>2013-04-17T21:27:00+08:00</updated>
    <id>http://bulldog2011.github.com/blog/2013/04/17/nano-tutorial-3-hello-ebay-finding</id>
    <content type="html"><![CDATA[<p>This is the third tutorial of Nano Tutorial Series, in <a href="http://bulldog2011.github.io/blog/2013/04/15/nano-tutorial-1-a-number-conversion-sample/">first</a> and <a href="http://bulldog2011.github.io/blog/2013/04/17/nano-tutorial-2-a-barcode-sample/">second</a> tutorials, I showed you how to use Nano with simple services, these services only support one or two calls, the request/response structures are fairly simple, supporting these simple services only can't show the full power of Nano, so in this and later tutorials, I will show you how to use Nano with industrial grade services, let's start with <a href="http://developer.ebay.com/DevZone/finding/CallRef/index.html">eBay Finding service</a>, please review its official site if you are not familiar with this service, basically, it lets you search items on eBay. eBay Finding service supports SOAP 1.2, so I will also show you how to configure Nano to support SOAP 1.2 protocol, also I will show how to set service required HTTP headers on Nano client.</p>

<p>The source of this tutorial is <a href="https://github.com/bulldog2011/nano/tree/master/sample/webservice/HelloeBayFinding">here</a>.</p>

<!--more-->


<h2>Step 0 - Prerequisite</h2>

<p>I suppose you have already read Nano tutorial 1 and 2, and basically you should know:</p>

<blockquote><ul>
<li>The wsdl driven development process supported by Nano.</li>
<li>How to add the Nano library and the generated service proxy into your Android project.</li>
</ul>
</blockquote>

<h2>Step 1 - Generate Java Proxy from WSDL</h2>

<p>Download <a href="https://github.com/bulldog2011/mwsc">mwsc</a> and run following command in terminal to generate the proxy:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>bin\mwsc.bat -nano -ebaysoa -d generated -p com.ebay.api.finding http://developer.ebay.com/webservices/Finding/latest/FindingService.wsdl&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Depends on the network speed, you may need to wait a few moments to let the code generator download the wsdl and generate code, you may also download the wsdl and run the code generator with a local wsdl.</p>

<p>A few comments about the code generation:</p>

<blockquote><ul>
<li>I have added a special <code>-ebaysoa</code> codegen option, this is because eBay Finding service needs a per-call operation name HTTP header, I added this special flag in the code generator to let it generate the header for me, since I don't want to add this header everytime I call an eBay Finding service, so this is just a special flag for eBay SOA services and for demo, or a hidden feature, not a generic codegen option.</li>
<li>By default, the code generator will derive package name from the target namespace in wsdl, you can use <code>-p</code> option to override this, for example, <code>-p com.ebay.api.finding</code>.</li>
</ul>
</blockquote>

<h2>Step 2 - Create New Android Project, Add Nano Library and Generated Proxy into Your Project</h2>

<p>Create a simple Android project called <code>HelloeBayFinding</code> in eclipse(or other IDE you prefer), then:</p>

<blockquote><ol>
<li>Download <a href="https://github.com/bulldog2011/bulldog-repo/blob/master/repo/releases/com/leansoft/nano/0.7.0/nano-0.7.0.jar">latest nano library jar</a> and add it to the <code>libs</code> folder of your Android project.</li>
<li>Drag the above generated proxy into the <code>src</code> folder of your Android project.</li>
<li>Add following user permissions in the <code>AndroidManifest.xml</code> file to enable network access. <br/>
<code>xml
 &lt;uses-permission android:name="android.permission.INTERNET" /&gt;
 &lt;uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" /&gt;
</code></li>
</ol>
</blockquote>

<p>Now build the project to ensure it can build successfully.</p>

<p>You may now review the eBay Finding service SOAP interface generated from wsdl, to learn what kinds of functions are provided by eBay Finding service, and what kinds of parameters are needed to call the serivce, the interface is posted below:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>FindingServicePortType_SOAPClient.java </span><a href='https://github.com/bulldog2011/nano/blob/master/sample/webservice/HelloeBayFinding/src/com/ebay/marketplace/search/v1/services/client/FindingServicePortType_SOAPClient.java'>source </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c1">// Generated by wsdl compiler for android/java</span>
</span><span class='line'><span class="c1">// DO NOT CHANGE!</span>
</span><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">ebay</span><span class="o">.</span><span class="na">api</span><span class="o">.</span><span class="na">finding</span><span class="o">.</span><span class="na">client</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">import</span> <span class="nn">com.leansoft.nano.ws.SOAPServiceCallback</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.leansoft.nano.ws.NanoSOAPClient</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.FindItemsForFavoriteSearchResponse</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.FindItemsByCategoryResponse</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.FindItemsByProductResponse</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.FindItemsByImageRequest</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.GetSearchKeywordsRecommendationRequest</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.FindItemsByCategoryRequest</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.FindCompletedItemsResponse</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.FindItemsAdvancedResponse</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.FindItemsIneBayStoresResponse</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.FindItemsForFavoriteSearchRequest</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.FindItemsByKeywordsRequest</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.FindItemsByProductRequest</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.FindItemsIneBayStoresRequest</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.FindItemsAdvancedRequest</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.FindItemsByImageResponse</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.GetVersionResponse</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.GetHistogramsResponse</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.GetVersionRequest</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.GetSearchKeywordsRecommendationResponse</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.FindItemsByKeywordsResponse</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.GetHistogramsRequest</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.FindCompletedItemsRequest</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;/&lt;</span><span class="n">em</span><span class="o">&gt;*</span>
</span><span class='line'> <span class="n">This</span> <span class="kd">class</span> <span class="nc">is</span> <span class="n">the</span> <span class="n">SOAP</span> <span class="n">client</span> <span class="n">to</span> <span class="n">the</span> <span class="n">FindingServicePortType</span> <span class="n">Web</span> <span class="n">Service</span><span class="o">.</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;/</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">FindingServicePortType_SOAPClient</span> <span class="kd">extends</span> <span class="n">NanoSOAPClient</span> <span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="cm">/**</span>
</span><span class='line'><span class="cm"> public method</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">getSearchKeywordsRecommendation</span><span class="o">(</span><span class="n">GetSearchKeywordsRecommendationRequest</span> <span class="n">requestObject</span><span class="o">,</span> <span class="n">SOAPServiceCallback</span><span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span><span class="n">GetSearchKeywordsRecommendationResponse</span><span class="o">&amp;</span><span class="n">gt</span><span class="o">;</span> <span class="n">serviceCallback</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="kd">super</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">requestObject</span><span class="o">,</span> <span class="n">serviceCallback</span><span class="o">,</span> <span class="n">GetSearchKeywordsRecommendationResponse</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> public method</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">findItemsByKeywords</span><span class="o">(</span><span class="n">FindItemsByKeywordsRequest</span> <span class="n">requestObject</span><span class="o">,</span> <span class="n">SOAPServiceCallback</span><span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span><span class="n">FindItemsByKeywordsResponse</span><span class="o">&amp;</span><span class="n">gt</span><span class="o">;</span> <span class="n">serviceCallback</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="kd">super</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">requestObject</span><span class="o">,</span> <span class="n">serviceCallback</span><span class="o">,</span> <span class="n">FindItemsByKeywordsResponse</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> public method</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">findItemsByCategory</span><span class="o">(</span><span class="n">FindItemsByCategoryRequest</span> <span class="n">requestObject</span><span class="o">,</span> <span class="n">SOAPServiceCallback</span><span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span><span class="n">FindItemsByCategoryResponse</span><span class="o">&amp;</span><span class="n">gt</span><span class="o">;</span> <span class="n">serviceCallback</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="kd">super</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">requestObject</span><span class="o">,</span> <span class="n">serviceCallback</span><span class="o">,</span> <span class="n">FindItemsByCategoryResponse</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> public method</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">findItemsAdvanced</span><span class="o">(</span><span class="n">FindItemsAdvancedRequest</span> <span class="n">requestObject</span><span class="o">,</span> <span class="n">SOAPServiceCallback</span><span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span><span class="n">FindItemsAdvancedResponse</span><span class="o">&amp;</span><span class="n">gt</span><span class="o">;</span> <span class="n">serviceCallback</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="kd">super</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">requestObject</span><span class="o">,</span> <span class="n">serviceCallback</span><span class="o">,</span> <span class="n">FindItemsAdvancedResponse</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> public method</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">findItemsByProduct</span><span class="o">(</span><span class="n">FindItemsByProductRequest</span> <span class="n">requestObject</span><span class="o">,</span> <span class="n">SOAPServiceCallback</span><span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span><span class="n">FindItemsByProductResponse</span><span class="o">&amp;</span><span class="n">gt</span><span class="o">;</span> <span class="n">serviceCallback</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="kd">super</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">requestObject</span><span class="o">,</span> <span class="n">serviceCallback</span><span class="o">,</span> <span class="n">FindItemsByProductResponse</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> public method</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">findItemsIneBayStores</span><span class="o">(</span><span class="n">FindItemsIneBayStoresRequest</span> <span class="n">requestObject</span><span class="o">,</span> <span class="n">SOAPServiceCallback</span><span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span><span class="n">FindItemsIneBayStoresResponse</span><span class="o">&amp;</span><span class="n">gt</span><span class="o">;</span> <span class="n">serviceCallback</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="kd">super</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">requestObject</span><span class="o">,</span> <span class="n">serviceCallback</span><span class="o">,</span> <span class="n">FindItemsIneBayStoresResponse</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> public method</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">findItemsByImage</span><span class="o">(</span><span class="n">FindItemsByImageRequest</span> <span class="n">requestObject</span><span class="o">,</span> <span class="n">SOAPServiceCallback</span><span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span><span class="n">FindItemsByImageResponse</span><span class="o">&amp;</span><span class="n">gt</span><span class="o">;</span> <span class="n">serviceCallback</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="kd">super</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">requestObject</span><span class="o">,</span> <span class="n">serviceCallback</span><span class="o">,</span> <span class="n">FindItemsByImageResponse</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> public method</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">getHistograms</span><span class="o">(</span><span class="n">GetHistogramsRequest</span> <span class="n">requestObject</span><span class="o">,</span> <span class="n">SOAPServiceCallback</span><span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span><span class="n">GetHistogramsResponse</span><span class="o">&amp;</span><span class="n">gt</span><span class="o">;</span> <span class="n">serviceCallback</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="kd">super</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">requestObject</span><span class="o">,</span> <span class="n">serviceCallback</span><span class="o">,</span> <span class="n">GetHistogramsResponse</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> public method</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">findCompletedItems</span><span class="o">(</span><span class="n">FindCompletedItemsRequest</span> <span class="n">requestObject</span><span class="o">,</span> <span class="n">SOAPServiceCallback</span><span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span><span class="n">FindCompletedItemsResponse</span><span class="o">&amp;</span><span class="n">gt</span><span class="o">;</span> <span class="n">serviceCallback</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="kd">super</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">requestObject</span><span class="o">,</span> <span class="n">serviceCallback</span><span class="o">,</span> <span class="n">FindCompletedItemsResponse</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> public method</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">getVersion</span><span class="o">(</span><span class="n">GetVersionRequest</span> <span class="n">requestObject</span><span class="o">,</span> <span class="n">SOAPServiceCallback</span><span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span><span class="n">GetVersionResponse</span><span class="o">&amp;</span><span class="n">gt</span><span class="o">;</span> <span class="n">serviceCallback</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="kd">super</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">requestObject</span><span class="o">,</span> <span class="n">serviceCallback</span><span class="o">,</span> <span class="n">GetVersionResponse</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> public method</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">findItemsForFavoriteSearch</span><span class="o">(</span><span class="n">FindItemsForFavoriteSearchRequest</span> <span class="n">requestObject</span><span class="o">,</span> <span class="n">SOAPServiceCallback</span><span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span><span class="n">FindItemsForFavoriteSearchResponse</span><span class="o">&amp;</span><span class="n">gt</span><span class="o">;</span> <span class="n">serviceCallback</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="kd">super</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">requestObject</span><span class="o">,</span> <span class="n">serviceCallback</span><span class="o">,</span> <span class="n">FindItemsForFavoriteSearchResponse</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>All the methods in the interface follow same calling paradigm - you call the service with required request object and a callback object implementing interface <a href="https://github.com/bulldog2011/nano/blob/master/src/main/java/com/leansoft/nano/ws/SOAPServiceCallback.java">SOAPServiceCallback</a>.</p>

<h2>Step 3 - Implement Appliction Logic and UI, Call Proxy to Invoke Web Service as Needed.</h2>

<p>First, create a shared service client as below:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>FindingServiceClient.java </span><a href='https://github.com/bulldog2011/nano/blob/master/sample/webservice/HelloeBayFinding/src/com/ebay/service/finding/FindingServiceClient.java'>source </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">ebay</span><span class="o">.</span><span class="na">service</span><span class="o">.</span><span class="na">finding</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">import</span> <span class="nn">com.ebay.api.finding.client.FindingServicePortType_SOAPClient</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.leansoft.nano.ws.SOAPVersion</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">FindingServiceClient</span> <span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kd">public</span> <span class="kd">static</span> <span class="n">String</span> <span class="n">eBayFindingServiceURLString</span> <span class="o">=</span> <span class="s">&quot;http://svcs.ebay.com/services/search/FindingService/v1&quot;</span><span class="o">;</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="n">String</span> <span class="n">eBayAppId</span> <span class="o">=</span> <span class="s">&quot;YOUR APPID HERE&quot;</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="kd">volatile</span> <span class="n">FindingServicePortType_SOAPClient</span> <span class="n">client</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="n">FindingServicePortType_SOAPClient</span> <span class="nf">getSharedClient</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">client</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">synchronized</span><span class="o">(</span><span class="n">FindingServiceClient</span><span class="o">.</span><span class="na">class</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">client</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">client</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FindingServicePortType_SOAPClient</span><span class="o">();</span>
</span><span class='line'>                <span class="n">client</span><span class="o">.</span><span class="na">setEndpointUrl</span><span class="o">(</span><span class="n">eBayFindingServiceURLString</span><span class="o">);</span>
</span><span class='line'>                <span class="n">client</span><span class="o">.</span><span class="na">setSoapVersion</span><span class="o">(</span><span class="n">SOAPVersion</span><span class="o">.</span><span class="na">SOAP12</span><span class="o">);</span> <span class="c1">// ebay finding service supports SOAP 1.2</span>
</span><span class='line'>                <span class="n">client</span><span class="o">.</span><span class="na">setContentType</span><span class="o">(</span><span class="s">&quot;application/soap+xml&quot;</span><span class="o">);</span>
</span><span class='line'>                <span class="n">client</span><span class="o">.</span><span class="na">getAsyncHttpClient</span><span class="o">().</span><span class="na">addHeader</span><span class="o">(</span><span class="s">&quot;Accept&quot;</span><span class="o">,</span> <span class="s">&quot;application/soap+xml&quot;</span><span class="o">);</span>
</span><span class='line'>                <span class="n">client</span><span class="o">.</span><span class="na">getAsyncHttpClient</span><span class="o">().</span><span class="na">addHeader</span><span class="o">(</span><span class="s">&quot;X-EBAY-SOA-SECURITY-APPNAME&quot;</span><span class="o">,</span> <span class="n">eBayAppId</span><span class="o">);</span>
</span><span class='line'>                <span class="n">client</span><span class="o">.</span><span class="na">getAsyncHttpClient</span><span class="o">().</span><span class="na">addHeader</span><span class="o">(</span><span class="s">&quot;X-EBAY-SOA-MESSAGE-PROTOCOL&quot;</span><span class="o">,</span> <span class="s">&quot;SOAP12&quot;</span><span class="o">);</span>
</span><span class='line'>                <span class="n">client</span><span class="o">.</span><span class="na">getAsyncHttpClient</span><span class="o">().</span><span class="na">addHeader</span><span class="o">(</span><span class="s">&quot;X-EBAY-SOA-REQUEST-DATA-FORMAT&quot;</span><span class="o">,</span> <span class="s">&quot;SOAP&quot;</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">client</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>The shared client for eBay Finding service is a little more complex than the simple serivce client in tutorial 1 and 2, this is because that eBay Finding service needs a few HTTP headers set to work, let me give more comments:</p>

<blockquote><ol>
<li>eBay Finding service support SOAP12, so we set the client to use <code>SOAP12</code> protocol, this is not necessary since eBay Finding service also supports SOAP11(which is Nano default), we use SOAP12 here just for demo and to show the capability of Nano.</li>
<li>eBay Finding service needs to set a few HTTP headers to work, for a list of required headers, please refer to doc <a href="http://developer.ebay.com/DevZone/finding/Concepts/MakingACall.html">here</a>.</li>
<li>One mandatory header for eBay Finding service is <code>eBayAppId</code>, you need to register on eBay developer site as an eBay developer then get this id, before your can run this demo, you must fill in your own eBayAppId in the shared client.</li>
</ol>
</blockquote>

<p>Now the UI part and application logic, for this hello world like sample, we just need a <code>EditText</code> for keyword input and <code>Button</code> to trigger eBay search by invoking listening method <code>onClick</code> which will indirectly call eBay Finding service through the proxy, fairly simple, see the full application logic in <code>MainActivity</code> class below:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>MainActivity.java </span><a href='https://github.com/bulldog2011/nano/blob/master/sample/webservice/HelloeBayFinding/src/com/leansoft/nano/sample/MainActivity.java'>source  </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">leansoft</span><span class="o">.</span><span class="na">nano</span><span class="o">.</span><span class="na">sample</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">import</span> <span class="nn">com.ebay.api.finding.AckValue</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.ErrorData</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.FindItemsByKeywordsRequest</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.FindItemsByKeywordsResponse</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.PaginationInput</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.SearchItem</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.client.FindingServicePortType_SOAPClient</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.service.finding.FindingServiceClient</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.leansoft.nano.soap12.Reasontext</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.leansoft.nano.ws.SOAPServiceCallback</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">import</span> <span class="nn">android.os.Bundle</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.app.Activity</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.view.View</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.view.View.OnClickListener</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.Button</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.EditText</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.Toast</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MainActivity</span> <span class="kd">extends</span> <span class="n">Activity</span> <span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="nd">@Override</span>
</span><span class='line'><span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>
</span><span class='line'>    <span class="n">setContentView</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">activity_main</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">Button</span> <span class="n">searchButton</span> <span class="o">=</span> <span class="o">(</span><span class="n">Button</span><span class="o">)</span> <span class="k">this</span><span class="o">.</span><span class="na">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">search_button</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">searchButton</span><span class="o">.</span><span class="na">setOnClickListener</span><span class="o">(</span><span class="k">new</span> <span class="n">OnClickListener</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="nd">@Override</span>
</span><span class='line'>        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">View</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="c1">// Get shared client</span>
</span><span class='line'>            <span class="n">FindingServicePortType_SOAPClient</span> <span class="n">client</span> <span class="o">=</span> <span class="n">FindingServiceClient</span><span class="o">.</span><span class="na">getSharedClient</span><span class="o">();</span>
</span><span class='line'>            <span class="n">client</span><span class="o">.</span><span class="na">setDebug</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span> <span class="c1">// enable soap message logging</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">// Build request</span>
</span><span class='line'>            <span class="n">FindItemsByKeywordsRequest</span> <span class="n">request</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FindItemsByKeywordsRequest</span><span class="o">();</span>
</span><span class='line'>            <span class="n">String</span> <span class="n">keywords</span> <span class="o">=</span> <span class="o">((</span><span class="n">EditText</span><span class="o">)</span><span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">keyword_input</span><span class="o">)).</span><span class="na">getText</span><span class="o">().</span><span class="na">toString</span><span class="o">();</span>
</span><span class='line'>            <span class="n">request</span><span class="o">.</span><span class="na">keywords</span> <span class="o">=</span> <span class="n">keywords</span><span class="o">;</span>
</span><span class='line'>            <span class="n">PaginationInput</span> <span class="n">pi</span> <span class="o">=</span> <span class="k">new</span> <span class="n">PaginationInput</span><span class="o">();</span>
</span><span class='line'>            <span class="n">pi</span><span class="o">.</span><span class="na">pageNumber</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
</span><span class='line'>            <span class="n">pi</span><span class="o">.</span><span class="na">entriesPerPage</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
</span><span class='line'>            <span class="n">request</span><span class="o">.</span><span class="na">paginationInput</span> <span class="o">=</span> <span class="n">pi</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">// Make API call and register callbacks</span>
</span><span class='line'>            <span class="n">client</span><span class="o">.</span><span class="na">findItemsByKeywords</span><span class="o">(</span><span class="n">request</span><span class="o">,</span> <span class="k">new</span> <span class="n">SOAPServiceCallback</span><span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span><span class="n">FindItemsByKeywordsResponse</span><span class="o">&amp;</span><span class="n">gt</span><span class="o">;()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>                <span class="nd">@Override</span>
</span><span class='line'>                <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onSuccess</span><span class="o">(</span>
</span><span class='line'>                        <span class="n">FindItemsByKeywordsResponse</span> <span class="n">responseObject</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>                    <span class="k">if</span> <span class="o">(</span><span class="n">AckValue</span><span class="o">.</span><span class="na">SUCCESS</span> <span class="o">==</span> <span class="n">responseObject</span><span class="o">.</span><span class="na">ack</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                        <span class="k">if</span> <span class="o">(</span><span class="n">responseObject</span><span class="o">.</span><span class="na">searchResult</span> <span class="o">!=</span> <span class="kc">null</span> <span class="o">&amp;</span><span class="n">amp</span><span class="o">;&amp;</span><span class="n">amp</span><span class="o">;</span> <span class="n">responseObject</span><span class="o">.</span><span class="na">searchResult</span><span class="o">.</span><span class="na">count</span> <span class="o">&amp;</span><span class="n">gt</span><span class="o">;</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                            <span class="c1">// show the title of the first found item</span>
</span><span class='line'>                            <span class="n">SearchItem</span> <span class="n">item</span> <span class="o">=</span> <span class="n">responseObject</span><span class="o">.</span><span class="na">searchResult</span><span class="o">.</span><span class="na">item</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>                            <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">,</span> <span class="n">item</span><span class="o">.</span><span class="na">title</span><span class="o">,</span> <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>                        <span class="o">}</span> <span class="k">else</span> <span class="o">{</span> <span class="c1">// no result</span>
</span><span class='line'>                            <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">,</span> <span class="s">&quot;No result&quot;</span><span class="o">,</span> <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>                        <span class="o">}</span>
</span><span class='line'>                    <span class="o">}</span> <span class="k">else</span> <span class="o">{</span> <span class="c1">// response resident error</span>
</span><span class='line'>                        <span class="n">ErrorData</span> <span class="n">errorData</span> <span class="o">=</span> <span class="n">responseObject</span><span class="o">.</span><span class="na">errorMessage</span><span class="o">.</span><span class="na">error</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>                        <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">,</span> <span class="n">errorData</span><span class="o">.</span><span class="na">message</span><span class="o">,</span> <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>                    <span class="o">}</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>                <span class="nd">@Override</span>
</span><span class='line'>                <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onFailure</span><span class="o">(</span><span class="n">Throwable</span> <span class="n">error</span><span class="o">,</span> <span class="n">String</span> <span class="n">errorMessage</span><span class="o">)</span> <span class="o">{</span> <span class="c1">// http or parsing error</span>
</span><span class='line'>                    <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">,</span> <span class="n">errorMessage</span><span class="o">,</span> <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>                <span class="nd">@Override</span>
</span><span class='line'>                <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onSOAPFault</span><span class="o">(</span><span class="n">Object</span> <span class="n">soapFault</span><span class="o">)</span> <span class="o">{</span> <span class="c1">// soap fault</span>
</span><span class='line'>                    <span class="n">com</span><span class="o">.</span><span class="na">leansoft</span><span class="o">.</span><span class="na">nano</span><span class="o">.</span><span class="na">soap12</span><span class="o">.</span><span class="na">Fault</span> <span class="n">fault</span> <span class="o">=</span> <span class="o">(</span><span class="n">com</span><span class="o">.</span><span class="na">leansoft</span><span class="o">.</span><span class="na">nano</span><span class="o">.</span><span class="na">soap12</span><span class="o">.</span><span class="na">Fault</span><span class="o">)</span><span class="n">soapFault</span><span class="o">;</span>
</span><span class='line'>                    <span class="n">Reasontext</span> <span class="n">reasonText</span> <span class="o">=</span> <span class="n">fault</span><span class="o">.</span><span class="na">reason</span><span class="o">.</span><span class="na">text</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>                    <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">,</span> <span class="n">reasonText</span><span class="o">.</span><span class="na">value</span><span class="o">,</span> <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="o">});</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">});</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>More comments to the serivce call code:</p>

<blockquote><ol>
<li>I've added comments in the code so the whole service call flow should be easy to understand.</li>
<li>We used the eBay Finding <code>findItemsByKeywords</code> call, which takes a keyword as input, and will return a list of matched items, for demo, we just need one item to display, so we set entries per page to 1.</li>
<li>In the success handling logic, we show the title of the returned item using Android <code>Toast</code> component.</li>
<li>Since we set the client to use SOAP12 protocol, in the soap fault error handling logic, we need to cast the soapFault variable to type <code>SOAP12Fault</code> and handle it accordingly.</li>
<li>eBay Finding service supports response resident error(RRE), so even we get a success response, we still need to check the response for resident error and handle it accordingly.</li>
</ol>
</blockquote>

<h2>Final Step - Run the Demo</h2>

<p>Let's run the demo on simulator, see a screen shot below:</p>

<p><img class="center" src="/images/nano/tutorial03/screen_shot1.png" width="400" height="600"></p>

<p>and the debug output:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>04-17 14:17:49.157: D/NanoSOAPClient(317): Sending request to : http://svcs.ebay.com/services/search/FindingService/v1
</span><span class='line'>04-17 14:17:49.157: D/NanoSOAPClient(317): Request HTTP headers :
</span><span class='line'>04-17 14:17:49.157: D/NanoSOAPClient(317): {
</span><span class='line'>04-17 14:17:49.157: D/NanoSOAPClient(317):     X-EBAY-SOA-OPERATION-NAME="findItemsByKeywords"
</span><span class='line'>04-17 14:17:49.157: D/NanoSOAPClient(317):     X-EBAY-SOA-SECURITY-APPNAME="*******"
</span><span class='line'>04-17 14:17:49.157: D/NanoSOAPClient(317):     Accept="application/soap+xml"
</span><span class='line'>04-17 14:17:49.157: D/NanoSOAPClient(317):     X-EBAY-SOA-MESSAGE-PROTOCOL="SOAP12"
</span><span class='line'>04-17 14:17:49.157: D/NanoSOAPClient(317):     X-EBAY-SOA-REQUEST-DATA-FORMAT="SOAP"
</span><span class='line'>04-17 14:17:49.157: D/NanoSOAPClient(317): }
</span><span class='line'>04-17 14:17:49.157: D/NanoSOAPClient(317): Request message :
</span><span class='line'>04-17 14:17:49.157: D/NanoSOAPClient(317): &lt;?xml version='1.0' encoding='UTF-8' ?>
</span><span class='line'>04-17 14:17:49.157: D/NanoSOAPClient(317): &lt;soapenv:Envelope xmlns:soapenv="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.ebay.com/marketplace/search/v1/services">
</span><span class='line'>04-17 14:17:49.157: D/NanoSOAPClient(317):   &lt;soapenv:Body>
</span><span class='line'>04-17 14:17:49.157: D/NanoSOAPClient(317):     &lt;findItemsByKeywordsRequest>
</span><span class='line'>04-17 14:17:49.157: D/NanoSOAPClient(317):       &lt;paginationInput>
</span><span class='line'>04-17 14:17:49.157: D/NanoSOAPClient(317):         &lt;pageNumber>1&lt;/pageNumber>
</span><span class='line'>04-17 14:17:49.157: D/NanoSOAPClient(317):         &lt;entriesPerPage>1&lt;/entriesPerPage>
</span><span class='line'>04-17 14:17:49.157: D/NanoSOAPClient(317):       &lt;/paginationInput>
</span><span class='line'>04-17 14:17:49.157: D/NanoSOAPClient(317):       &lt;keywords>nexus 2&lt;/keywords>
</span><span class='line'>04-17 14:17:49.157: D/NanoSOAPClient(317):     &lt;/findItemsByKeywordsRequest>
</span><span class='line'>04-17 14:17:49.157: D/NanoSOAPClient(317):   &lt;/soapenv:Body>
</span><span class='line'>04-17 14:17:49.157: D/NanoSOAPClient(317): &lt;/soapenv:Envelope>
</span><span class='line'>04-17 14:17:50.509: D/SOAPHttpResponseHandler(317): Response HTTP status : 200
</span><span class='line'>04-17 14:17:50.517: D/SOAPHttpResponseHandler(317): Response HTTP headers :
</span><span class='line'>04-17 14:17:50.517: D/SOAPHttpResponseHandler(317): {
</span><span class='line'>04-17 14:17:50.517: D/SOAPHttpResponseHandler(317):     X-EBAY-ESB-GUID="urn:uuid:CC62052BA7B85308BC1367424536385"
</span><span class='line'>04-17 14:17:50.517: D/SOAPHttpResponseHandler(317):     X-EBAY-SOA-SERVICE-NAME="{http://www.ebay.com/marketplace/search/v1/services}FindingService"
</span><span class='line'>04-17 14:17:50.517: D/SOAPHttpResponseHandler(317):     Connection="Keep-Alive"
</span><span class='line'>04-17 14:17:50.517: D/SOAPHttpResponseHandler(317):     X-EBAY-SOA-MESSAGE-PROTOCOL="SOAP12"
</span><span class='line'>04-17 14:17:50.517: D/SOAPHttpResponseHandler(317):     Server="Apache-Coyote/1.1"
</span><span class='line'>04-17 14:17:50.517: D/SOAPHttpResponseHandler(317):     X-EBAY-SOA-REQUEST-ID="13e185c3-12d0-a0a9-ee72-82e2fff134e0!FindingService!10.10.158.231!v3apifindingcore[!FindItemServiceNextGen!10.10.158.231!v3apifindingcore[!MetadataDependencyService!10.86.122.101!v3mddscore[]]]"
</span><span class='line'>04-17 14:17:50.517: D/SOAPHttpResponseHandler(317):     X-EBAY-SOA-OPERATION-NAME="findItemsByKeywords"
</span><span class='line'>04-17 14:17:50.517: D/SOAPHttpResponseHandler(317):     X-EBAY-SOA-SERVICE-VERSION="1.12.0"
</span><span class='line'>04-17 14:17:50.517: D/SOAPHttpResponseHandler(317):     Transfer-Encoding="chunked"
</span><span class='line'>04-17 14:17:50.517: D/SOAPHttpResponseHandler(317):     Date="Wed, 17 Apr 2013 14:18:15 GMT"
</span><span class='line'>04-17 14:17:50.517: D/SOAPHttpResponseHandler(317):     X-EBAY-SOA-RESPONSE-DATA-FORMAT="XML"
</span><span class='line'>04-17 14:17:50.517: D/SOAPHttpResponseHandler(317):     X-EBAY-ESB-ENDPOINTURL="/Root/ESBFunctions/Services/Ports/7003/profile/search/v1/FindingService/destination_default/address_synapse"
</span><span class='line'>04-17 14:17:50.517: D/SOAPHttpResponseHandler(317):     Content-Encoding="gzip"
</span><span class='line'>04-17 14:17:50.517: D/SOAPHttpResponseHandler(317):     X-EBAY-SOA-SERVICE-METRICS="203269893"
</span><span class='line'>04-17 14:17:50.517: D/SOAPHttpResponseHandler(317):     X-EBAY-SOA-LOCALE-LIST="en-US_US"
</span><span class='line'>04-17 14:17:50.517: D/SOAPHttpResponseHandler(317):     Content-Type="application/soap+xml;charset=UTF-8"
</span><span class='line'>04-17 14:17:50.517: D/SOAPHttpResponseHandler(317): }
</span><span class='line'>04-17 14:17:50.517: D/SOAPHttpResponseHandler(317): Response message :
</span><span class='line'>04-17 14:17:50.517: D/SOAPHttpResponseHandler(317): &lt;?xml version='1.0' encoding='utf-8'?>&lt;soapenv:Envelope xmlns:soapenv="http://www.w3.org/2003/05/soap-envelope">&lt;soapenv:Header/>&lt;soapenv:Body>&lt;findItemsByKeywordsResponse xmlns="http://www.ebay.com/marketplace/search/v1/services">&lt;ack>Success&lt;/ack>&lt;version>1.12.0&lt;/version>&lt;timestamp>2013-04-17T14:18:15.791Z&lt;/timestamp>&lt;searchResult count="1">&lt;item>&lt;itemId>300853070145&lt;/itemId>&lt;title>2x Home Wall Chargers for Samsung Galaxy s 2 Epic Touch , 9100 , Nexus 4G&lt;/title>&lt;globalId>EBAY-US&lt;/globalId>&lt;primaryCategory>&lt;categoryId>123417&lt;/categoryId>&lt;categoryName>Chargers &amp; Cradles&lt;/categoryName>&lt;/primaryCategory>&lt;galleryURL>http://thumbs2.ebaystatic.com/m/mDzv8Uawtt-rUUIqsXn7WAQ/140.jpg&lt;/galleryURL>&lt;viewItemURL>http://www.ebay.com/itm/2x-Home-Wall-Chargers-Samsung-Galaxy-s-2-Epic-Touch-9100-Nexus-4G-/300853070145?pt=US_Cell_Phone_PDA_Chargers&lt;/viewItemURL>&lt;paymentMethod>PayPal&lt;/paymentMethod>&lt;autoPay>false&lt;/autoPay>&lt;postalCode>60654&lt;/postalCode>&lt;location>Chicago,IL,USA&lt;/location>&lt;country>US&lt;/country>&lt;shippingInfo>&lt;shippingServiceCost currencyId="USD">0.0&lt;/shippingServiceCost>&lt;shippingType>Free&lt;/shippingType>&lt;shipToLocations>US&lt;/shipToLocations>&lt;expeditedShipping>true&lt;/expeditedShipping>&lt;oneDayShippingAvailable>true&lt;/oneDayShippingAvailable>&lt;handlingTime>1&lt;/handlingTime>&lt;/shippingInfo>&lt;sellingStatus>&lt;currentPrice currencyId="USD">4.95&lt;/currentPrice>&lt;convertedCurrentPrice currencyId="USD">4.95&lt;/convertedCurrentPrice>&lt;sellingState>Active&lt;/sellingState>&lt;timeLeft>P10DT1H40M39S&lt;/timeLeft>&lt;/sellingStatus>&lt;listingInfo>&lt;bestOfferEnabled>false&lt;/bestOfferEnabled>&lt;buyItNowAvailable>false&lt;/buyItNowAvailable>&lt;startTime>2013-01-27T15:53:54.000Z&lt;/startTime>&lt;endTime>2013-04-27T15:58:54.000Z&lt;/endTime>&lt;listingType>StoreInventory&lt;/listingType>&lt;gift>false&lt;/gift>&lt;/listingInfo>&lt;returnsAccepted>true&lt;/returnsAccepted>&lt;condition>&lt;conditionId>1000&lt;/conditionId>&lt;conditionDisplayName>New&lt;/conditionDisplayName>&lt;/condition>&lt;isMultiVariationListing>false&lt;/isMultiVariationListing>&lt;topRatedListing>true&lt;/topRatedListing>&lt;/item>&lt;/searchResult>&lt;paginationOutput>&lt;pageNumber>1&lt;/pageNumber>&lt;entriesPerPage>1&lt;/entriesPerPage>&lt;totalPages>10679&lt;/totalPages>&lt;totalEntries>10679&lt;/totalEntries>&lt;/paginationOutput>&lt;itemSearchURL>http://www.ebay.com/sch/i.html?&lt;em>nkw=nexus+2&amp;&lt;/em>ddo=1&amp;&lt;em>ipg=1&amp;&lt;/em>pgn=1&lt;/itemSearchURL>&lt;/findItemsByKeywordsResponse>&lt;/soapenv:Body>&lt;/soapenv:Envelope>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>let's also try a soap fault case, for example, if you forget to fill in your <code>eBayAppId</code> in the shared client, then you will get:
<img class="center" src="/images/nano/tutorial03/screen_shot2.png" width="400" height="600"></p>

<p>This is just a bare minimum eBay Finding service based application, for a demo with more functions, please see the eBayDemoApp sample in the <code>sample\webservice</code> folder of Nano source, eBayDemoApp is a composite app which calls two eBay serivces behind, this app searches eBay by calling eBay Fining service, showes a list of matched items on UI, when an item is clicked, it will show item details by calling eBay Shopping service, see a screen shot below.</p>

<p><img class="center" src="/images/nano/tutorial03/screen_shot3.png" width="400" height="600"></p>

<p>Now it's your turn to create Android applications based on eBay Finding web service, see your next great service based app.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nano Tutorial 2 - a BarCode Generator sample]]></title>
    <link href="http://bulldog2011.github.com/blog/2013/04/17/nano-tutorial-2-a-barcode-sample/"/>
    <updated>2013-04-17T10:31:00+08:00</updated>
    <id>http://bulldog2011.github.com/blog/2013/04/17/nano-tutorial-2-a-barcode-sample</id>
    <content type="html"><![CDATA[<p>This is the second tutorial of Nano Tutorial series, in the <a href="http://bulldog2011.github.io/blog/2013/04/15/nano-tutorial-1-a-number-conversion-sample/">first tutorial</a>, I showed how to use Nano with a service called <a href="http://www.dataaccess.com/webservicesserver/numberconversion.wso">Number Conversion</a> from data access worldwide. Number conversion is a simple service, its request/response structures are quite simple. Today I will show you how to use Pico with a more complex service called <a href="http://www.webservicex.net/ws/WSDetails.aspx?CATID=8&amp;WSID=76">Barcode Generator</a> from webserviceX.NET, barcode generator service has a more complex request/response structures, it will return encoded binary image data in the response.</p>

<!--more-->


<p>By the way, since the wsdl driven development process in both tutorials are quite similar, I won't repeat too much details in this tutorial, I suppose you have already read tutorial one and basically understand the wsdl driven development process supported by Nano.</p>

<p>The whole source of this tutorial is <a href="https://github.com/bulldog2011/nano/tree/master/sample/webservice/BarCode">here</a>.</p>

<p>Let's cut to the point:</p>

<h2>Step 1 - Generate Java Proxy from WSDL</h2>

<p>Download <a href="https://github.com/bulldog2011/mwsc">mwsc</a> and run following command in terminal to generate the proxy:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>bin\mwsc.bat -nano -d generated http://www.webservicex.net/genericbarcode.asmx?WSDL&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>A few comments to the code generation:</p>

<blockquote><ul>
<li>During the code generation, you will get a few warnings say some ports in the wsdl will be ignored, just ignore these warnings, We won't use those ports in this tutorial, it's ok as long as the standard SOAP port is generated correctly.</li>
<li>By default, the proxy code will be generated in the sub-folder corresponding to the target namespace of the wsdl, you can use <code>-p</code> option to override the package name if needed.</li>
<li>There is a generated sub-folder called <code>client</code>, the SOAP and XML proxy interface will be generated in this folder.</li>
</ul>
</blockquote>

<h2>Step 2 - Create New Android Project, Add Nano Library and Generated Proxy into Your Project</h2>

<p>Create a simple Android project in eclipse(or other IDE you prefer), then:</p>

<blockquote><ol>
<li>Download <a href="https://github.com/bulldog2011/bulldog-repo/blob/master/repo/releases/com/leansoft/nano/0.7.0/nano-0.7.0.jar">latest nano library jar</a> and add it to the <code>libs</code> folder of your Android project.</li>
<li>Drag the above generated proxy into the <code>src</code> folder of your Android project.</li>
<li>Add following user permissions in the <code>AndroidManifest.xml</code> file to enable network access. <br/>
<code>xml
 &lt;uses-permission android:name="android.permission.INTERNET" /&gt;
 &lt;uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" /&gt;
</code></li>
</ol>
</blockquote>

<p>Now build the project to ensure it can build successfully.</p>

<p>Below is an eclipse package explorer screenshot after finishing this step:</p>

<p><img class="center" src="/images/nano/tutorial02/screen_shot1.png" width="400" height="600"></p>

<h2>Step 3 - Implement Appliction Logic and UI, Call Proxy to Invoke Web Service as Needed.</h2>

<p>First, create a shared service client as below:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>BarCodeServiceClient.java </span><a href='https://github.com/bulldog2011/nano/blob/master/sample/webservice/BarCode/src/net/webservicex/service/BarCodeServiceClient.java'>source </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">package</span> <span class="n">net</span><span class="o">.</span><span class="na">webservicex</span><span class="o">.</span><span class="na">service</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">import</span> <span class="nn">net.webservicex.client.BarCodeSoap_SOAPClient</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;/&lt;</span><span class="n">em</span><span class="o">&gt;*</span>
</span><span class='line'> <span class="o">*</span> <span class="nl">http:</span><span class="c1">//www.webservicex.net/genericbarcode.asmx</span>
</span><span class='line'> <span class="o">*</span>
</span><span class='line'> <span class="o">*</span> <span class="nd">@author</span> <span class="n">bulldog</span>
</span><span class='line'> <span class="o">*</span>
</span><span class='line'> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;/</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">BarCodeServiceClient</span> <span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="c1">// target endpoint</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="n">String</span> <span class="n">barCodeServiceUrl</span> <span class="o">=</span> <span class="s">&quot;http://www.webservicex.net/genericbarcode.asmx&quot;</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="kd">volatile</span> <span class="n">BarCodeSoap_SOAPClient</span> <span class="n">client</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// get a shared client</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="n">BarCodeSoap_SOAPClient</span> <span class="nf">getSharedClient</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">client</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">synchronized</span><span class="o">(</span><span class="n">BarCodeServiceClient</span><span class="o">.</span><span class="na">class</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">client</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">client</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BarCodeSoap_SOAPClient</span><span class="o">();</span>
</span><span class='line'>                <span class="n">client</span><span class="o">.</span><span class="na">setEndpointUrl</span><span class="o">(</span><span class="n">barCodeServiceUrl</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">client</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Now open the main layout file and add three UI components:</p>

<blockquote><ul>
<li>A <code>EditText</code> for barcode number input,</li>
<li>A <code>Button</code> for encoding trigger,</li>
<li>A <code>ImageView</code> for encoded barcode display.</li>
</ul>
</blockquote>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>activity_main.xml </span><a href='https://github.com/bulldog2011/nano/blob/master/sample/webservice/BarCode/res/layout/activity_main.xml'>source </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span><span class="ni">&amp;lt;</span>RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;<span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span>xmlns:tools=&quot;http://schemas.android.com/tools&quot;
</span><span class='line'>android:layout_width=&quot;match_parent&quot;
</span><span class='line'>android:layout_height=&quot;match_parent&quot;
</span><span class='line'>tools:context=&quot;.MainActivity&quot; <span class="ni">&amp;gt;</span>
</span><span class='line'>
</span><span class='line'><span class="ni">&amp;lt;</span>EditText
</span><span class='line'>    android:id=&quot;@+id/barCodeText&quot;
</span><span class='line'>    android:layout_width=&quot;wrap_content&quot;
</span><span class='line'>    android:layout_height=&quot;wrap_content&quot;
</span><span class='line'>    android:layout_alignParentLeft=&quot;true&quot;
</span><span class='line'>    android:layout_alignParentTop=&quot;true&quot;
</span><span class='line'>    android:layout_marginLeft=&quot;20dp&quot;
</span><span class='line'>    android:layout_marginTop=&quot;19dp&quot;
</span><span class='line'>    android:ems=&quot;10&quot;
</span><span class='line'>    android:singleLine=&quot;true&quot;
</span><span class='line'>    android:hint=&quot;Enter Barcode&quot; <span class="ni">&amp;gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="ni">&amp;lt;</span>requestFocus /<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/EditText<span class="ni">&amp;gt;</span>
</span><span class='line'>
</span><span class='line'><span class="ni">&amp;lt;</span>Button
</span><span class='line'>    android:id=&quot;@+id/encodeButton&quot;
</span><span class='line'>    android:layout_width=&quot;wrap_content&quot;
</span><span class='line'>    android:layout_height=&quot;wrap_content&quot;
</span><span class='line'>    android:layout_alignBaseline=&quot;@+id/barCodeText&quot;
</span><span class='line'>    android:layout_alignBottom=&quot;@+id/barCodeText&quot;
</span><span class='line'>    android:layout_toRightOf=&quot;@+id/barCodeText&quot;
</span><span class='line'>    android:text=&quot;Encode&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>
</span><span class='line'><span class="ni">&amp;lt;</span>ImageView
</span><span class='line'>    android:id=&quot;@+id/barCodeImage&quot;
</span><span class='line'>    android:layout_width=&quot;wrap_content&quot;
</span><span class='line'>    android:layout_height=&quot;wrap_content&quot;
</span><span class='line'>    android:layout_below=&quot;@+id/encodeButton&quot;
</span><span class='line'>    android:layout_centerHorizontal=&quot;true&quot;
</span><span class='line'>    android:layout_marginTop=&quot;98dp&quot;
</span><span class='line'>    android:src=&quot;@drawable/ic_launcher&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;&lt;/RelativeLayout&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><img class="center" src="/images/nano/tutorial02/screen_shot2.png" width="300" height="500"></p>

<p>Now implement application logic in <code>MainActivity</code> class as below:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>MainActivity.java </span><a href='https://github.com/bulldog2011/nano/blob/master/sample/webservice/BarCode/src/com/leansoft/nano/sample/MainActivity.java'>source  </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">leansoft</span><span class="o">.</span><span class="na">nano</span><span class="o">.</span><span class="na">sample</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">import</span> <span class="nn">com.leansoft.nano.soap11.Fault</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.leansoft.nano.ws.SOAPServiceCallback</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">import</span> <span class="nn">net.webservicex.BarCodeData</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">net.webservicex.BarcodeOption</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">net.webservicex.BarcodeType</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">net.webservicex.CheckSumMethod</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">net.webservicex.GenerateBarCode</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">net.webservicex.GenerateBarCodeResponse</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">net.webservicex.ImageFormats</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">net.webservicex.ShowTextPosition</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">net.webservicex.client.BarCodeSoap_SOAPClient</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">net.webservicex.service.BarCodeServiceClient</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.os.Bundle</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.view.View</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.view.View.OnClickListener</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.Button</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.EditText</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.ImageView</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.Toast</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.app.Activity</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.graphics.Bitmap</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.graphics.BitmapFactory</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MainActivity</span> <span class="kd">extends</span> <span class="n">Activity</span> <span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="nd">@Override</span>
</span><span class='line'><span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>
</span><span class='line'>    <span class="n">setContentView</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">activity_main</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">Button</span> <span class="n">encodeButton</span> <span class="o">=</span> <span class="o">(</span><span class="n">Button</span><span class="o">)</span> <span class="k">this</span><span class="o">.</span><span class="na">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">encodeButton</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">encodeButton</span><span class="o">.</span><span class="na">setOnClickListener</span><span class="o">(</span><span class="k">new</span> <span class="n">OnClickListener</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="nd">@Override</span>
</span><span class='line'>        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">View</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="c1">// get shared client</span>
</span><span class='line'>            <span class="n">BarCodeSoap_SOAPClient</span> <span class="n">client</span> <span class="o">=</span> <span class="n">BarCodeServiceClient</span><span class="o">.</span><span class="na">getSharedClient</span><span class="o">();</span>
</span><span class='line'>            <span class="n">client</span><span class="o">.</span><span class="na">setDebug</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span> <span class="c1">// enable soap message logging</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">// build request</span>
</span><span class='line'>            <span class="n">BarCodeData</span> <span class="n">barCodeData</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BarCodeData</span><span class="o">();</span>
</span><span class='line'>            <span class="n">barCodeData</span><span class="o">.</span><span class="na">height</span> <span class="o">=</span> <span class="mi">125</span><span class="o">;</span>
</span><span class='line'>            <span class="n">barCodeData</span><span class="o">.</span><span class="na">width</span> <span class="o">=</span> <span class="mi">225</span><span class="o">;</span>
</span><span class='line'>            <span class="n">barCodeData</span><span class="o">.</span><span class="na">angle</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>            <span class="n">barCodeData</span><span class="o">.</span><span class="na">ratio</span> <span class="o">=</span> <span class="mi">5</span><span class="o">;</span>
</span><span class='line'>            <span class="n">barCodeData</span><span class="o">.</span><span class="na">module</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>            <span class="n">barCodeData</span><span class="o">.</span><span class="na">left</span> <span class="o">=</span> <span class="mi">25</span><span class="o">;</span>
</span><span class='line'>            <span class="n">barCodeData</span><span class="o">.</span><span class="na">top</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>            <span class="n">barCodeData</span><span class="o">.</span><span class="na">checkSum</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>            <span class="n">barCodeData</span><span class="o">.</span><span class="na">fontName</span> <span class="o">=</span> <span class="s">&quot;Arial&quot;</span><span class="o">;</span>
</span><span class='line'>            <span class="n">barCodeData</span><span class="o">.</span><span class="na">barColor</span> <span class="o">=</span> <span class="s">&quot;Black&quot;</span><span class="o">;</span>
</span><span class='line'>            <span class="n">barCodeData</span><span class="o">.</span><span class="na">bgColor</span> <span class="o">=</span> <span class="s">&quot;White&quot;</span><span class="o">;</span>
</span><span class='line'>            <span class="n">barCodeData</span><span class="o">.</span><span class="na">fontSize</span> <span class="o">=</span> <span class="mf">10.0f</span><span class="o">;</span>
</span><span class='line'>            <span class="n">barCodeData</span><span class="o">.</span><span class="na">barcodeOption</span> <span class="o">=</span> <span class="n">BarcodeOption</span><span class="o">.</span><span class="na">BOTH</span><span class="o">;</span>
</span><span class='line'>            <span class="n">barCodeData</span><span class="o">.</span><span class="na">barcodeType</span> <span class="o">=</span> <span class="n">BarcodeType</span><span class="o">.</span><span class="na">CODE_2_5_INTERLEAVED</span><span class="o">;</span>
</span><span class='line'>            <span class="n">barCodeData</span><span class="o">.</span><span class="na">checkSumMethod</span> <span class="o">=</span> <span class="n">CheckSumMethod</span><span class="o">.</span><span class="na">NONE</span><span class="o">;</span>
</span><span class='line'>            <span class="n">barCodeData</span><span class="o">.</span><span class="na">showTextPosition</span> <span class="o">=</span> <span class="n">ShowTextPosition</span><span class="o">.</span><span class="na">BOTTOM_CENTER</span><span class="o">;</span>
</span><span class='line'>            <span class="n">barCodeData</span><span class="o">.</span><span class="na">barCodeImageFormat</span> <span class="o">=</span> <span class="n">ImageFormats</span><span class="o">.</span><span class="na">PNG</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">GenerateBarCode</span> <span class="n">request</span> <span class="o">=</span> <span class="k">new</span> <span class="n">GenerateBarCode</span><span class="o">();</span>
</span><span class='line'>            <span class="n">request</span><span class="o">.</span><span class="na">barCodeParam</span> <span class="o">=</span> <span class="n">barCodeData</span><span class="o">;</span>
</span><span class='line'>            <span class="n">request</span><span class="o">.</span><span class="na">barCodeText</span> <span class="o">=</span> <span class="o">((</span><span class="n">EditText</span><span class="o">)</span><span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">barCodeText</span><span class="o">)).</span><span class="na">getText</span><span class="o">().</span><span class="na">toString</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">// make API call with registered callbacks</span>
</span><span class='line'>            <span class="n">client</span><span class="o">.</span><span class="na">generateBarCode</span><span class="o">(</span><span class="n">request</span><span class="o">,</span> <span class="k">new</span> <span class="n">SOAPServiceCallback</span><span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span><span class="n">GenerateBarCodeResponse</span><span class="o">&amp;</span><span class="n">gt</span><span class="o">;()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>                <span class="nd">@Override</span>
</span><span class='line'>                <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onSuccess</span><span class="o">(</span><span class="n">GenerateBarCodeResponse</span> <span class="n">responseObject</span><span class="o">)</span> <span class="o">{</span> <span class="c1">// success</span>
</span><span class='line'>                    <span class="n">ImageView</span> <span class="n">barCodeImage</span> <span class="o">=</span> <span class="o">(</span><span class="n">ImageView</span><span class="o">)</span><span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">barCodeImage</span><span class="o">);</span>
</span><span class='line'>                    <span class="kt">byte</span><span class="o">[]</span> <span class="n">imageData</span> <span class="o">=</span> <span class="n">responseObject</span><span class="o">.</span><span class="na">generateBarCodeResult</span><span class="o">;</span>
</span><span class='line'>                    <span class="n">Bitmap</span> <span class="n">bitmap</span> <span class="o">=</span> <span class="n">BitmapFactory</span><span class="o">.</span><span class="na">decodeByteArray</span><span class="o">(</span><span class="n">imageData</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">imageData</span><span class="o">.</span><span class="na">length</span><span class="o">);</span>
</span><span class='line'>                    <span class="n">barCodeImage</span><span class="o">.</span><span class="na">setImageBitmap</span><span class="o">(</span><span class="n">bitmap</span><span class="o">);</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>                <span class="nd">@Override</span>
</span><span class='line'>                <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onFailure</span><span class="o">(</span><span class="n">Throwable</span> <span class="n">error</span><span class="o">,</span> <span class="n">String</span> <span class="n">errorMessage</span><span class="o">)</span> <span class="o">{</span><span class="c1">// http or parsing error</span>
</span><span class='line'>                    <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">,</span> <span class="n">errorMessage</span><span class="o">,</span> <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>                <span class="nd">@Override</span>
</span><span class='line'>                <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onSOAPFault</span><span class="o">(</span><span class="n">Object</span> <span class="n">soapFault</span><span class="o">)</span> <span class="o">{</span> <span class="c1">// soap fault</span>
</span><span class='line'>                    <span class="n">Fault</span> <span class="n">fault</span> <span class="o">=</span> <span class="o">(</span><span class="n">Fault</span><span class="o">)</span><span class="n">soapFault</span><span class="o">;</span>
</span><span class='line'>                    <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">,</span> <span class="n">fault</span><span class="o">.</span><span class="na">faultstring</span><span class="o">,</span> <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="o">});</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">});</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>The service invocation logic is quite self explanatory, you get shared SOAP barcode proxy client first, then build encoding request, make API call with the request and registered callbacks, if API call is successful, you just display the barcode image on UI, otherwise, you display error message accordingly using Android <code>Toast</code> UI component.</p>

<h2>Final Step - Run the Demo</h2>

<p>See a screen shot below:</p>

<p><img class="center" src="/images/nano/tutorial02/screen_shot3.png" width="600" height="800"></p>

<p>And the debug output:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>04-17 03:35:21.116: D/NanoSOAPClient(283): Sending request to : http://www.webservicex.net/genericbarcode.asmx
</span><span class='line'>04-17 03:35:21.116: D/NanoSOAPClient(283): Request HTTP headers :
</span><span class='line'>04-17 03:35:21.116: D/NanoSOAPClient(283): {
</span><span class='line'>04-17 03:35:21.116: D/NanoSOAPClient(283):     Accept="text/xml"
</span><span class='line'>04-17 03:35:21.116: D/NanoSOAPClient(283): }
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283): Request message :
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283): &lt;?xml version='1.0' encoding='UTF-8' ?>
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283): &lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.webservicex.net/">
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283):   &lt;soapenv:Body>
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283):     &lt;GenerateBarCode>
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283):       &lt;BarCodeParam>
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283):         &lt;Height>125&lt;/Height>
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283):         &lt;Width>225&lt;/Width>
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283):         &lt;Angle>0&lt;/Angle>
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283):         &lt;Ratio>5&lt;/Ratio>
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283):         &lt;Module>0&lt;/Module>
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283):         &lt;Left>25&lt;/Left>
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283):         &lt;Top>0&lt;/Top>
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283):         &lt;CheckSum>false&lt;/CheckSum>
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283):         &lt;FontName>Arial&lt;/FontName>
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283):         &lt;BarColor>Black&lt;/BarColor>
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283):         &lt;BGColor>White&lt;/BGColor>
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283):         &lt;FontSize>10.0&lt;/FontSize>
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283):         &lt;barcodeOption>Both&lt;/barcodeOption>
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283):         &lt;barcodeType>Code_2_5_interleaved&lt;/barcodeType>
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283):         &lt;checkSumMethod>None&lt;/checkSumMethod>
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283):         &lt;showTextPosition>BottomCenter&lt;/showTextPosition>
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283):         &lt;BarCodeImageFormat>PNG&lt;/BarCodeImageFormat>=
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283):       &lt;/BarCodeParam>
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283):       &lt;BarCodeText>123456789&lt;/BarCodeText>
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283):     &lt;/GenerateBarCode>
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283):   &lt;/soapenv:Body>
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283): &lt;/soapenv:Envelope>
</span><span class='line'>04-17 03:35:21.176: D/dalvikvm(283): GC_FOR_MALLOC freed 12599 objects / 580360 bytes in 35ms
</span><span class='line'>04-17 03:35:22.838: D/SOAPHttpResponseHandler(283): Response HTTP status : 200
</span><span class='line'>04-17 03:35:22.838: D/SOAPHttpResponseHandler(283): Response HTTP headers :
</span><span class='line'>04-17 03:35:22.846: D/SOAPHttpResponseHandler(283): {
</span><span class='line'>04-17 03:35:22.846: D/SOAPHttpResponseHandler(283):     X-AspNet-Version="4.0.30319"
</span><span class='line'>04-17 03:35:22.846: D/SOAPHttpResponseHandler(283):     Date="Wed, 17 Apr 2013 03:35:56 GMT"
</span><span class='line'>04-17 03:35:22.846: D/SOAPHttpResponseHandler(283):     Vary="Accept-Encoding"
</span><span class='line'>04-17 03:35:22.846: D/SOAPHttpResponseHandler(283):     Content-Length="1951"
</span><span class='line'>04-17 03:35:22.846: D/SOAPHttpResponseHandler(283):     Content-Encoding="gzip"
</span><span class='line'>04-17 03:35:22.846: D/SOAPHttpResponseHandler(283):     Content-Type="text/xml; charset=utf-8"
</span><span class='line'>04-17 03:35:22.846: D/SOAPHttpResponseHandler(283):     X-Powered-By="ASP.NET"
</span><span class='line'>04-17 03:35:22.846: D/SOAPHttpResponseHandler(283):     Server="Microsoft-IIS/7.0"
</span><span class='line'>04-17 03:35:22.846: D/SOAPHttpResponseHandler(283):     Cache-Control="private, max-age=0"
</span><span class='line'>04-17 03:35:22.846: D/SOAPHttpResponseHandler(283): }
</span><span class='line'>04-17 03:35:22.846: D/SOAPHttpResponseHandler(283): Response message :
</span><span class='line'>04-17 03:35:22.846: D/SOAPHttpResponseHandler(283): &lt;?xml version="1.0" encoding="utf-8"?>&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">&lt;soap:Body>&lt;GenerateBarCodeResponse xmlns="http://www.webservicex.net/">&lt;GenerateBarCodeResult>iVBORw0KGgoAAAANSUhEUgAAAOEAAAB9CAYAAABUFwRCAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAABkVJREFUeF7t2gmS2jAUhGFzOx/Ix+EuXGVu4uBF8CQvMBNv3fVTNTUJYPk9ub9Ihtza56Pa+XG73aruNPF3OmV8Pj336f3xfeU4vxl3bZw4LV09cdy1Osvj1vr+ax87Xy6GP3oGOoR7P5499aeIv7s/l8+nOj69P76vHOc3466NE+ckjZnqWquzPG6t77/2sff1YvxjZ2DQsfPjE6pvwh1x/TW8a+g/4V06f4kMhDuHyXB4EI4rNAgN0y3SEghBKBJV3zJBCELfdIt0BkIQikTVt0wQgtA33SKdgRCEIlH1LROEIPRNt0hnIAShSFR9ywQhCH3TLdIZCEEoElXfMkEIQt90i3QGQhCKRNW3TBCC0DfdIp2BEIQiUfUtE4Qg9E23SGcgBKFIVH3LBCEIfdMt0hkIQSgSVd8yQQhC33SLdAZCEIpE1bdMEILQN90inYEQhCJR9S0ThCD0TbdIZyAEoUhUfcsEIQh90y3SGQhBKBJV3zJBCELfdIt0BkIQikTVt0wQgtA33SKdgRCEIlH1LROEIPRNt0hnIAShSFR9ywQhCH3TLdIZCEEoElXfMkEIQt90i3QGQhCKRNW3TBCC0DfdIp2BEIQiUfUtE4Qg9E23SGcgBKFIVH3LBCEIfdMt0hkIQSgSVd8yQQhC33SLdAZCEIpE1bdMEILQN90inYEQhCJR9S0ThCD0TbdIZyAEoUhUfcsEIQh90y3SGQhBKBJV3zJBCELfdIt0BkIQikTVt0wQgtA33SKdgRCEIlH1LROEIPRNt0hnIAShSFR9ywQhCH3TLdIZCEEoElXfMkEIQt90i3QGQhCKRNW3TBCC0DfdIp2BEIQiUfUtE4Qg9E23SGcgBKFIVH3LBCEIfdMt0hkIQSgSVd8yQQhC33SLdAZCEIpE1bdMEILQN90inYEQhCJR9S0ThCD0TbdIZyAEoUhUfcsEIQh90y3SGQhBKBJV3zJBCELfdIt0BkIQikTVt0wQgtA33SKdgRCEIlH1LROEIPRNt0hnIAShSFR9ywQhCH3TLdIZCEEoElXfMkEIQt90i3QGQhCKRNW3TBCC0DfdIp2BEIQiUfUtE4Qg9E23SGcgBKFIVH3LBCEIfdMt0hkIQSgSVd8yQQhC33SLdAZCEIpE1bdMEILQN90inYEQhCJR9S0ThCD0TbdIZyAEoUhUfcsEIQh90y3SGQhBKBJV3zJBCELfdIt0BkIQikTVt0wQgtA33SKdgRCEIlH1LROEIPRNt0hnIAShSFR9ywQhCH3TLdIZCEEoElXfMk9B6Dud23VWVVXb/XSP9Hu70RnpSjMAwitdjVALCC96YXYoC4Q7TOoWQ4Jwi1nUGONCCB9tU9Xt/SdM3M+9rcdtWVW+9mj6bdrwUxyXhuiPz1/7udfhuO7Ypn28TvnT3us0ZtXWqZjsXO/Xq2Y8cq2W+Fp9b2N7axEBoQagLaq8CMIOYIlpeC7lvO3DPILpcQU88bUwK49mCrR77jVmMYP9+xOUGcBvqxF3XueAPNb5Pl//2pcQQbhFvDXGOB1hWpnqpslXrQ5WFtiZlfI1xzOv9cfXxUrYrXQLq+ZzPZysxLPXcFgt81UyrqZhnF/1kJ8MhBqAtqjyfISPx7BFW1t5+k6XkWSrz+u9TxiTMYcx6teWM4AsV9el2Z2sujMrYfrHYxbh8kocTwnCLeKtMcbpCOe3eNPJy7aK2T3fdMvZoexXqhJh8fcM7wjmEe4Zp9vWYhXMVuLxXjGu3uM9bb6lBqEGjeOqlEA4YFnaRnbWivuwb+7rXivmiGL8AOW1zZxbmWdX62ElXNyexg9mmnu/lV26J2UlPC74VzrT5RF+AjhM5nurmn3w8nGLO6xsPYrJNjO8lq7YZHuZttHlPeEStLV7Uu4JrwTjyFoujfA7gBFh+pQ1fI2QvsaYXX7CfebknnCKsN8Sl+N8cVy+5Y5gly8194RHMjj3XNdFuLaKFavW4kf/5RjFceV9Zvf35U89Z1bG/tqtfFpanH8W8cL1B+G5MI48+2URDt/xTX/SQpR/6b6wunz8sr48Lv+yPl/0iu8ts6sUV+CV/xzw5XeE3dAgPJLBuee6DsJz5+FyZwfh5S7JbgWBcLep/b+BQfh/86d0NAgverVAeNELs0NZ/wANCo7oOuyQVQAAAABJRU5ErkJggg==&lt;/GenerateBarCodeResult>&lt;/GenerateBarCodeResponse>&lt;/soap:Body>&lt;/soap:Envelope>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nano Tutorial 1 - a Number Conversion Sample]]></title>
    <link href="http://bulldog2011.github.com/blog/2013/04/15/nano-tutorial-1-a-number-conversion-sample/"/>
    <updated>2013-04-15T20:14:00+08:00</updated>
    <id>http://bulldog2011.github.com/blog/2013/04/15/nano-tutorial-1-a-number-conversion-sample</id>
    <content type="html"><![CDATA[<p>This is the first post of Nano Tutorial Series, in this post, I will show you how easy to use <a href="https://github.com/bulldog2011/nano">Nano framework</a> to put WSDL driven application development on Android platform into practice. If this is the first time you get to know Nano, then after this tutorial, you will basically understand what Nano can do for you, and the basic development process when using Nano to carry out WSDL driven development on Android. If you want to see the big picture, please read <a href="http://bulldog2011.github.io/blog/2013/04/15/wsdl-driven-development-on-android-the-big-picture/">this post</a> first.</p>

<p>The whole source of this demo is <a href="https://github.com/bulldog2011/nano/tree/master/sample/webservice/NumberConverter">here</a>.</p>

<p>WSDL driven development using Nano framework has following steps:</p>

<blockquote><ol>
<li>Generate Java proxy from WSDL</li>
<li>Create new Android project, add Nano runtime and generated proxy into your project</li>
<li>Implement appliction logic and UI, call proxy to invoke web service as needed.</li>
</ol>
</blockquote>

<p>Let me cut to the point and show you each step using a simple <a href="http://www.dataaccess.com/webservicesserver/numberconversion.wso">Number Conversion</a> web serivce from <a href="http://www.dataaccess.com/">Data Access Worldwide</a>.</p>

<!--more-->


<h2>Step 1 - Generate Java Proxy from WSDL</h2>

<p>Nano has an accompanying code generator which can generate Java proxy for Android from wsdl, the tool is called <a href="https://github.com/bulldog2011/mwsc">mwsc</a>, please download the latest zip package <a href="https://github.com/bulldog2011/bulldog-repo/blob/master/repo/releases/com/leansoft/mwsc/0.6.0/mwsc-0.6.0-bin.zip">here</a> then extract it into your local folder.
<strong><em>Note</em></strong> : mwsc code generator needs Java 1.6 or above to run, so please ensure Java is installed on your OS, if not, please install it first.</p>

<p>The command line script <code>mwsc.bat</code> is in the bin folder, note, <code>mwsc.bat</code> is for windows, for linux, please use <code>mwsc</code> in the same folder. Before code generation, you may optionally create a folder as your code generation target(for example, <code>generated</code>), otherwise, mwsc will generate code in current folder. Now let's generate code from wsdl by running flowing command in the terminal:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>bin\mwsc.bat -nano -d generated http://www.dataaccess.com/webservicesserver/numberconversion.wso?WSDL&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>If everything works fine, you will see the code generator output <code>generating code…</code> and <code>done</code> at the end, the target proxy will be generated in the <code>generated</code> folder.</p>

<h2>Step 2 - Create New Android Project, Add Nano Library and Generated Proxy into Your Project</h2>

<p>Now let's create a simple Android project in eclipse(or other IDE you prefer), then you need to:</p>

<blockquote><ol>
<li>Download <a href="https://github.com/bulldog2011/bulldog-repo/blob/master/repo/releases/com/leansoft/nano/0.7.0/nano-0.7.0.jar">latest nano library jar</a> and add it to the <code>libs</code> folder of your Android project.</li>
<li>Drag the above generated proxy into the <code>src</code> folder of your Android project.</li>
<li>Add following user permissions in the <code>AndroidManifest.xml</code> file to enable network access. <br/>
<code>xml
 &lt;uses-permission android:name="android.permission.INTERNET" /&gt;
 &lt;uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" /&gt;
</code></li>
</ol>
</blockquote>

<p>Now since both Nano runtime library and the NumberConversion web service proxy have been added in the project, you can try to refresh(or build) the project, if no build error, job well done, you can continue to the next step, otherwise, please do some troubleshooting, or check the source of this tutorial(in the sample/webservice folder).</p>

<p>Below is an eclipse package explorer screenshot after finishing this step:</p>

<p><img class="center" src="/images/nano/tutorial01/screen_shot1.png" width="600" height="800"></p>

<h2>Step 3 - Implement Appliction Logic and UI, Call Proxy to Invoke Web Service as Needed.</h2>

<p>A SOAP web service client called <code>NumberConversionSoapType_SOAPClient</code> has been generated in the <code>com.dataaccess.webservicesserver.client</code> package, it's the main proxy to the external number conversion service, you can invoke number conversion service by calling methods on a <code>NumberConversionSoapType_SOAPClient</code> instance. As a Nano best practice, it's not necessary for you to initiate a new client everytime you need to call service, a singleton client instance is enough for the whole application, so before writing any application logic, let's create a shared NumberConversion service client for later use first, see code below:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>NumberConversionServiceClient.java </span><a href='https://github.com/bulldog2011/nano/blob/master/sample/webservice/NumberConverter/src/com/dataaccess/service/NumberConversionServiceClient.java'>source </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">dataaccess</span><span class="o">.</span><span class="na">service</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">import</span> <span class="nn">com.dataaccess.webservicesserver.client.NumberConversionSoapType_SOAPClient</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;/&lt;</span><span class="n">em</span><span class="o">&gt;*</span>
</span><span class='line'> <span class="o">*</span> <span class="n">The</span> <span class="n">Number</span> <span class="n">Conversion</span> <span class="n">Web</span> <span class="n">Service</span><span class="o">,</span> <span class="n">implemented</span> <span class="n">with</span> <span class="n">Visual</span> <span class="n">DataFlex</span><span class="o">,</span>
</span><span class='line'> <span class="o">*</span> <span class="n">provides</span> <span class="n">functions</span> <span class="n">that</span> <span class="n">convert</span> <span class="n">numbers</span> <span class="n">into</span> <span class="n">words</span> <span class="n">or</span> <span class="n">dollar</span> <span class="n">amounts</span><span class="o">.</span>
</span><span class='line'> <span class="o">*</span>
</span><span class='line'> <span class="o">*</span> <span class="nl">http:</span><span class="c1">//www.dataaccess.com/webservicesserver/numberconversion.wso</span>
</span><span class='line'> <span class="o">*</span>
</span><span class='line'> <span class="o">*</span> <span class="nd">@author</span> <span class="n">bulldog</span>
</span><span class='line'> <span class="o">*</span>
</span><span class='line'> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;/</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">NumberConversionServiceClient</span> <span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="c1">// target endpoint</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="n">String</span> <span class="n">numberConversionServiceUrl</span> <span class="o">=</span> <span class="s">&quot;http://www.dataaccess.com/webservicesserver/numberconversion.wso&quot;</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="kd">volatile</span> <span class="n">NumberConversionSoapType_SOAPClient</span> <span class="n">client</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// get a shared client</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="n">NumberConversionSoapType_SOAPClient</span> <span class="nf">getSharedClient</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">client</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">synchronized</span><span class="o">(</span><span class="n">NumberConversionServiceClient</span><span class="o">.</span><span class="na">class</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">client</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">client</span> <span class="o">=</span> <span class="k">new</span> <span class="n">NumberConversionSoapType_SOAPClient</span><span class="o">();</span>
</span><span class='line'>                <span class="n">client</span><span class="o">.</span><span class="na">setEndpointUrl</span><span class="o">(</span><span class="n">numberConversionServiceUrl</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">client</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>The code is quite self-explanatory, the <code>getSharedClient</code> static factory method just returns a NumberConversionSoapType_SOAPClient instance with specified target service endpoint address, and there will be only one such client instance within the application.</p>

<p>With the help of the NumberConversion service proxy generated from WSDL, web service call through Nano is extremely simple, let's review and understand the generated numberToWords proxy interface first before writing calling logic:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>NumberConversionSoapType_SOAPClient.java </span><a href='https://github.com/bulldog2011/nano/blob/master/sample/webservice/NumberConverter/src/com/dataaccess/webservicesserver/client/NumberConversionSoapType_SOAPClient.java'>source  </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c1">// Generated by wsdl compiler for android/java</span>
</span><span class='line'><span class="c1">// DO NOT CHANGE!</span>
</span><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">dataaccess</span><span class="o">.</span><span class="na">webservicesserver</span><span class="o">.</span><span class="na">client</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">import</span> <span class="nn">com.leansoft.nano.ws.SOAPServiceCallback</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.leansoft.nano.ws.NanoSOAPClient</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.dataaccess.webservicesserver.NumberToDollars</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.dataaccess.webservicesserver.NumberToWords</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.dataaccess.webservicesserver.NumberToWordsResponse</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.dataaccess.webservicesserver.NumberToDollarsResponse</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;/&lt;</span><span class="n">em</span><span class="o">&gt;*</span>
</span><span class='line'> <span class="n">This</span> <span class="kd">class</span> <span class="nc">is</span> <span class="n">the</span> <span class="n">SOAP</span> <span class="n">client</span> <span class="n">to</span> <span class="n">the</span> <span class="n">NumberConversionSoapType</span> <span class="n">Web</span> <span class="n">Service</span><span class="o">.</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;/</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">NumberConversionSoapType_SOAPClient</span> <span class="kd">extends</span> <span class="n">NanoSOAPClient</span> <span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="cm">/**</span>
</span><span class='line'><span class="cm"> Returns the word corresponding to the positive number passed as parameter. Limited to quadrillions.</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">numberToWords</span><span class="o">(</span><span class="n">NumberToWords</span> <span class="n">requestObject</span><span class="o">,</span> <span class="n">SOAPServiceCallback</span><span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span><span class="n">NumberToWordsResponse</span><span class="o">&amp;</span><span class="n">gt</span><span class="o">;</span> <span class="n">serviceCallback</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="kd">super</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">requestObject</span><span class="o">,</span> <span class="n">serviceCallback</span><span class="o">,</span> <span class="n">NumberToWordsResponse</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> Returns the non-zero dollar amount of the passed number.</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">numberToDollars</span><span class="o">(</span><span class="n">NumberToDollars</span> <span class="n">requestObject</span><span class="o">,</span> <span class="n">SOAPServiceCallback</span><span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span><span class="n">NumberToDollarsResponse</span><span class="o">&amp;</span><span class="n">gt</span><span class="o">;</span> <span class="n">serviceCallback</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="kd">super</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">requestObject</span><span class="o">,</span> <span class="n">serviceCallback</span><span class="o">,</span> <span class="n">NumberToDollarsResponse</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>This is just a plain old interface generated from wsdl, unlike normal interface, this interface is asynchronous, when you call <code>numberToWords</code> service, you need to provide a request of type <code>NumberToWords</code> as first parameter, also you need to provide(or register) a callback implementing interface <code>SOAPServiceCallback</code>, see definition of this interface below:
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>XMLServiceCallback.java </span><a href='https://github.com/bulldog2011/nano/blob/master/src/main/java/com/leansoft/nano/ws/XMLServiceCallback.java'>source  </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">leansoft</span><span class="o">.</span><span class="na">nano</span><span class="o">.</span><span class="na">ws</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">XMLServiceCallback</span><span class="o">&lt;</span><span class="n">R</span><span class="o">&gt;</span> <span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kd">public</span> <span class="kt">void</span> <span class="n">onSuccess</span><span class="o">(</span><span class="n">R</span> <span class="n">responseObject</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">onFailure</span><span class="o">(</span><span class="n">Throwable</span> <span class="n">error</span><span class="o">,</span> <span class="n">String</span> <span class="n">errorMessage</span><span class="o">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>SOAPServiceCallback.java </span><a href='https://github.com/bulldog2011/nano/blob/master/src/main/java/com/leansoft/nano/ws/SOAPServiceCallback.java'>source  </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">leansoft</span><span class="o">.</span><span class="na">nano</span><span class="o">.</span><span class="na">ws</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">SOAPServiceCallback</span><span class="o">&lt;</span><span class="n">R</span><span class="o">&gt;</span> <span class="kd">extends</span> <span class="n">XMLServiceCallback</span><span class="o">&lt;</span><span class="n">R</span><span class="o">&gt;</span> <span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kd">public</span> <span class="kt">void</span> <span class="n">onSOAPFault</span><span class="o">(</span><span class="n">Object</span> <span class="n">soapFault</span><span class="o">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><code>SOAPServiceCallback</code> interface supports three callback methods, <code>onSuccess</code>, <code>onFailure</code> and <code>onSOAPFault</code> callbacks, success callback will be called if the service invocation succeed, and you will get a response object of type <code>NumberToWordsResponse</code>, usually, in success callback, you implement response handling logic and update UI according to the response; failure callback will be called if there is any HTTP or Nano parsing error, you may get an exception and an error message in such case, usually, you implement error handling logic in failure callback and update UI accordingly; soap fault callback will be called if Nano get a SOAP fault from service response, usually, you implement error handling logic in the soap fault callback and update UI accordingly.</p>

<p>By the way, although not necessary, I suggest you to review all proxy code generated by mwsc, this will help you better understand the inner working of Nano.</p>

<p>Now time to the UI part, for this simple demo, we only need an <code>EditText</code> for number input, and two <code>Button</code>, one for number to dollars conversion, the other for number to words conversion, see graphical layout screenshot below:</p>

<p><img class="center" src="/images/nano/tutorial01/screen_shot2.png" width="400" height="600"></p>

<p>Now let's implement application logic by calling the <code>numberToWords</code> or <code>numberToDollars</code> services,
the application logic is implemented in the <code>MainActivity</code> class, a registered <code>onClick</code> method will be triggered when you click the <code>Number To Words</code> button on the UI:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>MainActivity.m </span><a href='https://github.com/bulldog2011/nano/blob/master/sample/webservice/NumberConverter/src/com/leansoft/nano/sample/MainActivity.java'>source  </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">Button</span> <span class="n">numberToWordsButton</span> <span class="o">=</span> <span class="o">(</span><span class="n">Button</span><span class="o">)</span> <span class="k">this</span><span class="o">.</span><span class="na">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">numToWordsButton</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">numberToWordsButton</span><span class="o">.</span><span class="na">setOnClickListener</span><span class="o">(</span><span class="k">new</span> <span class="n">OnClickListener</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">View</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// get shared client</span>
</span><span class='line'>        <span class="n">NumberConversionSoapType_SOAPClient</span> <span class="n">client</span> <span class="o">=</span> <span class="n">NumberConversionServiceClient</span><span class="o">.</span><span class="na">getSharedClient</span><span class="o">();</span>
</span><span class='line'>        <span class="n">client</span><span class="o">.</span><span class="na">setDebug</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span> <span class="c1">// enable soap message logging</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// build request</span>
</span><span class='line'>        <span class="n">NumberToWords</span> <span class="n">request</span> <span class="o">=</span> <span class="k">new</span> <span class="n">NumberToWords</span><span class="o">();</span>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">String</span> <span class="n">number</span> <span class="o">=</span> <span class="o">((</span><span class="n">EditText</span><span class="o">)</span><span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">numerInputText</span><span class="o">)).</span><span class="na">getText</span><span class="o">().</span><span class="na">toString</span><span class="o">();</span>
</span><span class='line'>            <span class="n">request</span><span class="o">.</span><span class="na">ubiNum</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BigInteger</span><span class="o">(</span><span class="n">number</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">NumberFormatException</span> <span class="n">ex</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">,</span> <span class="s">&quot;Invalid integer number&quot;</span><span class="o">,</span> <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>            <span class="k">return</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// make API call and register callbacks</span>
</span><span class='line'>        <span class="n">client</span><span class="o">.</span><span class="na">numberToWords</span><span class="o">(</span><span class="n">request</span><span class="o">,</span> <span class="k">new</span> <span class="n">SOAPServiceCallback</span><span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span><span class="n">NumberToWordsResponse</span><span class="o">&amp;</span><span class="n">gt</span><span class="o">;()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>            <span class="nd">@Override</span>
</span><span class='line'>            <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onSuccess</span><span class="o">(</span><span class="n">NumberToWordsResponse</span> <span class="n">responseObject</span><span class="o">)</span> <span class="o">{</span> <span class="c1">// success</span>
</span><span class='line'>                <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">,</span> <span class="n">responseObject</span><span class="o">.</span><span class="na">numberToWordsResult</span><span class="o">,</span> <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="nd">@Override</span>
</span><span class='line'>            <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onFailure</span><span class="o">(</span><span class="n">Throwable</span> <span class="n">error</span><span class="o">,</span> <span class="n">String</span> <span class="n">errorMessage</span><span class="o">)</span> <span class="o">{</span> <span class="c1">// http or parsing error</span>
</span><span class='line'>                <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">,</span> <span class="n">errorMessage</span><span class="o">,</span> <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="nd">@Override</span>
</span><span class='line'>            <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onSOAPFault</span><span class="o">(</span><span class="n">Object</span> <span class="n">soapFault</span><span class="o">)</span> <span class="o">{</span> <span class="c1">// soap fault</span>
</span><span class='line'>                <span class="n">Fault</span> <span class="n">fault</span> <span class="o">=</span> <span class="o">(</span><span class="n">Fault</span><span class="o">)</span><span class="n">soapFault</span><span class="o">;</span>
</span><span class='line'>                <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">,</span> <span class="n">fault</span><span class="o">.</span><span class="na">faultstring</span><span class="o">,</span> <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="o">});</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">});</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>The call logic can't be simpler, I've added comments in the service call code for you to better understand the call flow. Also, I've enabled the debug mode of the proxy, so you can see the detailed request/response messages when you run the demo, this feature is extremely useful for troubleshooting.</p>

<h2>Final Step - Run the Demo</h2>

<p>Now it's time to run the demo, let's try it in the simulator(you may use a real device of course),  below is a screenshot of the simulator after converting a number to dollars:</p>

<p><img class="center" src="/images/nano/tutorial01/screen_shot3.png" width="400" height="600"></p>

<p>You can also find the debug output in the Android LogCat, like below:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>04-15 13:54:26.146: D/NanoSOAPClient(281): Sending request to : http://www.dataaccess.com/webservicesserver/numberconversion.wso
</span><span class='line'>04-15 13:54:26.146: D/NanoSOAPClient(281): Request HTTP headers :
</span><span class='line'>04-15 13:54:26.146: D/NanoSOAPClient(281): {
</span><span class='line'>04-15 13:54:26.146: D/NanoSOAPClient(281):     Accept="text/xml"
</span><span class='line'>04-15 13:54:26.146: D/NanoSOAPClient(281): }
</span><span class='line'>04-15 13:54:26.146: D/NanoSOAPClient(281): Request message :
</span><span class='line'>04-15 13:54:26.146: D/NanoSOAPClient(281): &lt;?xml version='1.0' encoding='UTF-8' ?>
</span><span class='line'>04-15 13:54:26.146: D/NanoSOAPClient(281): &lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.dataaccess.com/webservicesserver/">
</span><span class='line'>04-15 13:54:26.146: D/NanoSOAPClient(281):   &lt;soapenv:Body>
</span><span class='line'>04-15 13:54:26.146: D/NanoSOAPClient(281):     &lt;NumberToDollars>
</span><span class='line'>04-15 13:54:26.146: D/NanoSOAPClient(281):       &lt;dNum>128.32&lt;/dNum>
</span><span class='line'>04-15 13:54:26.146: D/NanoSOAPClient(281):     &lt;/NumberToDollars>
</span><span class='line'>04-15 13:54:26.146: D/NanoSOAPClient(281):   &lt;/soapenv:Body>
</span><span class='line'>04-15 13:54:26.146: D/NanoSOAPClient(281): &lt;/soapenv:Envelope>
</span><span class='line'>04-15 13:54:27.356: D/SOAPHttpResponseHandler(281): Response HTTP status : 200
</span><span class='line'>04-15 13:54:27.366: D/SOAPHttpResponseHandler(281): Response HTTP headers :
</span><span class='line'>04-15 13:54:27.366: D/SOAPHttpResponseHandler(281): {
</span><span class='line'>04-15 13:54:27.366: D/SOAPHttpResponseHandler(281):     Web-Service="Visual DataFlex 17.0"
</span><span class='line'>04-15 13:54:27.366: D/SOAPHttpResponseHandler(281):     Content-Type="text/xml; charset=utf-8"
</span><span class='line'>04-15 13:54:27.366: D/SOAPHttpResponseHandler(281):     Date="Mon, 15 Apr 2013 13:54:52 GMT"
</span><span class='line'>04-15 13:54:27.366: D/SOAPHttpResponseHandler(281):     Content-Length="397"
</span><span class='line'>04-15 13:54:27.366: D/SOAPHttpResponseHandler(281):     X-Powered-By="ASP.NET"
</span><span class='line'>04-15 13:54:27.366: D/SOAPHttpResponseHandler(281):     Server="Microsoft-IIS/6.0"
</span><span class='line'>04-15 13:54:27.366: D/SOAPHttpResponseHandler(281):     Cache-Control="private, max-age=0"
</span><span class='line'>04-15 13:54:27.366: D/SOAPHttpResponseHandler(281): }
</span><span class='line'>04-15 13:54:27.376: D/SOAPHttpResponseHandler(281): Response message :
</span><span class='line'>04-15 13:54:27.376: D/SOAPHttpResponseHandler(281): &lt;?xml version="1.0" encoding="utf-8"?>
</span><span class='line'>04-15 13:54:27.376: D/SOAPHttpResponseHandler(281): &lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
</span><span class='line'>04-15 13:54:27.376: D/SOAPHttpResponseHandler(281):   &lt;soap:Body>
</span><span class='line'>04-15 13:54:27.376: D/SOAPHttpResponseHandler(281):     &lt;m:NumberToDollarsResponse xmlns:m="http://www.dataaccess.com/webservicesserver/">
</span><span class='line'>04-15 13:54:27.376: D/SOAPHttpResponseHandler(281):       &lt;m:NumberToDollarsResult>one hundred and twenty eight dollars and thirty two cents&lt;/m:NumberToDollarsResult>
</span><span class='line'>04-15 13:54:27.376: D/SOAPHttpResponseHandler(281):     &lt;/m:NumberToDollarsResponse>
</span><span class='line'>04-15 13:54:27.376: D/SOAPHttpResponseHandler(281):   &lt;/soap:Body>
</span><span class='line'>04-15 13:54:27.376: D/SOAPHttpResponseHandler(281): &lt;/soap:Envelope></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>If you have any problem to run the demo, please check the debug output first.</p>

<p>Now you see the power of Nano framework, you don't get troubled with error prone and tedious SOAP/XML parsing or http handling, the generic Nano framework will do these stuff for you, you only need to use a plain old asynchronous interface for service invocation, this can not only accelerate application development, but reduce the long term maintenance cost.</p>

<p>NumberConversion is just a bare minimum demo, there are other more featured demos(like Amazon, eBay search demo) in the sample folder of Nano project, please try them to better understand how Nano works, then you can begin to develop your own service based applications, using wsdl driven methodology supported by Nano.</p>

<p>See your next great Android application!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WSDL Driven Development on Android - the Big Picture]]></title>
    <link href="http://bulldog2011.github.com/blog/2013/04/15/wsdl-driven-development-on-android-the-big-picture/"/>
    <updated>2013-04-15T10:14:00+08:00</updated>
    <id>http://bulldog2011.github.com/blog/2013/04/15/wsdl-driven-development-on-android-the-big-picture</id>
    <content type="html"><![CDATA[<p>WSDL driven development is a popular and mature development methodology on platforms like Java and .Net, tools like Axis, CXF, JAX-WS, WCF are leveraged by many developers for rapid web service development. With WSDL as interface contract, both server side and client side proxies can be automatically generated from WSDL, developer can work with plain old interfaces/objects directly, no need to worry about low level SOAP/XML serialization/deserialization and service invocation details(which are very tedious and error-prone), this kind of model driven development(or meta-data driven development) can not only dramatically reduce initial development cost, but reduce long term maintenance cost.</p>

<!--more-->


<p>Although nowadays there is a trend toward RESTful service(which has no formal interface definition like WSDL), many industries(such as ecommerce industry) have a complex business domain, it's very hard to expose complex business logic as RESTful service(a typical maintenance nightmare), so we will keep seeing that many enterprises will keep exposing their services as traditional SOAP or XML based web services, some examples are <a href="https://affiliate-program.amazon.com/gp/advertising/api/detail/main.html">Amazon Product Advertising Web Service</a>, eBay <a href="https://www.x.com/developers/ebay/products/finding-api">Finding</a>, <a href="https://www.x.com/developers/ebay/products/shopping-api">Shopping</a> and <a href="https://www.x.com/developers/ebay/products/trading-api">Trading</a> Web Services, etc.</p>

<p>Can WSDL driven development be put into practice on Android platform? Yes, now with <a href="https://github.com/bulldog2011/nano">Nano Web Service Client Framework</a> and <a href="https://github.com/bulldog2011/mwsc">WSDL compiler for Android</a>, you can also leverage WSDL driven development technology on iOS platform, dramatically improving your application development speed.</p>

<p>Let's see the big picture:</p>

<p><img class="center" src="/images/nano/big_picture.png" width="600" height="800"></p>

<p>The picture above is the blueprint of WSDL driven development on Android. The left part of the blueprint is a build-time phase view, in this phase, we will leverage <a href="https://github.com/bulldog2011/mwsc">mwsc</a> wsdl compiler to automatically generate service proxy from wsdl, the service proxy alone can't be used directly, it must be integrated with the generic <a href="https://github.com/bulldog2011/nano">Nano Web Service client framework</a> to take effect; The right part of the blueprint is a runtime view, a typical flow starts from your Android app, your app issues request on service proxy, the proxy passes the request to the Nano runtime framework which will delegate the object to XML/SOAP marshalling work to Nano binding framework then send serialized XML/SOAP request to external service through <a href="https://github.com/loopj/android-async-http">loopj async HTTP client</a> component, when an XML/SOAP response is received by the HTTP client component, the Nano runtime framework will also delegate the XML/SOAP to object unmarshalling work to Nano binding framework and passes the deserialized response object to the proxy which will eventually return the response object back to the calling app.</p>

<p>We used the synchronous flow in the picture just for simple demonstration, the real call flow in the runtime is asynchronous, by leveraging Java <code>Thread</code> and <code>ThreadPoolExecutor</code>, in order not to block main UI thread.</p>

<p>The Nano binding framework is the core of the Nano runtime, the real object<->xml binding magic happens here, below is the architecture of the binding runtime:</p>

<p><img class="center" src="/images/pico/binding.png" width="500" height="600"></p>

<p>There are four main components:</p>

<blockquote><ol>
<li><strong><em>Marshaller</em></strong> - responsible for object to xml marshalling</li>
<li><strong><em>Unmarshaller</em></strong> - responsible for xml to object unmarshalling</li>
<li><strong><em>BindingSchema</em></strong> - store object<->xml mapping information, used by both Marshaller and Unmarshaller to guide the marshalling/unmarshalling process at runtime, schema is extracted from class annotations and is cached for better performance.</li>
<li><strong><em>Converter</em></strong> - type converter for primitive types or frequently used types.</li>
</ol>
</blockquote>

<p>The marshalling/unmarshalling algorithm is recursive in nature:</p>

<blockquote><ol>
<li>for field of primitive or frequently used type, use corresponding converter to convert the field directly.</li>
<li>for field of object type, convert the fields of the object one by one and recursively.</li>
</ol>
</blockquote>

<p>The code generator component is based on <a href="http://docs.oracle.com/javase/6/docs/technotes/tools/share/wsimport.html">JAX-WS Wsimport</a> and <a href="http://freemarker.org/">Freemarker</a> template engine, see the whole architecture below:</p>

<p><img class="center" src="/images/pico/codegen-arch.png" width="600" height="750"></p>

<p>The whole architecture can be summarized as <strong><em>Model + Template = Code</em></strong>, code generation flow as following:</p>

<blockquote><ol>
<li>WSDL doc is first fed into Wsimport and a JAXB/JAX-WS model is generated.</li>
<li>The JAXB/JAX-WS model is then transformed into a language independent intermediate codegen model.</li>
<li>The codegen model and corresponding target language templates(Objective-C or Android) are then fed into the Freemarker template engine.</li>
<li>The Freemarker template engine will eventually transform the in-memory model into target code, guided by the templates.</li>
</ol>
</blockquote>

<p>As I know, there is no existing WSDL code generation tool tailored for Android platform, the mwsc code generator just filled this gap, it is backed by JAX-WS Wsimport, which is mature and stable, and can recognize most standard WSDL/Schema components, by delegating the most tricky and complex wsdl model transformation task to Wsimport, the mwsc code generator solved the WSDL to Android Java(or Objective-C) problem in a simple while elegant way.</p>

<p>The mwsc code generator not only generates simple bean classes from WSDL/Schema, but also generates the XML<->object mapping information(schema) and records these information in the class as Java annotations, the meta-data will later be leveraged by Nano binding framework to guide the XML<->Object transformation at runtime.</p>

<p>With a generic code generation tool and a generic web service client runtime, web service based app development on Android platform becomes easy, there is no low level xml parsing and http handling(which are tedious, error-prone and hard to maintain) any more, developers only need to work with a plain old service interface for service invocation, now they can put their real effort on application logic and UI, leading to agile Android app development.</p>

<p>In later posts, I will show how to put WSDL driven Android app development into practice in a series of tutorials, just stay tuned.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Schema driven web service client development on Android, Part 2: eBay Search App]]></title>
    <link href="http://bulldog2011.github.com/blog/2013/02/19/schema-driven-on-android-part-2-ebay-search/"/>
    <updated>2013-02-19T20:47:00+08:00</updated>
    <id>http://bulldog2011.github.com/blog/2013/02/19/schema-driven-on-android-part-2-ebay-search</id>
    <content type="html"><![CDATA[<p>This is the second part of my schema driven web service client development on Android series, in <a href="http://bulldog2011.github.com/blog/2013/02/17/schema-driven-on-android-part-1-hello-ebay-finding/">part one</a>, I introduced the blueprint of scheam driven development on Android, then I created a web service client proxy for eBay Finding API and built a minimum App as demo. In this second part, I will continue to create a functional eBay search app on Android by leveraging the proxy created in part one.</p>

<!--more-->


<p>There is a <a href="http://huguesjohnson.com/programming/java/android-ebay/">good post</a> showing how to integrate Android Application with the eBay API, the author did a very good job, the steps are shown in great detail, this is definitely the recommended reading if you want to develop eBay API based application on Android, however, the author created the application with much low-level passing and plumbing code, there are at least three problems with such approach:<br/>
1. The effort to create such simple application is nontrival, this is enough to scare away average developers.<br/>
2. The application is hard to maintain, whenever eBay changes some API interface, much effort is needed to rewrite and debug the json parsing code.<br/>
3. The application is hard to scale, if more functions and more API calls are needed, much effort is needed to write additional parsing and calling code.</p>

<p>I've created a similar application without much effort, I just leveraged the proxy code base created in part one of this series and focused my effort on writing some application logic and UI code. In fact, since I don't get troubled in backend parsing and plumbing code, I can write far less code than the above mentioned author, this is the power of scheam driven or proxy driven development, below is the main UI of the finished application.</p>

<p><img class="center" src="/images/nano-rest/ebay_search.png" width="400" height="600"></p>

<p>I won't post much code here since this is a typical andorid application and the code of the whole application is quite self explanatory, you can download the whole application <a href="https://github.com/bulldog2011/nano-rest/tree/master/sample/EBaySearch">here</a></p>

<p>Let me drop a few notes about this application here:</p>

<ol>
<li>The application uses the FindItemsByKeywords request processor built in part 1, and the API call follows the same paradigm shown in part 1.</li>
<li>This is a typical eBay search application, there is only one <a href="https://github.com/bulldog2011/nano-rest/blob/master/sample/EBaySearch/src/com/leansoft/nanorest/sample/FindingActivity.java">main activity</a> which extends ListActivity, user input a search keyword and click search, the application calls the FindItemsByKeywords request processor with asynchronous callback specified, inside the callback, UI is updated by populating the list view with search result items, not much code in the main activity.</li>
<li><a href="https://github.com/mttkay/droid-fu/blob/master/src/main/java/com/github/droidfu/widgets/WebImageView.java">Droidfu WebImageView</a> component is used to shown ebay item gallary thumbnail image, note, I removed the cache part of the component to minimize the code base, in real application, image cache is required for better performance.</li>
<li>I've added a dynamic sliding with pagination feature which makes the applciation look cool and friendly.</li>
<li>Before you run the application, please don't forget to fill your <strong><em>APP NAME</em></strong> in the <a href="https://github.com/bulldog2011/nano-rest/blob/master/sample/EBaySearch/src/com/ebay/finding/auth/AppNameAuthenticationProvider.java">AppNameAuthenticationProvider class</a>.</li>
</ol>


<p>With the eBay Finding API proxy as SDK and the sample app as template, it's not hard for you to create a more functional eBay Finding App on Android, I am looking forward that someone will build one, and let me know when you build one.</p>

<p>Let me reinterate three main <strong><em>highhights</em></strong> of scheam driven development on Android:</p>

<ol>
<li>Development effort is minimized, focus on application and UI logic instead of low level plumbling code.</li>
<li>Easy to maintain and scale, whenever the schema changes, resynchronize the proxy with the new schema and update application and UI logic accordingly, no manual xml parsing and debugging anymore.</li>
<li>Better quality and reliability, code generation and component resue foster better software quality and reliability.</li>
</ol>


<h4>Update 1 (2.23.2013)</h4>

<p>The eBay Search App has been enhanced to show how to mix API calls in one App:</p>

<ol>
<li>Search eBay using eBay Finding <a href="http://developer.ebay.com/DevZone/finding/CallRef/findItemsByKeywords.html">FindItemsByKeywords</a> API.</li>
<li>Show item details using eBay Shopping <a href="http://developer.ebay.com/DevZone/shopping/docs/CallRef/GetSingleItem.html">GetSingleItem</a> API.</li>
<li>Add item to watch list using eBay Trading <a href="http://developer.ebay.com/DevZone/XML/docs/Reference/eBay/AddToWatchList.html">AddToWatchList</a> API</li>
</ol>


<p>below is the item details UI:</p>

<p><img class="center" src="/images/nano-rest/ebay_demo.png" width="400" height="600"></p>

<p>Now with eBay Finding/Shopping/Trading API proxy as SDK and the demo app as template, you may create whatever eBay application you can think of, just let loose your imagination!</p>

<p>You can get the whole source of the enhanced App <a href="https://github.com/bulldog2011/nano-rest/tree/master/sample/EBayDemo">here</a>, Note, before you run the App, please fill in your eBay AppId and auth token in the <a href="https://github.com/bulldog2011/nano-rest/blob/master/sample/EBayDemo/src/com/leansoft/nanorest/sample/ConfigFactory.java">ConfigFactory</a> class.</p>
]]></content>
  </entry>
  
</feed>
