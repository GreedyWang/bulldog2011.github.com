<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Abstraction Builder]]></title>
  <link href="http://bulldog2011.github.com/atom.xml" rel="self"/>
  <link href="http://bulldog2011.github.com/"/>
  <updated>2013-04-20T16:43:37+08:00</updated>
  <id>http://bulldog2011.github.com/</id>
  <author>
    <name><![CDATA[Bulldog]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Luxun Performance Test]]></title>
    <link href="http://bulldog2011.github.com/blog/2013/04/20/luxun-performance-test/"/>
    <updated>2013-04-20T14:41:00+08:00</updated>
    <id>http://bulldog2011.github.com/blog/2013/04/20/luxun-performance-test</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/bulldog2011/luxun">Luxun</a> is a high-throughput, persistent, distributed, publish-subscribe messaging system tailored for big data collecting and analytics. I did an intensive performance test to Luxun these days, detailed reports can be found <a href="https://github.com/bulldog2011/luxun/wiki/Luxun-Performance">here</a>, below is a list of findings:</p>

<!--more-->


<blockquote><ol>
<li>The producing performance is quite good, on single sever grade machine, in one topic case, the average producing throughput can be <strong><em>> 100MBps</em></strong>.</li>
<li>The consuming performance is also quite good, on single server grade machine, in one topic case, the average consuming throughput can be <strong><em>> 100MBps</em></strong>.</li>
<li>On single machine case, Luxun performance is only limited by disk IO bandwidth, it&#8217;s recommended to use Luxun with ultra fast disk for better performance.</li>
<li>In networking case, Luxun performance is only limited by network bandwidth, it&#8217;s very easy for Luxun to saturate a 1Gbps network, it&#8217;s recommended to use Luxun in 10Gbps network, or enable compression for better network usage.</li>
<li>Luxun is <strong><em>not sensitive to</em></strong> JVM heap memory setting, our tests show there is not much difference whether additional heap memory is added or not, this is because Luxun queue is based on memory mapped file which does not use JVM heap memory directly, also Luxun uses automatic on-demand paging and swapping algorithm internally for efficient memory usage. However, this is not to say Luxun can work well on machine with very few memory, because memory mapped file will still use much off-heap memory, it&#8217;s recommend to use Luxun broker on machine with at least <strong><em>4GB</em></strong> physical memory, more is better.</li>
<li>Even on a normal notebook, both producing and consuming throughput of Luxun can be <strong><em>> 50MBps</em></strong>.</li>
<li>The Luxun performance is similar on both Windows and Linux platforms.</li>
<li>Async batch producing performance is much better than sync producing, in some case, there is order of magnitude difference. Async batch mode has much less network roundtrip overhead, hence better performance. It&#8217;s recommended to use async batch producing mode whenever possible.</li>
<li>Flush on broker side has much negative impact on Luxun performance, especially in sync producing case, it&#8217;s recommended to <strong><em>disable flush</em></strong> on broker because of the unique nature of <a href="http://en.wikipedia.org/wiki/Memory-mapped_file">Memory Mapped File</a> used internally by Luxun.</li>
<li>Message size has much impact on Luxun performance, bigger message, better performance, this is apparent since small message has more overhead caused by network roundtrip.</li>
<li>The one way not confirmed produce interface has much better performance than the two way confirmed produce interface, our tests show there are differences between the three times, so in the Luxun high level producer implementation, we chose one way not confirmed produce interface as underlying produce interface.</li>
<li>A performance comparison between Luxun and <a href="http://kafka.apache.org/">Apache Kafka</a> shows Luxun has much better performance than Kafka, see detail in <a href="http://bulldog2011.github.io/blog/2013/04/19/performance-benchmark-luxun-vs-apache-kafka/">this post</a>.</li>
<li>The overall performance of Luxun will not change much when the number of topics increase, the throughput will be shared among different topics.</li>
<li>Compression, when used appropriately, can improve the overall performance of Luxun a lot, our tests show Snappy is more efficient than GZip, although this depends on particular applications.</li>
</ol>
</blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Performance Benchmark - Luxun vs Apache Kafka]]></title>
    <link href="http://bulldog2011.github.com/blog/2013/04/19/performance-benchmark-luxun-vs-apache-kafka/"/>
    <updated>2013-04-19T18:11:00+08:00</updated>
    <id>http://bulldog2011.github.com/blog/2013/04/19/performance-benchmark-luxun-vs-apache-kafka</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/bulldog2011/luxun">Luxun</a> is a high-throughput, distributed, pub-sub messaging system tailored for big data collecting and analytics. Luxun is inspired by <a href="http://kafka.apache.org/">Apache Kafka</a>, both have a similar architecture. In order to compare the performance of Luxun and Kafka, I did a round of performance testing, below are the testing results:</p>

<!--more-->




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>  Producing Throughput Comparison:
</span><span class='line'>  
</span><span class='line'>    Async, Flush Disabled:    Luxun &gt;&gt; Kafka
</span><span class='line'>    Async, Flush Enabled:     Luxun &gt;&gt; Kafka
</span><span class='line'>    Sync, Flush Disabled:     Luxun &gt;&gt; Kafka
</span><span class='line'>    Sync, Flush Enabled:      Luxun &lt; Kafak
</span><span class='line'>  
</span><span class='line'>  Consuming Throughput Comparison:
</span><span class='line'>  
</span><span class='line'>    Luxun &gt; Kafka
</span></code></pre></td></tr></table></div></figure>


<h2>Analysis &amp; Conclusion</h2>

<p>The overall performance of Luxun is <strong><em>much better</em></strong> than Kafka:</p>

<blockquote><ol>
<li>In async producing mode, no matter whether flush is enabled or not, the throughput of Luxun is <strong><em>at least twice</em></strong> the throughput of Kafka.</li>
<li>In sync producing mode, if flush is disabled, Luxun performs <strong><em>much better</em></strong> than Kafka.</li>
<li>In sync producing mode, if flush is enabled, Luxun performs <strong><em>worse</em></strong> than Kafka.</li>
<li>In all consuming tests, Luxun performs <strong><em>much better</em></strong> than Kafka.</li>
</ol>
</blockquote>

<p>The only lose case of Luxun is in sync producing mode when flush is enabled, Luxun uses <a href="http://en.wikipedia.org/wiki/Memory-mapped_file">Memory Mapped File</a> internally, we are still not sure the cause of poor performance to explicitly flush memory mapped buffer in Java, this will be a future optimization of Luxun. However, following unique feature of memory mapped file makes explicit flush unnecessary(or not recommended) on Luxun system:</p>

<blockquote><ul>
<li>OS will ensure the message persistence even the process crashes and there is no explicit flush before the crash.</li>
<li>Message appended by producer thread will be immediately visible to consumer threads, even producer thread hasn’t flushed the message explicitly.</li>
</ul>
</blockquote>

<p>Also, the inner paging and swapping mechanism of Luxun will automatically flush a cached page when it is replaced out, making explicit flush unnecessary on Luxun system.</p>

<p>Regrading inner implementation, Luxun and Kafka have two main differences:</p>

<blockquote><ul>
<li>Luxun queue is based on <a href="http://en.wikipedia.org/wiki/Memory-mapped_file">Memory Mapped File</a> while Kafka queue is based on filesystem and OS page cache.</li>
<li>Luxun leveraged <a href="http://thrift.apache.org/">Thrift RPC</a> as communication layer while Kafka built its custom NIO communication layer.</li>
</ul>
</blockquote>

<p>We believe the performance difference between Luxun and Kafak is mainly caused by memory mapped file, while Thrift RPC or custom NIO communication layer does not make much difference here.</p>

<p>Detailed performance test results can be found <a href="https://github.com/bulldog2011/luxun/wiki/Performance---Luxun-vs.-Apache-Kafka">here</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nano Tutorial 5 - Hello Amazon Product Advertising API]]></title>
    <link href="http://bulldog2011.github.com/blog/2013/04/18/nano-tutorial-5-hello-amazon-product-advertising-api/"/>
    <updated>2013-04-18T19:18:00+08:00</updated>
    <id>http://bulldog2011.github.com/blog/2013/04/18/nano-tutorial-5-hello-amazon-product-advertising-api</id>
    <content type="html"><![CDATA[<p>This is the fifth tutorial of Nano tutorial series, in this tutorial, I will show you how to integrate <a href="https://github.com/bulldog2011/nano">Nano</a> with <a href="https://affiliate-program.amazon.com/gp/advertising/api/detail/main.html">Amazon Product Advertising API</a>, if you are not familiar with this API, just have a quick review on its official site, basically, the Product Advertising API provides programmatic access to Amazon&#8217;s product selection and discovery functionality so that developers like you can advertise Amazon products to monetize your website. In this tutorial, I will show you how to add custom SOAP header which is required by the authentication of Amazon Product Advertising API.</p>

<!--more-->


<p><strong><em>NOTE</em></strong></p>

<p>Per Amazon:</p>

<blockquote><p>You will not, without our express prior written approval, use any Product Advertising Content on or in connection with any site or application designed or intended for use with a mobile phone or other handheld device.</p></blockquote>


<p>So please consult Amazon for permission before you can use its Product Advertising Content on any Android devices.</p>

<p>The source of this tutorial is <a href="https://github.com/bulldog2011/nano/tree/master/sample/webservice/HelloAmazonProductAdvertising">here</a>.</p>

<h2>Step 0 - Prerequisite</h2>

<p>I suppose you have already read previous Nano tutorials, at least 1 and 2, and basically you should know:</p>

<blockquote><ul>
<li>The wsdl driven development process supported by Nano.</li>
<li>How to add the Nano library and the generated service proxy into your Android project.</li>
</ul>
</blockquote>

<h2>Step 1 - Generate Java Proxy from WSDL</h2>

<p>Download <a href="https://github.com/bulldog2011/mwsc">mwsc</a> and run following command in terminal to generate the proxy:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bin\mwsc.bat -nano -d generated http://webservices.amazon.com/AWSECommerceService/AWSECommerceService.wsdl</span></code></pre></td></tr></table></div></figure>


<p>Depends on the network speed, you may need to wait a few moments to let the code generator download the wsdl and generate code, you may also download the wsdl and run the code generator with a local wsdl.</p>

<h2>Step 2 - Create New Android Project, Add Nano Library and Generated Proxy into Your Project</h2>

<p>Create a simple Android project called <code>HelloAmazonProductAdvertising</code> in eclipse(or other IDE you prefer), then:</p>

<blockquote><ol>
<li>Download <a href="https://github.com/bulldog2011/bulldog-repo/blob/master/repo/releases/com/leansoft/nano/0.7.0/nano-0.7.0.jar">latest nano library jar</a> and add it to the <code>libs</code> folder of your Android project.</li>
<li>Drag the above generated proxy into the <code>src</code> folder of your Android project.</li>
<li>Add following user permissions in the <code>AndroidManifest.xml</code> file to enable network access.</li>
</ol>
</blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;uses-permission</span> <span class="na">android:name=</span><span class="s">&quot;android.permission.INTERNET&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;uses-permission</span> <span class="na">android:name=</span><span class="s">&quot;android.permission.ACCESS_NETWORK_STATE&quot;</span> <span class="nt">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now build the project to ensure it can build successfully.</p>

<p>The code generation will generate both SOAP and XML based interfaces from Amazon Product Advertising wsdl for us,
since we will use SOAP based interface in this tutorial, you may now review the generated Amazon Product Advertising SOAP interface(in the generated <code>client</code> sub-folder) to learn what kind of functions are provided by Amazon Product Advertising service, and what kind of parameters are needed to call the service, the interface is posted below:</p>

<figure class='code'><figcaption><span>AWSECommerceServicePortType_SOAPClient.java </span><a href='https://github.com/bulldog2011/nano/blob/master/sample/webservice/HelloAmazonProductAdvertising/src/com/amazon/webservices/awsecommerceservice/_2011_08_01/client/AWSECommerceServicePortType_SOAPClient.java'>source </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// Generated by wsdl compiler for android/java</span>
</span><span class='line'><span class="c1">// DO NOT CHANGE!</span>
</span><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">amazon</span><span class="o">.</span><span class="na">webservices</span><span class="o">.</span><span class="na">awsecommerceservice</span><span class="o">.</span><span class="na">_2011_08_01</span><span class="o">.</span><span class="na">client</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.leansoft.nano.ws.SOAPServiceCallback</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.leansoft.nano.ws.NanoSOAPClient</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.amazon.webservices.awsecommerceservice._2011_08_01.CartClear</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.amazon.webservices.awsecommerceservice._2011_08_01.CartModify</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.amazon.webservices.awsecommerceservice._2011_08_01.SimilarityLookup</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.amazon.webservices.awsecommerceservice._2011_08_01.SimilarityLookupResponse</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.amazon.webservices.awsecommerceservice._2011_08_01.ItemSearch</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.amazon.webservices.awsecommerceservice._2011_08_01.ItemSearchResponse</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.amazon.webservices.awsecommerceservice._2011_08_01.CartClearResponse</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.amazon.webservices.awsecommerceservice._2011_08_01.CartGet</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.amazon.webservices.awsecommerceservice._2011_08_01.ItemLookup</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.amazon.webservices.awsecommerceservice._2011_08_01.BrowseNodeLookup</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.amazon.webservices.awsecommerceservice._2011_08_01.ItemLookupResponse</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.amazon.webservices.awsecommerceservice._2011_08_01.CartAdd</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.amazon.webservices.awsecommerceservice._2011_08_01.CartAddResponse</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.amazon.webservices.awsecommerceservice._2011_08_01.CartGetResponse</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.amazon.webservices.awsecommerceservice._2011_08_01.CartCreate</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.amazon.webservices.awsecommerceservice._2011_08_01.BrowseNodeLookupResponse</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.amazon.webservices.awsecommerceservice._2011_08_01.CartCreateResponse</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.amazon.webservices.awsecommerceservice._2011_08_01.CartModifyResponse</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> This class is the SOAP client to the AWSECommerceServicePortType Web Service.</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">AWSECommerceServicePortType_SOAPClient</span> <span class="kd">extends</span> <span class="n">NanoSOAPClient</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     public method</span>
</span><span class='line'><span class="cm">    */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">itemSearch</span><span class="o">(</span><span class="n">ItemSearch</span> <span class="n">requestObject</span><span class="o">,</span> <span class="n">SOAPServiceCallback</span><span class="o">&lt;</span><span class="n">ItemSearchResponse</span><span class="o">&gt;</span> <span class="n">serviceCallback</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">requestObject</span><span class="o">,</span> <span class="n">serviceCallback</span><span class="o">,</span> <span class="n">ItemSearchResponse</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     public method</span>
</span><span class='line'><span class="cm">    */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">itemLookup</span><span class="o">(</span><span class="n">ItemLookup</span> <span class="n">requestObject</span><span class="o">,</span> <span class="n">SOAPServiceCallback</span><span class="o">&lt;</span><span class="n">ItemLookupResponse</span><span class="o">&gt;</span> <span class="n">serviceCallback</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">requestObject</span><span class="o">,</span> <span class="n">serviceCallback</span><span class="o">,</span> <span class="n">ItemLookupResponse</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     public method</span>
</span><span class='line'><span class="cm">    */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">browseNodeLookup</span><span class="o">(</span><span class="n">BrowseNodeLookup</span> <span class="n">requestObject</span><span class="o">,</span> <span class="n">SOAPServiceCallback</span><span class="o">&lt;</span><span class="n">BrowseNodeLookupResponse</span><span class="o">&gt;</span> <span class="n">serviceCallback</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">requestObject</span><span class="o">,</span> <span class="n">serviceCallback</span><span class="o">,</span> <span class="n">BrowseNodeLookupResponse</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     public method</span>
</span><span class='line'><span class="cm">    */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">similarityLookup</span><span class="o">(</span><span class="n">SimilarityLookup</span> <span class="n">requestObject</span><span class="o">,</span> <span class="n">SOAPServiceCallback</span><span class="o">&lt;</span><span class="n">SimilarityLookupResponse</span><span class="o">&gt;</span> <span class="n">serviceCallback</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">requestObject</span><span class="o">,</span> <span class="n">serviceCallback</span><span class="o">,</span> <span class="n">SimilarityLookupResponse</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     public method</span>
</span><span class='line'><span class="cm">    */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">cartGet</span><span class="o">(</span><span class="n">CartGet</span> <span class="n">requestObject</span><span class="o">,</span> <span class="n">SOAPServiceCallback</span><span class="o">&lt;</span><span class="n">CartGetResponse</span><span class="o">&gt;</span> <span class="n">serviceCallback</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">requestObject</span><span class="o">,</span> <span class="n">serviceCallback</span><span class="o">,</span> <span class="n">CartGetResponse</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     public method</span>
</span><span class='line'><span class="cm">    */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">cartCreate</span><span class="o">(</span><span class="n">CartCreate</span> <span class="n">requestObject</span><span class="o">,</span> <span class="n">SOAPServiceCallback</span><span class="o">&lt;</span><span class="n">CartCreateResponse</span><span class="o">&gt;</span> <span class="n">serviceCallback</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">requestObject</span><span class="o">,</span> <span class="n">serviceCallback</span><span class="o">,</span> <span class="n">CartCreateResponse</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     public method</span>
</span><span class='line'><span class="cm">    */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">cartAdd</span><span class="o">(</span><span class="n">CartAdd</span> <span class="n">requestObject</span><span class="o">,</span> <span class="n">SOAPServiceCallback</span><span class="o">&lt;</span><span class="n">CartAddResponse</span><span class="o">&gt;</span> <span class="n">serviceCallback</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">requestObject</span><span class="o">,</span> <span class="n">serviceCallback</span><span class="o">,</span> <span class="n">CartAddResponse</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     public method</span>
</span><span class='line'><span class="cm">    */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">cartModify</span><span class="o">(</span><span class="n">CartModify</span> <span class="n">requestObject</span><span class="o">,</span> <span class="n">SOAPServiceCallback</span><span class="o">&lt;</span><span class="n">CartModifyResponse</span><span class="o">&gt;</span> <span class="n">serviceCallback</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">requestObject</span><span class="o">,</span> <span class="n">serviceCallback</span><span class="o">,</span> <span class="n">CartModifyResponse</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     public method</span>
</span><span class='line'><span class="cm">    */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">cartClear</span><span class="o">(</span><span class="n">CartClear</span> <span class="n">requestObject</span><span class="o">,</span> <span class="n">SOAPServiceCallback</span><span class="o">&lt;</span><span class="n">CartClearResponse</span><span class="o">&gt;</span> <span class="n">serviceCallback</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">requestObject</span><span class="o">,</span> <span class="n">serviceCallback</span><span class="o">,</span> <span class="n">CartClearResponse</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>All the methods in the interface follow same calling paradigm - you call the service with required request object and a callback object implementing interface <a href="https://github.com/bulldog2011/nano/blob/master/src/main/java/com/leansoft/nano/ws/SOAPServiceCallback.java">SOAPServiceCallback</a>.</p>

<h2>Step 3 - Implement Appliction Logic and UI, Call Proxy to Invoke Web Service as Needed.</h2>

<p>First, create a shared service client as below:</p>

<figure class='code'><figcaption><span>AWSECommerceClient.java </span><a href='https://github.com/bulldog2011/nano/blob/master/sample/webservice/HelloAmazonProductAdvertising/src/com/amazon/service/ecommerce/AWSECommerceClient.java'>source </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">amazon</span><span class="o">.</span><span class="na">service</span><span class="o">.</span><span class="na">ecommerce</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.UnsupportedEncodingException</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.security.InvalidKeyException</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.security.NoSuchAlgorithmException</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.text.SimpleDateFormat</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.Calendar</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.TimeZone</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.crypto.Mac</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.crypto.spec.SecretKeySpec</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.xml.parsers.DocumentBuilder</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.xml.parsers.DocumentBuilderFactory</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.xml.parsers.ParserConfigurationException</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.w3c.dom.Document</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.w3c.dom.Element</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.amazon.webservices.awsecommerceservice._2011_08_01.client.AWSECommerceServicePortType_SOAPClient</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.leansoft.nano.util.Base64</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">AWSECommerceClient</span> <span class="o">{</span>
</span><span class='line'>  
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">     Update url according to your local location, see a list of supported location at the end of the wsdl:</span>
</span><span class='line'><span class="cm">     http://webservices.amazon.com/AWSECommerceService/AWSECommerceService.wsdl</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="n">String</span> <span class="n">AWSCEServiceURLString</span> <span class="o">=</span> <span class="s">&quot;https://webservices.amazon.com/onca/soap?Service=AWSECommerceService&quot;</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>    <span class="cm">/** Use this to specify the AWS Access Key ID */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="n">String</span> <span class="n">AWSAccessKeyId</span> <span class="o">=</span> <span class="s">&quot;YOUR ACCESS KEY HERE&quot;</span><span class="o">;</span>
</span><span class='line'>    <span class="cm">/** Use this to specify the AWS Secret Key */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="n">String</span> <span class="n">AWSSecureKeyId</span> <span class="o">=</span> <span class="s">&quot;YOUR SECURE KEY HERE&quot;</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>    <span class="cm">/** Namespace for all AWS Security elements */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">AuthHeaderNS</span> <span class="o">=</span> <span class="s">&quot;http://security.amazonaws.com/doc/2007-01-01/&quot;</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">private</span> <span class="kd">static</span> <span class="n">AWSECommerceServicePortType_SOAPClient</span> <span class="n">client</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>    <span class="cm">/** Algorithm used to calculate string hashes */</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">SIGNATURE_ALGORITHM</span> <span class="o">=</span> <span class="s">&quot;HmacSHA256&quot;</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">static</span> <span class="n">Mac</span> <span class="n">mac</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="n">AWSECommerceServicePortType_SOAPClient</span> <span class="nf">getSharedClient</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">client</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="kd">synchronized</span><span class="o">(</span><span class="n">AWSECommerceClient</span><span class="o">.</span><span class="na">class</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="k">if</span> <span class="o">(</span><span class="n">client</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                  <span class="n">client</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AWSECommerceServicePortType_SOAPClient</span><span class="o">();</span>
</span><span class='line'>                  <span class="n">client</span><span class="o">.</span><span class="na">setEndpointUrl</span><span class="o">(</span><span class="n">AWSCEServiceURLString</span><span class="o">);</span>
</span><span class='line'>                  
</span><span class='line'>                  <span class="c1">// init security</span>
</span><span class='line'>                  <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                      <span class="kt">byte</span><span class="o">[]</span> <span class="n">bytes</span> <span class="o">=</span> <span class="n">AWSSecureKeyId</span><span class="o">.</span><span class="na">getBytes</span><span class="o">(</span><span class="s">&quot;UTF-8&quot;</span><span class="o">);</span>
</span><span class='line'>                      <span class="n">SecretKeySpec</span> <span class="n">keySpec</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SecretKeySpec</span><span class="o">(</span><span class="n">bytes</span><span class="o">,</span> <span class="n">SIGNATURE_ALGORITHM</span><span class="o">);</span>
</span><span class='line'>                      <span class="n">mac</span> <span class="o">=</span> <span class="n">Mac</span><span class="o">.</span><span class="na">getInstance</span><span class="o">(</span><span class="n">SIGNATURE_ALGORITHM</span><span class="o">);</span>
</span><span class='line'>                      <span class="n">mac</span><span class="o">.</span><span class="na">init</span><span class="o">(</span><span class="n">keySpec</span><span class="o">);</span>
</span><span class='line'>                  <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">UnsupportedEncodingException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                      <span class="k">throw</span> <span class="k">new</span> <span class="nf">RuntimeException</span><span class="o">(</span><span class="n">e</span><span class="o">);</span>
</span><span class='line'>                  <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">NoSuchAlgorithmException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                      <span class="k">throw</span> <span class="k">new</span> <span class="nf">RuntimeException</span><span class="o">(</span><span class="n">e</span><span class="o">);</span>
</span><span class='line'>                  <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">InvalidKeyException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                      <span class="k">throw</span> <span class="k">new</span> <span class="nf">RuntimeException</span><span class="o">(</span><span class="n">e</span><span class="o">);</span>
</span><span class='line'>                  <span class="o">}</span>
</span><span class='line'>                  
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">client</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm"> Authentication of SOAP request</span>
</span><span class='line'><span class="cm"> see details here: http://docs.aws.amazon.com/AWSECommerceService/latest/DG/NotUsingWSSecurity.html</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">authenticateRequest</span><span class="o">(</span><span class="n">String</span> <span class="n">action</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">String</span> <span class="n">timestamp</span> <span class="o">=</span> <span class="n">getTimestamp</span><span class="o">();</span>
</span><span class='line'>      <span class="n">String</span> <span class="n">signature</span> <span class="o">=</span> <span class="n">calculateSignature</span><span class="o">(</span><span class="n">action</span><span class="o">,</span> <span class="n">timestamp</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">List</span><span class="o">&lt;</span><span class="n">Object</span><span class="o">&gt;</span> <span class="n">securityHeaders</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Object</span><span class="o">&gt;();</span>
</span><span class='line'>      <span class="n">Document</span> <span class="n">document</span> <span class="o">=</span> <span class="n">getDocument</span><span class="o">();</span>
</span><span class='line'>      <span class="n">Element</span> <span class="n">accessKeyElement</span> <span class="o">=</span> <span class="n">document</span><span class="o">.</span><span class="na">createElementNS</span><span class="o">(</span><span class="n">AuthHeaderNS</span><span class="o">,</span> <span class="s">&quot;AWSAccessKeyId&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">accessKeyElement</span><span class="o">.</span><span class="na">appendChild</span><span class="o">(</span><span class="n">document</span><span class="o">.</span><span class="na">createTextNode</span><span class="o">(</span><span class="n">AWSAccessKeyId</span><span class="o">));</span>
</span><span class='line'>      <span class="n">securityHeaders</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">accessKeyElement</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">Element</span> <span class="n">timestampElement</span> <span class="o">=</span> <span class="n">document</span><span class="o">.</span><span class="na">createElementNS</span><span class="o">(</span><span class="n">AuthHeaderNS</span><span class="o">,</span> <span class="s">&quot;Timestamp&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">timestampElement</span><span class="o">.</span><span class="na">appendChild</span><span class="o">(</span><span class="n">document</span><span class="o">.</span><span class="na">createTextNode</span><span class="o">(</span><span class="n">timestamp</span><span class="o">));</span>
</span><span class='line'>      <span class="n">securityHeaders</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">timestampElement</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">Element</span> <span class="n">signatureElement</span> <span class="o">=</span> <span class="n">document</span><span class="o">.</span><span class="na">createElementNS</span><span class="o">(</span><span class="n">AuthHeaderNS</span><span class="o">,</span> <span class="s">&quot;Signature&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">signatureElement</span><span class="o">.</span><span class="na">appendChild</span><span class="o">(</span><span class="n">document</span><span class="o">.</span><span class="na">createTextNode</span><span class="o">(</span><span class="n">signature</span><span class="o">));</span>
</span><span class='line'>      <span class="n">securityHeaders</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">signatureElement</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">client</span><span class="o">.</span><span class="na">setCustomSOAPHeaders</span><span class="o">(</span><span class="n">securityHeaders</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     * Calculates a time stamp from &quot;now&quot; in UTC and returns it in ISO8601 string</span>
</span><span class='line'><span class="cm">     * format. The soap message expires 15 minutes after this time stamp.</span>
</span><span class='line'><span class="cm">     * AWS only supports UTC and it&#39;s canonical representation as &#39;Z&#39; in an</span>
</span><span class='line'><span class="cm">     * ISO8601 time string. E.g.  2008-02-10T23:59:59Z</span>
</span><span class='line'><span class="cm">     * </span>
</span><span class='line'><span class="cm">     * See http://www.w3.org/TR/xmlschema-2/#dateTime for more details.</span>
</span><span class='line'><span class="cm">     * </span>
</span><span class='line'><span class="cm">     * @return ISO8601 time stamp string for &quot;now&quot; in UTC.</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">static</span> <span class="n">String</span> <span class="nf">getTimestamp</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">Calendar</span>         <span class="n">calendar</span>  <span class="o">=</span> <span class="n">Calendar</span><span class="o">.</span><span class="na">getInstance</span><span class="o">();</span>
</span><span class='line'>        <span class="n">SimpleDateFormat</span> <span class="n">is08601</span>   <span class="o">=</span> <span class="k">new</span> <span class="n">SimpleDateFormat</span><span class="o">(</span><span class="s">&quot;yyyy-MM-dd&#39;T&#39;HH:mm:ss&#39;Z&#39;&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">is08601</span><span class="o">.</span><span class="na">setTimeZone</span><span class="o">(</span><span class="n">TimeZone</span><span class="o">.</span><span class="na">getTimeZone</span><span class="o">(</span><span class="s">&quot;UTC&quot;</span><span class="o">));</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">is08601</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="n">calendar</span><span class="o">.</span><span class="na">getTime</span><span class="o">());</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     * Method borrowed from AWS example code at http://developer.amazonwebservices.com/</span>
</span><span class='line'><span class="cm">     * @param  action The single SOAP body element that is the action the</span>
</span><span class='line'><span class="cm">     *                      request is taking.</span>
</span><span class='line'><span class="cm">     * @param  timestamp  The time stamp string as provided in the &amp;lt;aws:Timestamp&amp;gt;</span>
</span><span class='line'><span class="cm">     *                      header element.</span>
</span><span class='line'><span class="cm">     * @return A hash calculated according to AWS security rules to be provided in the</span>
</span><span class='line'><span class="cm">     *         &amp;lt;aws:signature&amp;gt; header element.</span>
</span><span class='line'><span class="cm">     * @throws Exception If there were errors or missing, required classes when</span>
</span><span class='line'><span class="cm">     *                   trying to calculate the hash.</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">static</span> <span class="n">String</span> <span class="nf">calculateSignature</span><span class="o">(</span><span class="n">String</span> <span class="n">action</span><span class="o">,</span> <span class="n">String</span> <span class="n">timestamp</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">String</span> <span class="n">toSign</span> <span class="o">=</span> <span class="o">(</span><span class="n">action</span> <span class="o">+</span> <span class="n">timestamp</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="kt">byte</span><span class="o">[]</span> <span class="n">sigBytes</span> <span class="o">=</span> <span class="n">mac</span><span class="o">.</span><span class="na">doFinal</span><span class="o">(</span><span class="n">toSign</span><span class="o">.</span><span class="na">getBytes</span><span class="o">());</span>
</span><span class='line'>        <span class="k">return</span> <span class="k">new</span> <span class="nf">String</span><span class="o">(</span><span class="n">Base64</span><span class="o">.</span><span class="na">encode</span><span class="o">(</span><span class="n">sigBytes</span><span class="o">));</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     * Get a W3C XML Document</span>
</span><span class='line'><span class="cm">     * </span>
</span><span class='line'><span class="cm">     * @return a document</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">static</span> <span class="n">Document</span> <span class="nf">getDocument</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>          
</span><span class='line'>          <span class="n">DocumentBuilderFactory</span> <span class="n">dbf</span> <span class="o">=</span> <span class="n">DocumentBuilderFactory</span><span class="o">.</span><span class="na">newInstance</span><span class="o">();</span>
</span><span class='line'>          <span class="n">dbf</span><span class="o">.</span><span class="na">setNamespaceAware</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
</span><span class='line'>          
</span><span class='line'>          <span class="n">DocumentBuilder</span> <span class="n">db</span> <span class="o">=</span> <span class="n">dbf</span><span class="o">.</span><span class="na">newDocumentBuilder</span><span class="o">();</span>
</span><span class='line'>          <span class="k">return</span> <span class="n">db</span><span class="o">.</span><span class="na">newDocument</span><span class="o">();</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">ParserConfigurationException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">throw</span> <span class="k">new</span> <span class="nf">RuntimeException</span><span class="o">(</span>
</span><span class='line'>                  <span class="s">&quot;Failed to create DocumentBuilder!&quot;</span><span class="o">,</span> <span class="n">e</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>The logic to build shared client is a little complex, let me give more comments:</p>

<blockquote><ol>
<li>Amazon Product Advertising API requires per-call request authentication, see details <a href="http://docs.aws.amazon.com/AWSECommerceService/latest/DG/NotUsingWSSecurity.html">here</a>, the authentication logic is implemented in the <code>public static void authenticateRequest(String action)</code> method.</li>
<li>To make the authentication work, you need to fill in your <code>AWSAccessKeyId</code> and <code>AWSSecureKeyId</code> in the shared client, if you are a registered Amazon Product Advertising API developer, you can get these keys from your account on Amazon developer site.</li>
<li>The authentication info is added in the SOAP request as SOAP header, to add SOAP header, we use <code>Document</code>(W3C DOM built in Android) to build header elements, populate the elements with authentication information, then add the header element list on the client, at runtime, Nano will add these elements to the SOAP request message header.</li>
<li>The authentication needs to be done on per-call basis, means everytime you call an Amazon Product Advertising service, you need to authenticate the request before the service call, see sample later.</li>
</ol>
</blockquote>

<p>Now the UI part and application logic, for this hello world like sample, we just need an <code>EditText</code> for book keyword input and a <code>Button</code> to trigger Amazon book search by invoking listening method <code>onClick</code> which will indirectly call Amazon Product Advertising <code>itemSearch</code> API through the proxy, fairly simple, see the full application logic in <code>MainActivity</code> class below:</p>

<figure class='code'><figcaption><span>MainActivity.java </span><a href='https://github.com/bulldog2011/nano/blob/master/sample/webservice/HelloAmazonProductAdvertising/src/com/leansoft/nano/sample/MainActivity.java'>source  </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">leansoft</span><span class="o">.</span><span class="na">nano</span><span class="o">.</span><span class="na">sample</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.amazon.service.ecommerce.AWSECommerceClient</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.amazon.webservices.awsecommerceservice._2011_08_01.Errors</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.amazon.webservices.awsecommerceservice._2011_08_01.Item</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.amazon.webservices.awsecommerceservice._2011_08_01.ItemSearch</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.amazon.webservices.awsecommerceservice._2011_08_01.ItemSearchRequest</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.amazon.webservices.awsecommerceservice._2011_08_01.ItemSearchResponse</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.amazon.webservices.awsecommerceservice._2011_08_01.Items</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.amazon.webservices.awsecommerceservice._2011_08_01.client.AWSECommerceServicePortType_SOAPClient</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.leansoft.nano.ws.SOAPServiceCallback</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.os.Bundle</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.app.Activity</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.view.View</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.view.View.OnClickListener</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.Button</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.EditText</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.Toast</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MainActivity</span> <span class="kd">extends</span> <span class="n">Activity</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>
</span><span class='line'>      <span class="n">setContentView</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">activity_main</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">Button</span> <span class="n">searchButton</span> <span class="o">=</span> <span class="o">(</span><span class="n">Button</span><span class="o">)</span> <span class="k">this</span><span class="o">.</span><span class="na">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">search_button</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">searchButton</span><span class="o">.</span><span class="na">setOnClickListener</span><span class="o">(</span><span class="k">new</span> <span class="n">OnClickListener</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>          <span class="nd">@Override</span>
</span><span class='line'>          <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">View</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="c1">// Get shared client</span>
</span><span class='line'>              <span class="n">AWSECommerceServicePortType_SOAPClient</span> <span class="n">client</span> <span class="o">=</span> <span class="n">AWSECommerceClient</span><span class="o">.</span><span class="na">getSharedClient</span><span class="o">();</span>
</span><span class='line'>              <span class="n">client</span><span class="o">.</span><span class="na">setDebug</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
</span><span class='line'>              
</span><span class='line'>              <span class="c1">// Build request</span>
</span><span class='line'>              <span class="n">ItemSearch</span> <span class="n">request</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ItemSearch</span><span class="o">();</span>
</span><span class='line'>              <span class="n">request</span><span class="o">.</span><span class="na">associateTag</span> <span class="o">=</span> <span class="s">&quot;teg&quot;</span><span class="o">;</span> <span class="c1">// seems any tag is ok</span>
</span><span class='line'>              <span class="n">request</span><span class="o">.</span><span class="na">shared</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ItemSearchRequest</span><span class="o">();</span>
</span><span class='line'>              <span class="n">request</span><span class="o">.</span><span class="na">shared</span><span class="o">.</span><span class="na">searchIndex</span> <span class="o">=</span> <span class="s">&quot;Books&quot;</span><span class="o">;</span>
</span><span class='line'>              <span class="n">request</span><span class="o">.</span><span class="na">shared</span><span class="o">.</span><span class="na">responseGroup</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;();</span>
</span><span class='line'>              <span class="n">request</span><span class="o">.</span><span class="na">shared</span><span class="o">.</span><span class="na">responseGroup</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">&quot;Images&quot;</span><span class="o">);</span>
</span><span class='line'>              <span class="n">request</span><span class="o">.</span><span class="na">shared</span><span class="o">.</span><span class="na">responseGroup</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">&quot;Small&quot;</span><span class="o">);</span>
</span><span class='line'>              
</span><span class='line'>              <span class="n">ItemSearchRequest</span> <span class="n">itemSearchRequest</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ItemSearchRequest</span><span class="o">();</span>
</span><span class='line'>              <span class="n">itemSearchRequest</span><span class="o">.</span><span class="na">title</span> <span class="o">=</span> <span class="o">((</span><span class="n">EditText</span><span class="o">)</span><span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">keyword_input</span><span class="o">)).</span><span class="na">getText</span><span class="o">().</span><span class="na">toString</span><span class="o">();</span>
</span><span class='line'>              <span class="n">request</span><span class="o">.</span><span class="na">request</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">ItemSearchRequest</span><span class="o">&gt;();</span>
</span><span class='line'>              <span class="n">request</span><span class="o">.</span><span class="na">request</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">itemSearchRequest</span><span class="o">);</span>
</span><span class='line'>              
</span><span class='line'>              <span class="c1">// authenticate the request</span>
</span><span class='line'>              <span class="c1">// http://docs.aws.amazon.com/AWSECommerceService/latest/DG/NotUsingWSSecurity.html</span>
</span><span class='line'>              <span class="n">AWSECommerceClient</span><span class="o">.</span><span class="na">authenticateRequest</span><span class="o">(</span><span class="s">&quot;ItemSearch&quot;</span><span class="o">);</span>
</span><span class='line'>              <span class="c1">// Make API call and register callbacks</span>
</span><span class='line'>              <span class="n">client</span><span class="o">.</span><span class="na">itemSearch</span><span class="o">(</span><span class="n">request</span><span class="o">,</span> <span class="k">new</span> <span class="n">SOAPServiceCallback</span><span class="o">&lt;</span><span class="n">ItemSearchResponse</span><span class="o">&gt;()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>                  <span class="nd">@Override</span>
</span><span class='line'>                  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onSuccess</span><span class="o">(</span><span class="n">ItemSearchResponse</span> <span class="n">responseObject</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                      <span class="c1">// success handling logic</span>
</span><span class='line'>                      <span class="k">if</span> <span class="o">(</span><span class="n">responseObject</span><span class="o">.</span><span class="na">items</span> <span class="o">!=</span> <span class="kc">null</span> <span class="o">&amp;&amp;</span> <span class="n">responseObject</span><span class="o">.</span><span class="na">items</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                          <span class="n">Items</span> <span class="n">items</span> <span class="o">=</span> <span class="n">responseObject</span><span class="o">.</span><span class="na">items</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>                          <span class="k">if</span> <span class="o">(</span><span class="n">items</span><span class="o">.</span><span class="na">item</span> <span class="o">!=</span> <span class="kc">null</span> <span class="o">&amp;&amp;</span> <span class="n">items</span><span class="o">.</span><span class="na">item</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                              <span class="n">Item</span> <span class="n">item</span> <span class="o">=</span> <span class="n">items</span><span class="o">.</span><span class="na">item</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>                              <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">,</span> <span class="n">item</span><span class="o">.</span><span class="na">itemAttributes</span><span class="o">.</span><span class="na">title</span><span class="o">,</span> <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>                          <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>                              <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">,</span> <span class="s">&quot;No result&quot;</span><span class="o">,</span> <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>                          <span class="o">}</span>
</span><span class='line'>                          
</span><span class='line'>                      <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>                          <span class="k">if</span> <span class="o">(</span><span class="n">responseObject</span><span class="o">.</span><span class="na">operationRequest</span> <span class="o">!=</span> <span class="kc">null</span> <span class="o">&amp;&amp;</span> <span class="n">responseObject</span><span class="o">.</span><span class="na">operationRequest</span><span class="o">.</span><span class="na">errors</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                              <span class="n">Errors</span> <span class="n">errors</span> <span class="o">=</span> <span class="n">responseObject</span><span class="o">.</span><span class="na">operationRequest</span><span class="o">.</span><span class="na">errors</span><span class="o">;</span>
</span><span class='line'>                              <span class="k">if</span> <span class="o">(</span><span class="n">errors</span><span class="o">.</span><span class="na">error</span> <span class="o">!=</span> <span class="kc">null</span> <span class="o">&amp;&amp;</span> <span class="n">errors</span><span class="o">.</span><span class="na">error</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                                  <span class="n">com</span><span class="o">.</span><span class="na">amazon</span><span class="o">.</span><span class="na">webservices</span><span class="o">.</span><span class="na">awsecommerceservice</span><span class="o">.</span><span class="na">_2011_08_01</span><span class="o">.</span><span class="na">errors</span><span class="o">.</span><span class="na">Error</span> <span class="n">error</span> <span class="o">=</span> <span class="n">errors</span><span class="o">.</span><span class="na">error</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>                                  <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">,</span> <span class="n">error</span><span class="o">.</span><span class="na">message</span><span class="o">,</span> <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>                              <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>                                  <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">,</span> <span class="s">&quot;No result&quot;</span><span class="o">,</span> <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>                              <span class="o">}</span>
</span><span class='line'>                          <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>                              <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">,</span> <span class="s">&quot;No result&quot;</span><span class="o">,</span> <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>                          <span class="o">}</span>
</span><span class='line'>                      <span class="o">}</span>
</span><span class='line'>                      
</span><span class='line'>                  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>                  <span class="nd">@Override</span>
</span><span class='line'>                  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onFailure</span><span class="o">(</span><span class="n">Throwable</span> <span class="n">error</span><span class="o">,</span> <span class="n">String</span> <span class="n">errorMessage</span><span class="o">)</span> <span class="o">{</span> <span class="c1">// http or parsing error</span>
</span><span class='line'>                      <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">,</span> <span class="n">errorMessage</span><span class="o">,</span> <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>                  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>                  <span class="nd">@Override</span>
</span><span class='line'>                  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onSOAPFault</span><span class="o">(</span><span class="n">Object</span> <span class="n">soapFault</span><span class="o">)</span> <span class="o">{</span> <span class="c1">// soap fault</span>
</span><span class='line'>                      <span class="n">com</span><span class="o">.</span><span class="na">leansoft</span><span class="o">.</span><span class="na">nano</span><span class="o">.</span><span class="na">soap11</span><span class="o">.</span><span class="na">Fault</span> <span class="n">fault</span> <span class="o">=</span> <span class="o">(</span><span class="n">com</span><span class="o">.</span><span class="na">leansoft</span><span class="o">.</span><span class="na">nano</span><span class="o">.</span><span class="na">soap11</span><span class="o">.</span><span class="na">Fault</span><span class="o">)</span><span class="n">soapFault</span><span class="o">;</span>
</span><span class='line'>                      <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">,</span> <span class="n">fault</span><span class="o">.</span><span class="na">faultstring</span><span class="o">,</span> <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>  
</span><span class='line'>                  <span class="o">}</span>
</span><span class='line'>                  
</span><span class='line'>              <span class="o">});</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>          
</span><span class='line'>      <span class="o">});</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>More comments to the serivce call code:</p>

<blockquote><ol>
<li>I&#8217;ve added comments in the code so the whole service call flow should be easy to understand.</li>
<li>Before service call, the request must be authenticated by calling the <code>authenticateRequest</code> method, such as <code>AWSECommerceClient.authenticateRequest("ItemSearch")</code>, <code>ItemSearch</code> is the target action or API name.</li>
<li>In the success handling logic, we just show the title of the first result item.</li>
<li>In <code>onSOAPFault</code> failure handling logic, since we are using SOAP 1.1, we need to cast the soapFault object to type of <code>com.leansoft.nano.soap11.Fault</code> and handle it accordingly.</li>
<li>Amazon Product Advertising service supports response resident error(RRE), so even we get success response, we still need to check response for resident error and handle it accordingly.</li>
</ol>
</blockquote>

<h2>Final Step - Run the Demo</h2>

<p>Let&#8217;s run the demo in Android simulator, see a screen shot below:</p>

<p><img class="center" src="http://bulldog2011.github.com/images/nano/tutorial05/screen_shot1.png" width="400" height="600"></p>

<p>and the debug output:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>04-18 12:52:49.706: D/NanoSOAPClient(279): Sending request to : https://webservices.amazon.com/onca/soap?Service=AWSECommerceService
</span><span class='line'>04-18 12:52:49.706: D/NanoSOAPClient(279): Request HTTP headers : 
</span><span class='line'>04-18 12:52:49.706: D/NanoSOAPClient(279): {
</span><span class='line'>04-18 12:52:49.706: D/NanoSOAPClient(279):     Accept="text/xml"
</span><span class='line'>04-18 12:52:49.706: D/NanoSOAPClient(279): }
</span><span class='line'>04-18 12:52:49.706: D/NanoSOAPClient(279): Request message : 
</span><span class='line'>04-18 12:52:49.706: D/NanoSOAPClient(279): &lt;?xml version='1.0' encoding='UTF-8' ?>
</span><span class='line'>04-18 12:52:49.706: D/NanoSOAPClient(279): &lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://webservices.amazon.com/AWSECommerceService/2011-08-01">
</span><span class='line'>04-18 12:52:49.706: D/NanoSOAPClient(279):   &lt;soapenv:Header>
</span><span class='line'>04-18 12:52:49.706: D/NanoSOAPClient(279):     &lt;n0:AWSAccessKeyId xmlns:n0="http://security.amazonaws.com/doc/2007-01-01/">********&lt;/n0:AWSAccessKeyId>
</span><span class='line'>04-18 12:52:49.706: D/NanoSOAPClient(279):     &lt;n1:Timestamp xmlns:n1="http://security.amazonaws.com/doc/2007-01-01/">2013-04-18T12:52:49Z&lt;/n1:Timestamp>
</span><span class='line'>04-18 12:52:49.706: D/NanoSOAPClient(279):     &lt;n2:Signature xmlns:n2="http://security.amazonaws.com/doc/2007-01-01/">XRvrzbtkXiwvn3whk7+v1KY2o516hDaup1WfUea0f6Q=&lt;/n2:Signature>
</span><span class='line'>04-18 12:52:49.706: D/NanoSOAPClient(279):   &lt;/soapenv:Header>
</span><span class='line'>04-18 12:52:49.706: D/NanoSOAPClient(279):   &lt;soapenv:Body>
</span><span class='line'>04-18 12:52:49.706: D/NanoSOAPClient(279):     &lt;ItemSearch>
</span><span class='line'>04-18 12:52:49.706: D/NanoSOAPClient(279):       &lt;AssociateTag>teg&lt;/AssociateTag>
</span><span class='line'>04-18 12:52:49.706: D/NanoSOAPClient(279):       &lt;Shared>
</span><span class='line'>04-18 12:52:49.706: D/NanoSOAPClient(279):         &lt;ResponseGroup>Images&lt;/ResponseGroup>
</span><span class='line'>04-18 12:52:49.706: D/NanoSOAPClient(279):         &lt;ResponseGroup>Small&lt;/ResponseGroup>
</span><span class='line'>04-18 12:52:49.706: D/NanoSOAPClient(279):         &lt;SearchIndex>Books&lt;/SearchIndex>
</span><span class='line'>04-18 12:52:49.706: D/NanoSOAPClient(279):       &lt;/Shared>
</span><span class='line'>04-18 12:52:49.706: D/NanoSOAPClient(279):       &lt;Request>
</span><span class='line'>04-18 12:52:49.706: D/NanoSOAPClient(279):         &lt;Title>android programming&lt;/Title>
</span><span class='line'>04-18 12:52:49.706: D/NanoSOAPClient(279):       &lt;/Request>
</span><span class='line'>04-18 12:52:49.706: D/NanoSOAPClient(279):     &lt;/ItemSearch>
</span><span class='line'>04-18 12:52:49.706: D/NanoSOAPClient(279):   &lt;/soapenv:Body>
</span><span class='line'>04-18 12:52:49.706: D/NanoSOAPClient(279): &lt;/soapenv:Envelope>
</span><span class='line'>04-18 12:52:51.106: D/dalvikvm(279): GC_FOR_MALLOC freed 6267 objects / 346808 bytes in 35ms
</span><span class='line'>04-18 12:52:51.786: D/dalvikvm(279): GC_FOR_MALLOC freed 509 objects / 54216 bytes in 30ms
</span><span class='line'>04-18 12:52:51.816: D/dalvikvm(279): GC_FOR_MALLOC freed 43 objects / 105384 bytes in 29ms
</span><span class='line'>04-18 12:52:51.856: D/dalvikvm(279): GC_FOR_MALLOC freed 46 objects / 2424 bytes in 28ms
</span><span class='line'>04-18 12:52:51.856: I/dalvikvm-heap(279): Grow heap (frag case) to 3.005MB for 84132-byte allocation
</span><span class='line'>04-18 12:52:51.966: D/dalvikvm(279): GC_FOR_MALLOC freed 0 objects / 0 bytes in 114ms
</span><span class='line'>04-18 12:52:51.966: D/SOAPHttpResponseHandler(279): Response HTTP status : 200
</span><span class='line'>04-18 12:52:51.966: D/SOAPHttpResponseHandler(279): Response HTTP headers : 
</span><span class='line'>04-18 12:52:51.966: D/SOAPHttpResponseHandler(279): {
</span><span class='line'>04-18 12:52:51.966: D/SOAPHttpResponseHandler(279):     Content-Encoding="gzip"
</span><span class='line'>04-18 12:52:51.966: D/SOAPHttpResponseHandler(279):     Transfer-Encoding="chunked"
</span><span class='line'>04-18 12:52:51.966: D/SOAPHttpResponseHandler(279):     nnCoection="close"
</span><span class='line'>04-18 12:52:51.966: D/SOAPHttpResponseHandler(279):     Vary="Accept-Encoding,User-Agent"
</span><span class='line'>04-18 12:52:51.966: D/SOAPHttpResponseHandler(279):     Content-Type="text/xml;charset=UTF-8"
</span><span class='line'>04-18 12:52:51.966: D/SOAPHttpResponseHandler(279):     Date="Thu, 18 Apr 2013 12:53:17 GMT"
</span><span class='line'>04-18 12:52:51.966: D/SOAPHttpResponseHandler(279):     Server="Server"
</span><span class='line'>04-18 12:52:51.966: D/SOAPHttpResponseHandler(279): }
</span><span class='line'>04-18 12:52:51.966: D/SOAPHttpResponseHandler(279): Response message : 
</span><span class='line'>04-18 12:52:51.976: D/SOAPHttpResponseHandler(279): &lt;?xml version="1.0" ?>&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">&lt;soapenv:Body>&lt;ItemSearchResponse xmlns="http://webservices.amazon.com/AWSECommerceService/2011-08-01">&lt;OperationRequest>&lt;HTTPHeaders>&lt;Header Name="UserAgent" Value="android-async-http/1.4.3 (http://loopj.com/android-async-http)">&lt;/Header>&lt;/HTTPHeaders>&lt;RequestId>897bda30-928a-41f9-b48a-965d79800864&lt;/RequestId>&lt;Arguments>&lt;Argument Name="Service" Value="AWSECommerceService">&lt;/Argument>&lt;/Arguments>&lt;RequestProcessingTime>0.0608990000000000&lt;/RequestProcessingTime>&lt;/OperationRequest>&lt;Items>&lt;Request>&lt;IsValid>True&lt;/IsValid>&lt;ItemSearchRequest>&lt;ResponseGroup>Images&lt;/ResponseGroup>&lt;ResponseGroup>Small&lt;/ResponseGroup>&lt;SearchIndex>Books&lt;/SearchIndex>&lt;Title>android programming&lt;/Title>&lt;/ItemSearchRequest>&lt;/Request>&lt;TotalResults>131&lt;/TotalResults>&lt;TotalPages>14&lt;/TotalPages>&lt;MoreSearchResultsUrl>http://www.amazon.com/gp/redirect.html?camp=2025&amp;creative=386001&amp;location=http%3A%2F%2Fwww.amazon.com%2Fgp%2Fsearch%3Fkeywords%3Dandroid%2Bprogramming%26url%3Dsearch-alias%253Dstripbooks&amp;linkCode=sp1&amp;tag=teg&amp;SubscriptionId=AKIAIEKQPISXI6IPHDFQ&lt;/MoreSearchResultsUrl>&lt;Item>&lt;ASIN>1449316646&lt;/ASIN>&lt;DetailPageURL>http://www.amazon.com/Programming-Android-Generation-Mobile-Devices/dp/1449316646%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D165953%26creativeASIN%3D1449316646&lt;/DetailPageURL>&lt;ItemLinks>&lt;ItemLink>&lt;Description>Technical Details&lt;/Description>&lt;URL>http://www.amazon.com/Programming-Android-Generation-Mobile-Devices/dp/tech-data/1449316646%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1449316646&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Baby Registry&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/baby/add-item.html%3Fasin.0%3D1449316646%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1449316646&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Wedding Registry&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/wedding/add-item.html%3Fasin.0%3D1449316646%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1449316646&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Wishlist&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/wishlist/add-item.html%3Fasin.0%3D1449316646%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1449316646&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Tell A Friend&lt;/Description>&lt;URL>http://www.amazon.com/gp/pdp/taf/1449316646%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1449316646&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>All Customer Reviews&lt;/Description>&lt;URL>http://www.amazon.com/review/product/1449316646%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1449316646&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>All Offers&lt;/Description>&lt;URL>http://www.amazon.com/gp/offer-listing/1449316646%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1449316646&lt;/URL>&lt;/ItemLink>&lt;/ItemLinks>&lt;SmallImage>&lt;URL>http://ecx.images-amazon.com/images/I/5150hKq826L._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">57&lt;/Width>&lt;/SmallImage>&lt;MediumImage>&lt;URL>http://ecx.images-amazon.com/images/I/5150hKq826L._SL160_.jpg&lt;/URL>&lt;Height Units="pixels">160&lt;/Height>&lt;Width Units="pixels">122&lt;/Width>&lt;/MediumImage>&lt;LargeImage>&lt;URL>http://ecx.images-amazon.com/images/I/5150hKq826L.jpg&lt;/URL>&lt;Height Units="pixels">500&lt;/Height>&lt;Width Units="pixels">381&lt;/Width>&lt;/LargeImage>&lt;ImageSets>&lt;ImageSet Category="primary">&lt;SwatchImage>&lt;URL>http://ecx.images-amazon.com/images/I/5150hKq826L._SL30_.jpg&lt;/URL>&lt;Height Units="pixels">30&lt;/Height>&lt;Width Units="pixels">23&lt;/Wid
</span><span class='line'>04-18 12:52:51.976: D/SOAPHttpResponseHandler(279): e>&lt;URL>http://ecx.images-amazon.com/images/I/5150hKq826L._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">57&lt;/Width>&lt;/SmallImage>&lt;ThumbnailImage>&lt;URL>http://ecx.images-amazon.com/images/I/5150hKq826L._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">57&lt;/Width>&lt;/ThumbnailImage>&lt;TinyImage>&lt;URL>http://ecx.images-amazon.com/images/I/5150hKq826L._SL110_.jpg&lt;/URL>&lt;Height Units="pixels">110&lt;/Height>&lt;Width Units="pixels">84&lt;/Width>&lt;/TinyImage>&lt;MediumImage>&lt;URL>http://ecx.images-amazon.com/images/I/5150hKq826L._SL160_.jpg&lt;/URL>&lt;Height Units="pixels">160&lt;/Height>&lt;Width Units="pixels">122&lt;/Width>&lt;/MediumImage>&lt;LargeImage>&lt;URL>http://ecx.images-amazon.com/images/I/5150hKq826L.jpg&lt;/URL>&lt;Height Units="pixels">500&lt;/Height>&lt;Width Units="pixels">381&lt;/Width>&lt;/LargeImage>&lt;/ImageSet>&lt;/ImageSets>&lt;ItemAttributes>&lt;Author>Zigurd Mednieks&lt;/Author>&lt;Author>Laird Dornin&lt;/Author>&lt;Author>G. Blake Meike&lt;/Author>&lt;Author>Masumi Nakamura&lt;/Author>&lt;Manufacturer>O'Reilly Media&lt;/Manufacturer>&lt;ProductGroup>Book&lt;/ProductGroup>&lt;Title>Programming Android: Java Programming for the New Generation of Mobile Devices&lt;/Title>&lt;/ItemAttributes>&lt;/Item>&lt;Item>&lt;ASIN>0321804333&lt;/ASIN>&lt;DetailPageURL>http://www.amazon.com/Android-Programming-Ranch-Guide-Guides/dp/0321804333%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D165953%26creativeASIN%3D0321804333&lt;/DetailPageURL>&lt;ItemLinks>&lt;ItemLink>&lt;Description>Technical Details&lt;/Description>&lt;URL>http://www.amazon.com/Android-Programming-Ranch-Guide-Guides/dp/tech-data/0321804333%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0321804333&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Baby Registry&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/baby/add-item.html%3Fasin.0%3D0321804333%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0321804333&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Wedding Registry&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/wedding/add-item.html%3Fasin.0%3D0321804333%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0321804333&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Wishlist&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/wishlist/add-item.html%3Fasin.0%3D0321804333%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0321804333&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Tell A Friend&lt;/Description>&lt;URL>http://www.amazon.com/gp/pdp/taf/0321804333%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0321804333&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>All Customer Reviews&lt;/Description>&lt;URL>http://www.amazon.com/review/product/0321804333%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0321804333&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>All Offers&lt;/Description>&lt;URL>http://www.amazon.com/gp/offer-listing/0321804333%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0321804333&lt;/URL>&lt;/ItemLink>&lt;/ItemLinks>&lt;SmallImage>&lt;URL>http://ecx.images-amazon.com/images/I/41RZANo4I3L._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">52&lt;/Width>&lt;/SmallImage>&lt;MediumImage>&lt;URL>http://ecx.images-amazon.com/images/I/41RZANo4I3L._SL160_.jpg&lt;/URL>&lt;Height Units="pixels">160&lt;/Height>&lt;Width Units="pixels">112&lt;/Width>&lt;/MediumImage>&lt;LargeImage>&lt;URL>http://ecx.images-amazon.com/images/I/41RZANo4I3L.jpg&lt;/URL>&lt;Height Units="pixels">500&lt;/Height>&lt;Width Units="pixels">350&lt;/Width>&lt;/LargeImage>&lt;ImageSets>&lt;ImageSet Category="primary">&lt;SwatchImage>&lt;URL>http://ecx.images-amazon.com/images/I/41RZANo4I3L._SL30_.jpg&lt;/URL>&lt;Height Units="pixels">30&lt;/Height>&lt;Width Units="pixels">21&lt;/Width>&lt;/SwatchImage>&lt;SmallIm
</span><span class='line'>04-18 12:52:51.976: D/SOAPHttpResponseHandler(279): amazon.com/images/I/41RZANo4I3L._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">52&lt;/Width>&lt;/SmallImage>&lt;ThumbnailImage>&lt;URL>http://ecx.images-amazon.com/images/I/41RZANo4I3L._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">52&lt;/Width>&lt;/ThumbnailImage>&lt;TinyImage>&lt;URL>http://ecx.images-amazon.com/images/I/41RZANo4I3L._SL110_.jpg&lt;/URL>&lt;Height Units="pixels">110&lt;/Height>&lt;Width Units="pixels">77&lt;/Width>&lt;/TinyImage>&lt;MediumImage>&lt;URL>http://ecx.images-amazon.com/images/I/41RZANo4I3L._SL160_.jpg&lt;/URL>&lt;Height Units="pixels">160&lt;/Height>&lt;Width Units="pixels">112&lt;/Width>&lt;/MediumImage>&lt;LargeImage>&lt;URL>http://ecx.images-amazon.com/images/I/41RZANo4I3L.jpg&lt;/URL>&lt;Height Units="pixels">500&lt;/Height>&lt;Width Units="pixels">350&lt;/Width>&lt;/LargeImage>&lt;/ImageSet>&lt;/ImageSets>&lt;ItemAttributes>&lt;Author>Bill Phillips&lt;/Author>&lt;Author>Brian Hardy&lt;/Author>&lt;Manufacturer>Big Nerd Ranch Guides&lt;/Manufacturer>&lt;ProductGroup>Book&lt;/ProductGroup>&lt;Title>Android Programming: The Big Nerd Ranch Guide (Big Nerd Ranch Guides)&lt;/Title>&lt;/ItemAttributes>&lt;/Item>&lt;Item>&lt;ASIN>1118183487&lt;/ASIN>&lt;DetailPageURL>http://www.amazon.com/Professional-Android-Sensor-Programming-Milette/dp/1118183487%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D165953%26creativeASIN%3D1118183487&lt;/DetailPageURL>&lt;ItemLinks>&lt;ItemLink>&lt;Description>Technical Details&lt;/Description>&lt;URL>http://www.amazon.com/Professional-Android-Sensor-Programming-Milette/dp/tech-data/1118183487%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1118183487&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Baby Registry&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/baby/add-item.html%3Fasin.0%3D1118183487%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1118183487&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Wedding Registry&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/wedding/add-item.html%3Fasin.0%3D1118183487%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1118183487&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Wishlist&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/wishlist/add-item.html%3Fasin.0%3D1118183487%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1118183487&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Tell A Friend&lt;/Description>&lt;URL>http://www.amazon.com/gp/pdp/taf/1118183487%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1118183487&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>All Customer Reviews&lt;/Description>&lt;URL>http://www.amazon.com/review/product/1118183487%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1118183487&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>All Offers&lt;/Description>&lt;URL>http://www.amazon.com/gp/offer-listing/1118183487%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1118183487&lt;/URL>&lt;/ItemLink>&lt;/ItemLinks>&lt;SmallImage>&lt;URL>http://ecx.images-amazon.com/images/I/51q7NaXDNQL._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">60&lt;/Width>&lt;/SmallImage>&lt;MediumImage>&lt;URL>http://ecx.images-amazon.com/images/I/51q7NaXDNQL._SL160_.jpg&lt;/URL>&lt;Height Units="pixels">160&lt;/Height>&lt;Width Units="pixels">128&lt;/Width>&lt;/MediumImage>&lt;LargeImage>&lt;URL>http://ecx.images-amazon.com/images/I/51q7NaXDNQL.jpg&lt;/URL>&lt;Height Units="pixels">500&lt;/Height>&lt;Width Units="pixels">399&lt;/Width>&lt;/LargeImage>&lt;ImageSets>&lt;ImageSet Category="primary">&lt;SwatchImage>&lt;URL>http://ecx.images-amazon.com/images/I/51q7NaXDNQL._SL30_.jpg&lt;/URL>&lt;Height Units="pixels">30&lt;/Height>&lt;Width Units="pixels">24&lt;/Width>&lt;/SwatchImage>&lt;SmallImage>&lt;URL>http://ecx.images-amazon.com/images/I/51q7NaXDNQL._SL75_.jpg&lt;/URL>
</span><span class='line'>04-18 12:52:51.976: D/SOAPHttpResponseHandler(279): Height>&lt;Width Units="pixels">60&lt;/Width>&lt;/SmallImage>&lt;ThumbnailImage>&lt;URL>http://ecx.images-amazon.com/images/I/51q7NaXDNQL._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">60&lt;/Width>&lt;/ThumbnailImage>&lt;TinyImage>&lt;URL>http://ecx.images-amazon.com/images/I/51q7NaXDNQL._SL110_.jpg&lt;/URL>&lt;Height Units="pixels">110&lt;/Height>&lt;Width Units="pixels">88&lt;/Width>&lt;/TinyImage>&lt;MediumImage>&lt;URL>http://ecx.images-amazon.com/images/I/51q7NaXDNQL._SL160_.jpg&lt;/URL>&lt;Height Units="pixels">160&lt;/Height>&lt;Width Units="pixels">128&lt;/Width>&lt;/MediumImage>&lt;LargeImage>&lt;URL>http://ecx.images-amazon.com/images/I/51q7NaXDNQL.jpg&lt;/URL>&lt;Height Units="pixels">500&lt;/Height>&lt;Width Units="pixels">399&lt;/Width>&lt;/LargeImage>&lt;/ImageSet>&lt;/ImageSets>&lt;ItemAttributes>&lt;Author>Greg Milette&lt;/Author>&lt;Author>Adam Stroud&lt;/Author>&lt;Manufacturer>Wrox&lt;/Manufacturer>&lt;ProductGroup>Book&lt;/ProductGroup>&lt;Title>Professional Android Sensor Programming&lt;/Title>&lt;/ItemAttributes>&lt;/Item>&lt;Item>&lt;ASIN>1934356905&lt;/ASIN>&lt;DetailPageURL>http://www.amazon.com/Programming-Your-Home-Pragmatic-Programmers/dp/1934356905%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D165953%26creativeASIN%3D1934356905&lt;/DetailPageURL>&lt;ItemLinks>&lt;ItemLink>&lt;Description>Technical Details&lt;/Description>&lt;URL>http://www.amazon.com/Programming-Your-Home-Pragmatic-Programmers/dp/tech-data/1934356905%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1934356905&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Baby Registry&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/baby/add-item.html%3Fasin.0%3D1934356905%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1934356905&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Wedding Registry&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/wedding/add-item.html%3Fasin.0%3D1934356905%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1934356905&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Wishlist&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/wishlist/add-item.html%3Fasin.0%3D1934356905%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1934356905&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Tell A Friend&lt;/Description>&lt;URL>http://www.amazon.com/gp/pdp/taf/1934356905%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1934356905&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>All Customer Reviews&lt;/Description>&lt;URL>http://www.amazon.com/review/product/1934356905%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1934356905&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>All Offers&lt;/Description>&lt;URL>http://www.amazon.com/gp/offer-listing/1934356905%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1934356905&lt;/URL>&lt;/ItemLink>&lt;/ItemLinks>&lt;SmallImage>&lt;URL>http://ecx.images-amazon.com/images/I/41C3BFfs-xL._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">63&lt;/Width>&lt;/SmallImage>&lt;MediumImage>&lt;URL>http://ecx.images-amazon.com/images/I/41C3BFfs-xL._SL160_.jpg&lt;/URL>&lt;Height Units="pixels">160&lt;/Height>&lt;Width Units="pixels">133&lt;/Width>&lt;/MediumImage>&lt;LargeImage>&lt;URL>http://ecx.images-amazon.com/images/I/41C3BFfs-xL.jpg&lt;/URL>&lt;Height Units="pixels">500&lt;/Height>&lt;Width Units="pixels">417&lt;/Width>&lt;/LargeImage>&lt;ImageSets>&lt;ImageSet Category="primary">&lt;SwatchImage>&lt;URL>http://ecx.images-amazon.com/images/I/41C3BFfs-xL._SL30_.jpg&lt;/URL>&lt;Height Units="pixels">30&lt;/Height>&lt;Width Units="pixels">25&lt;/Width>&lt;/SwatchImage>&lt;SmallImage>&lt;URL>http://ecx.images-amazon.com/images/I/41C3BFfs-xL._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">63&lt;/Width>&lt;/SmallImage>&lt;ThumbnailImage>&lt;URL>http://ecx.images-amazon.com/im
</span><span class='line'>04-18 12:52:51.976: D/SOAPHttpResponseHandler(279): pg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">63&lt;/Width>&lt;/ThumbnailImage>&lt;TinyImage>&lt;URL>http://ecx.images-amazon.com/images/I/41C3BFfs-xL._SL110_.jpg&lt;/URL>&lt;Height Units="pixels">110&lt;/Height>&lt;Width Units="pixels">92&lt;/Width>&lt;/TinyImage>&lt;MediumImage>&lt;URL>http://ecx.images-amazon.com/images/I/41C3BFfs-xL._SL160_.jpg&lt;/URL>&lt;Height Units="pixels">160&lt;/Height>&lt;Width Units="pixels">133&lt;/Width>&lt;/MediumImage>&lt;LargeImage>&lt;URL>http://ecx.images-amazon.com/images/I/41C3BFfs-xL.jpg&lt;/URL>&lt;Height Units="pixels">500&lt;/Height>&lt;Width Units="pixels">417&lt;/Width>&lt;/LargeImage>&lt;/ImageSet>&lt;ImageSet Category="variant">&lt;SwatchImage>&lt;URL>http://ecx.images-amazon.com/images/I/41PqQ5uDLIL._SL30_.jpg&lt;/URL>&lt;Height Units="pixels">30&lt;/Height>&lt;Width Units="pixels">25&lt;/Width>&lt;/SwatchImage>&lt;SmallImage>&lt;URL>http://ecx.images-amazon.com/images/I/41PqQ5uDLIL._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">63&lt;/Width>&lt;/SmallImage>&lt;ThumbnailImage>&lt;URL>http://ecx.images-amazon.com/images/I/41PqQ5uDLIL._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">63&lt;/Width>&lt;/ThumbnailImage>&lt;TinyImage>&lt;URL>http://ecx.images-amazon.com/images/I/41PqQ5uDLIL._SL110_.jpg&lt;/URL>&lt;Height Units="pixels">110&lt;/Height>&lt;Width Units="pixels">92&lt;/Width>&lt;/TinyImage>&lt;MediumImage>&lt;URL>http://ecx.images-amazon.com/images/I/41PqQ5uDLIL._SL160_.jpg&lt;/URL>&lt;Height Units="pixels">160&lt;/Height>&lt;Width Units="pixels">134&lt;/Width>&lt;/MediumImage>&lt;LargeImage>&lt;URL>http://ecx.images-amazon.com/images/I/41PqQ5uDLIL.jpg&lt;/URL>&lt;Height Units="pixels">500&lt;/Height>&lt;Width Units="pixels">418&lt;/Width>&lt;/LargeImage>&lt;/ImageSet>&lt;/ImageSets>&lt;ItemAttributes>&lt;Author>Mike Riley&lt;/Author>&lt;Manufacturer>Pragmatic Bookshelf&lt;/Manufacturer>&lt;ProductGroup>Book&lt;/ProductGroup>&lt;Title>Programming Your Home: Automate with Arduino, Android, and Your Computer (Pragmatic Programmers)&lt;/Title>&lt;/ItemAttributes>&lt;/Item>&lt;Item>&lt;ASIN>1118026438&lt;/ASIN>&lt;DetailPageURL>http://www.amazon.com/Professional-Android-Programming-Mono-NET/dp/1118026438%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D165953%26creativeASIN%3D1118026438&lt;/DetailPageURL>&lt;ItemLinks>&lt;ItemLink>&lt;Description>Technical Details&lt;/Description>&lt;URL>http://www.amazon.com/Professional-Android-Programming-Mono-NET/dp/tech-data/1118026438%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1118026438&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Baby Registry&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/baby/add-item.html%3Fasin.0%3D1118026438%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1118026438&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Wedding Registry&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/wedding/add-item.html%3Fasin.0%3D1118026438%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1118026438&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Wishlist&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/wishlist/add-item.html%3Fasin.0%3D1118026438%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1118026438&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Tell A Friend&lt;/Description>&lt;URL>http://www.amazon.com/gp/pdp/taf/1118026438%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1118026438&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>All Customer Reviews&lt;/Description>&lt;URL>http://www.amazon.com/review/product/1118026438%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1118026438&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>All Offers&lt;/Description>&lt;URL>http://www.amazon.com/gp/offer-listing/1118026438%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1118026438&lt;/UR
</span><span class='line'>04-18 12:52:51.976: D/SOAPHttpResponseHandler(279): mallImage>&lt;URL>http://ecx.images-amazon.com/images/I/51LeQyvL9VL._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">59&lt;/Width>&lt;/SmallImage>&lt;MediumImage>&lt;URL>http://ecx.images-amazon.com/images/I/51LeQyvL9VL._SL160_.jpg&lt;/URL>&lt;Height Units="pixels">160&lt;/Height>&lt;Width Units="pixels">126&lt;/Width>&lt;/MediumImage>&lt;LargeImage>&lt;URL>http://ecx.images-amazon.com/images/I/51LeQyvL9VL.jpg&lt;/URL>&lt;Height Units="pixels">500&lt;/Height>&lt;Width Units="pixels">394&lt;/Width>&lt;/LargeImage>&lt;ImageSets>&lt;ImageSet Category="primary">&lt;SwatchImage>&lt;URL>http://ecx.images-amazon.com/images/I/51LeQyvL9VL._SL30_.jpg&lt;/URL>&lt;Height Units="pixels">30&lt;/Height>&lt;Width Units="pixels">24&lt;/Width>&lt;/SwatchImage>&lt;SmallImage>&lt;URL>http://ecx.images-amazon.com/images/I/51LeQyvL9VL._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">59&lt;/Width>&lt;/SmallImage>&lt;ThumbnailImage>&lt;URL>http://ecx.images-amazon.com/images/I/51LeQyvL9VL._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">59&lt;/Width>&lt;/ThumbnailImage>&lt;TinyImage>&lt;URL>http://ecx.images-amazon.com/images/I/51LeQyvL9VL._SL110_.jpg&lt;/URL>&lt;Height Units="pixels">110&lt;/Height>&lt;Width Units="pixels">87&lt;/Width>&lt;/TinyImage>&lt;MediumImage>&lt;URL>http://ecx.images-amazon.com/images/I/51LeQyvL9VL._SL160_.jpg&lt;/URL>&lt;Height Units="pixels">160&lt;/Height>&lt;Width Units="pixels">126&lt;/Width>&lt;/MediumImage>&lt;LargeImage>&lt;URL>http://ecx.images-amazon.com/images/I/51LeQyvL9VL.jpg&lt;/URL>&lt;Height Units="pixels">500&lt;/Height>&lt;Width Units="pixels">394&lt;/Width>&lt;/LargeImage>&lt;/ImageSet>&lt;/ImageSets>&lt;ItemAttributes>&lt;Author>Wallace B. McClure&lt;/Author>&lt;Author>Nathan Blevins&lt;/Author>&lt;Author>John J. Croft IV&lt;/Author>&lt;Author>Jonathan Dick&lt;/Author>&lt;Author>Chris Hardy&lt;/Author>&lt;Manufacturer>Wrox&lt;/Manufacturer>&lt;ProductGroup>Book&lt;/ProductGroup>&lt;Title>Professional Android Programming with Mono for Android and .NET/C#&lt;/Title>&lt;/ItemAttributes>&lt;/Item>&lt;Item>&lt;ASIN>1118027744&lt;/ASIN>&lt;DetailPageURL>http://www.amazon.com/Android-Game-Programming-For-Dummies/dp/1118027744%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D165953%26creativeASIN%3D1118027744&lt;/DetailPageURL>&lt;ItemLinks>&lt;ItemLink>&lt;Description>Technical Details&lt;/Description>&lt;URL>http://www.amazon.com/Android-Game-Programming-For-Dummies/dp/tech-data/1118027744%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1118027744&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Baby Registry&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/baby/add-item.html%3Fasin.0%3D1118027744%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1118027744&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Wedding Registry&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/wedding/add-item.html%3Fasin.0%3D1118027744%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1118027744&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Wishlist&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/wishlist/add-item.html%3Fasin.0%3D1118027744%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1118027744&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Tell A Friend&lt;/Description>&lt;URL>http://www.amazon.com/gp/pdp/taf/1118027744%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1118027744&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>All Customer Reviews&lt;/Description>&lt;URL>http://www.amazon.com/review/product/1118027744%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1118027744&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>All Offers&lt;/Description>&lt;URL>http://www.amazon.com/gp/offer-listing/1118027744%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1118027744&lt;/URL>&lt;/ItemLink>&lt;/Ite
</span><span class='line'>04-18 12:52:51.976: D/SOAPHttpResponseHandler(279): p://ecx.images-amazon.com/images/I/51B9ofyDxBL._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">59&lt;/Width>&lt;/SmallImage>&lt;MediumImage>&lt;URL>http://ecx.images-amazon.com/images/I/51B9ofyDxBL._SL160_.jpg&lt;/URL>&lt;Height Units="pixels">160&lt;/Height>&lt;Width Units="pixels">126&lt;/Width>&lt;/MediumImage>&lt;LargeImage>&lt;URL>http://ecx.images-amazon.com/images/I/51B9ofyDxBL.jpg&lt;/URL>&lt;Height Units="pixels">500&lt;/Height>&lt;Width Units="pixels">394&lt;/Width>&lt;/LargeImage>&lt;ImageSets>&lt;ImageSet Category="primary">&lt;SwatchImage>&lt;URL>http://ecx.images-amazon.com/images/I/51B9ofyDxBL._SL30_.jpg&lt;/URL>&lt;Height Units="pixels">30&lt;/Height>&lt;Width Units="pixels">24&lt;/Width>&lt;/SwatchImage>&lt;SmallImage>&lt;URL>http://ecx.images-amazon.com/images/I/51B9ofyDxBL._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">59&lt;/Width>&lt;/SmallImage>&lt;ThumbnailImage>&lt;URL>http://ecx.images-amazon.com/images/I/51B9ofyDxBL._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">59&lt;/Width>&lt;/ThumbnailImage>&lt;TinyImage>&lt;URL>http://ecx.images-amazon.com/images/I/51B9ofyDxBL._SL110_.jpg&lt;/URL>&lt;Height Units="pixels">110&lt;/Height>&lt;Width Units="pixels">87&lt;/Width>&lt;/TinyImage>&lt;MediumImage>&lt;URL>http://ecx.images-amazon.com/images/I/51B9ofyDxBL._SL160_.jpg&lt;/URL>&lt;Height Units="pixels">160&lt;/Height>&lt;Width Units="pixels">126&lt;/Width>&lt;/MediumImage>&lt;LargeImage>&lt;URL>http://ecx.images-amazon.com/images/I/51B9ofyDxBL.jpg&lt;/URL>&lt;Height Units="pixels">500&lt;/Height>&lt;Width Units="pixels">394&lt;/Width>&lt;/LargeImage>&lt;/ImageSet>&lt;/ImageSets>&lt;ItemAttributes>&lt;Author>Derek James&lt;/Author>&lt;Manufacturer>For Dummies&lt;/Manufacturer>&lt;ProductGroup>Book&lt;/ProductGroup>&lt;Title>Android Game Programming For Dummies&lt;/Title>&lt;/ItemAttributes>&lt;/Item>&lt;Item>&lt;ASIN>1907920153&lt;/ASIN>&lt;DetailPageURL>http://www.amazon.com/Android-Apps-programming-step-step/dp/1907920153%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D165953%26creativeASIN%3D1907920153&lt;/DetailPageURL>&lt;ItemLinks>&lt;ItemLink>&lt;Description>Technical Details&lt;/Description>&lt;URL>http://www.amazon.com/Android-Apps-programming-step-step/dp/tech-data/1907920153%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1907920153&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Baby Registry&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/baby/add-item.html%3Fasin.0%3D1907920153%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1907920153&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Wedding Registry&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/wedding/add-item.html%3Fasin.0%3D1907920153%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1907920153&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Wishlist&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/wishlist/add-item.html%3Fasin.0%3D1907920153%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1907920153&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Tell A Friend&lt;/Description>&lt;URL>http://www.amazon.com/gp/pdp/taf/1907920153%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1907920153&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>All Customer Reviews&lt;/Description>&lt;URL>http://www.amazon.com/review/product/1907920153%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1907920153&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>All Offers&lt;/Description>&lt;URL>http://www.amazon.com/gp/offer-listing/1907920153%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1907920153&lt;/URL>&lt;/ItemLink>&lt;/ItemLinks>&lt;SmallImage>&lt;URL>http://ecx.images-amazon.com/images/I/51%2BE6YAmL1L._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">54&lt;/Width>&lt;/SmallImage>&lt;Me
</span><span class='line'>04-18 12:52:51.976: D/SOAPHttpResponseHandler(279): mages-amazon.com/images/I/51%2BE6YAmL1L._SL160_.jpg&lt;/URL>&lt;Height Units="pixels">160&lt;/Height>&lt;Width Units="pixels">116&lt;/Width>&lt;/MediumImage>&lt;LargeImage>&lt;URL>http://ecx.images-amazon.com/images/I/51%2BE6YAmL1L.jpg&lt;/URL>&lt;Height Units="pixels">500&lt;/Height>&lt;Width Units="pixels">362&lt;/Width>&lt;/LargeImage>&lt;ImageSets>&lt;ImageSet Category="primary">&lt;SwatchImage>&lt;URL>http://ecx.images-amazon.com/images/I/51%2BE6YAmL1L._SL30_.jpg&lt;/URL>&lt;Height Units="pixels">30&lt;/Height>&lt;Width Units="pixels">22&lt;/Width>&lt;/SwatchImage>&lt;SmallImage>&lt;URL>http://ecx.images-amazon.com/images/I/51%2BE6YAmL1L._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">54&lt;/Width>&lt;/SmallImage>&lt;ThumbnailImage>&lt;URL>http://ecx.images-amazon.com/images/I/51%2BE6YAmL1L._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">54&lt;/Width>&lt;/ThumbnailImage>&lt;TinyImage>&lt;URL>http://ecx.images-amazon.com/images/I/51%2BE6YAmL1L._SL110_.jpg&lt;/URL>&lt;Height Units="pixels">110&lt;/Height>&lt;Width Units="pixels">80&lt;/Width>&lt;/TinyImage>&lt;MediumImage>&lt;URL>http://ecx.images-amazon.com/images/I/51%2BE6YAmL1L._SL160_.jpg&lt;/URL>&lt;Height Units="pixels">160&lt;/Height>&lt;Width Units="pixels">116&lt;/Width>&lt;/MediumImage>&lt;LargeImage>&lt;URL>http://ecx.images-amazon.com/images/I/51%2BE6YAmL1L.jpg&lt;/URL>&lt;Height Units="pixels">500&lt;/Height>&lt;Width Units="pixels">362&lt;/Width>&lt;/LargeImage>&lt;/ImageSet>&lt;/ImageSets>&lt;ItemAttributes>&lt;Author>Stefan Schwark&lt;/Author>&lt;Manufacturer>Elektor Publishing&lt;/Manufacturer>&lt;ProductGroup>Book&lt;/ProductGroup>&lt;Title>Android Apps: programming step-by-step&lt;/Title>&lt;/ItemAttributes>&lt;/Item>&lt;Item>&lt;ASIN>0672336286&lt;/ASIN>&lt;DetailPageURL>http://www.amazon.com/Android-Programming-Unleashed-B-M-Harwani/dp/0672336286%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D165953%26creativeASIN%3D0672336286&lt;/DetailPageURL>&lt;ItemLinks>&lt;ItemLink>&lt;Description>Technical Details&lt;/Description>&lt;URL>http://www.amazon.com/Android-Programming-Unleashed-B-M-Harwani/dp/tech-data/0672336286%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0672336286&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Baby Registry&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/baby/add-item.html%3Fasin.0%3D0672336286%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0672336286&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Wedding Registry&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/wedding/add-item.html%3Fasin.0%3D0672336286%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0672336286&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Wishlist&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/wishlist/add-item.html%3Fasin.0%3D0672336286%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0672336286&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Tell A Friend&lt;/Description>&lt;URL>http://www.amazon.com/gp/pdp/taf/0672336286%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0672336286&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>All Customer Reviews&lt;/Description>&lt;URL>http://www.amazon.com/review/product/0672336286%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0672336286&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>All Offers&lt;/Description>&lt;URL>http://www.amazon.com/gp/offer-listing/0672336286%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0672336286&lt;/URL>&lt;/ItemLink>&lt;/ItemLinks>&lt;SmallImage>&lt;URL>http://ecx.images-amazon.com/images/I/41keFzzOx6L._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">57&lt;/Width>&lt;/SmallImage>&lt;MediumImage>&lt;URL>http://ecx.images-amazon.com/images/I/41keFzzOx6L._SL160_.jpg&lt;/URL>&lt;Height Units="pixels">160&lt;/Height>&lt;Width Units="p
</span><span class='line'>04-18 12:52:51.976: D/SOAPHttpResponseHandler(279): mage>&lt;LargeImage>&lt;URL>http://ecx.images-amazon.com/images/I/41keFzzOx6L.jpg&lt;/URL>&lt;Height Units="pixels">500&lt;/Height>&lt;Width Units="pixels">383&lt;/Width>&lt;/LargeImage>&lt;ImageSets>&lt;ImageSet Category="primary">&lt;SwatchImage>&lt;URL>http://ecx.images-amazon.com/images/I/41keFzzOx6L._SL30_.jpg&lt;/URL>&lt;Height Units="pixels">30&lt;/Height>&lt;Width Units="pixels">23&lt;/Width>&lt;/SwatchImage>&lt;SmallImage>&lt;URL>http://ecx.images-amazon.com/images/I/41keFzzOx6L._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">57&lt;/Width>&lt;/SmallImage>&lt;ThumbnailImage>&lt;URL>http://ecx.images-amazon.com/images/I/41keFzzOx6L._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">57&lt;/Width>&lt;/ThumbnailImage>&lt;TinyImage>&lt;URL>http://ecx.images-amazon.com/images/I/41keFzzOx6L._SL110_.jpg&lt;/URL>&lt;Height Units="pixels">110&lt;/Height>&lt;Width Units="pixels">84&lt;/Width>&lt;/TinyImage>&lt;MediumImage>&lt;URL>http://ecx.images-amazon.com/images/I/41keFzzOx6L._SL160_.jpg&lt;/URL>&lt;Height Units="pixels">160&lt;/Height>&lt;Width Units="pixels">123&lt;/Width>&lt;/MediumImage>&lt;LargeImage>&lt;URL>http://ecx.images-amazon.com/images/I/41keFzzOx6L.jpg&lt;/URL>&lt;Height Units="pixels">500&lt;/Height>&lt;Width Units="pixels">383&lt;/Width>&lt;/LargeImage>&lt;/ImageSet>&lt;/ImageSets>&lt;ItemAttributes>&lt;Author>B.M. Harwani&lt;/Author>&lt;Manufacturer>Sams Publishing&lt;/Manufacturer>&lt;ProductGroup>Book&lt;/ProductGroup>&lt;Title>Android Programming Unleashed&lt;/Title>&lt;/ItemAttributes>&lt;/Item>&lt;Item>&lt;ASIN>1118454766&lt;/ASIN>&lt;DetailPageURL>http://www.amazon.com/Professional-Android-Accessory-Programming-Programmer/dp/1118454766%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D165953%26creativeASIN%3D1118454766&lt;/DetailPageURL>&lt;ItemLinks>&lt;ItemLink>&lt;Description>Technical Details&lt;/Description>&lt;URL>http://www.amazon.com/Professional-Android-Accessory-Programming-Programmer/dp/tech-data/1118454766%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1118454766&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Baby Registry&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/baby/add-item.html%3Fasin.0%3D1118454766%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1118454766&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Wedding Registry&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/wedding/add-item.html%3Fasin.0%3D1118454766%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1118454766&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Wishlist&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/wishlist/add-item.html%3Fasin.0%3D1118454766%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1118454766&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Tell A Friend&lt;/Description>&lt;URL>http://www.amazon.com/gp/pdp/taf/1118454766%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1118454766&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>All Customer Reviews&lt;/Description>&lt;URL>http://www.amazon.com/review/product/1118454766%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1118454766&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>All Offers&lt;/Description>&lt;URL>http://www.amazon.com/gp/offer-listing/1118454766%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1118454766&lt;/URL>&lt;/ItemLink>&lt;/ItemLinks>&lt;SmallImage>&lt;URL>http://ecx.images-amazon.com/images/I/51FpeMpR0wL._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">60&lt;/Width>&lt;/SmallImage>&lt;MediumImage>&lt;URL>http://ecx.images-amazon.com/images/I/51FpeMpR0wL._SL160_.jpg&lt;/URL>&lt;Height Units="pixels">160&lt;/Height>&lt;Width Units="pixels">128&lt;/Width>&lt;/MediumImage>&lt;LargeImage>&lt;URL>http://ecx.images-amazon.com/images/I/51FpeMpR0wL.jpg&lt;/URL>&lt;Height Units="pixels">500&lt;/He
</span><span class='line'>04-18 12:52:51.976: D/SOAPHttpResponseHandler(279): 399&lt;/Width>&lt;/LargeImage>&lt;ImageSets>&lt;ImageSet Category="primary">&lt;SwatchImage>&lt;URL>http://ecx.images-amazon.com/images/I/51FpeMpR0wL._SL30_.jpg&lt;/URL>&lt;Height Units="pixels">30&lt;/Height>&lt;Width Units="pixels">24&lt;/Width>&lt;/SwatchImage>&lt;SmallImage>&lt;URL>http://ecx.images-amazon.com/images/I/51FpeMpR0wL._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">60&lt;/Width>&lt;/SmallImage>&lt;ThumbnailImage>&lt;URL>http://ecx.images-amazon.com/images/I/51FpeMpR0wL._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">60&lt;/Width>&lt;/ThumbnailImage>&lt;TinyImage>&lt;URL>http://ecx.images-amazon.com/images/I/51FpeMpR0wL._SL110_.jpg&lt;/URL>&lt;Height Units="pixels">110&lt;/Height>&lt;Width Units="pixels">88&lt;/Width>&lt;/TinyImage>&lt;MediumImage>&lt;URL>http://ecx.images-amazon.com/images/I/51FpeMpR0wL._SL160_.jpg&lt;/URL>&lt;Height Units="pixels">160&lt;/Height>&lt;Width Units="pixels">128&lt;/Width>&lt;/MediumImage>&lt;LargeImage>&lt;URL>http://ecx.images-amazon.com/images/I/51FpeMpR0wL.jpg&lt;/URL>&lt;Height Units="pixels">500&lt;/Height>&lt;Width Units="pixels">399&lt;/Width>&lt;/LargeImage>&lt;/ImageSet>&lt;/ImageSets>&lt;ItemAttributes>&lt;Author>Andreas Goransson&lt;/Author>&lt;Author>David Cuartielles Ruiz&lt;/Author>&lt;Manufacturer>Wrox&lt;/Manufacturer>&lt;ProductGroup>Book&lt;/ProductGroup>&lt;Title>Professional Android Open Accessory Programming with Arduino (Wrox Programmer to Programmer)&lt;/Title>&lt;/ItemAttributes>&lt;/Item>&lt;Item>&lt;ASIN>0672336049&lt;/ASIN>&lt;DetailPageURL>http://www.amazon.com/Teach-Yourself-Android-Programming-Hours/dp/0672336049%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D165953%26creativeASIN%3D0672336049&lt;/DetailPageURL>&lt;ItemLinks>&lt;ItemLink>&lt;Description>Technical Details&lt;/Description>&lt;URL>http://www.amazon.com/Teach-Yourself-Android-Programming-Hours/dp/tech-data/0672336049%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0672336049&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Baby Registry&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/baby/add-item.html%3Fasin.0%3D0672336049%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0672336049&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Wedding Registry&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/wedding/add-item.html%3Fasin.0%3D0672336049%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0672336049&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Wishlist&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/wishlist/add-item.html%3Fasin.0%3D0672336049%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0672336049&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Tell A Friend&lt;/Description>&lt;URL>http://www.amazon.com/gp/pdp/taf/0672336049%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0672336049&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>All Customer Reviews&lt;/Description>&lt;URL>http://www.amazon.com/review/product/0672336049%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0672336049&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>All Offers&lt;/Description>&lt;URL>http://www.amazon.com/gp/offer-listing/0672336049%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dteg%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0672336049&lt;/URL>&lt;/ItemLink>&lt;/ItemLinks>&lt;SmallImage>&lt;URL>http://ecx.images-amazon.com/images/I/41vTpLHUytL._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">57&lt;/Width>&lt;/SmallImage>&lt;MediumImage>&lt;URL>http://ecx.images-amazon.com/images/I/41vTpLHUytL._SL160_.jpg&lt;/URL>&lt;Height Units="pixels">160&lt;/Height>&lt;Width Units="pixels">122&lt;/Width>&lt;/MediumImage>&lt;LargeImage>&lt;URL>http://ecx.images-amazon.com/images/I/41vTpLHUytL.jpg&lt;/URL>&lt;Height Units="pixels">500&lt;/Height>&lt;Width Units="pixels">382&lt;/Width>&lt;/LargeImage>&lt;ImageSets>&lt;Image
</span><span class='line'>04-18 12:52:51.976: D/SOAPHttpResponseHandler(279): tchImage>&lt;URL>http://ecx.images-amazon.com/images/I/41vTpLHUytL._SL30_.jpg&lt;/URL>&lt;Height Units="pixels">30&lt;/Height>&lt;Width Units="pixels">23&lt;/Width>&lt;/SwatchImage>&lt;SmallImage>&lt;URL>http://ecx.images-amazon.com/images/I/41vTpLHUytL._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">57&lt;/Width>&lt;/SmallImage>&lt;ThumbnailImage>&lt;URL>http://ecx.images-amazon.com/images/I/41vTpLHUytL._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">57&lt;/Width>&lt;/ThumbnailImage>&lt;TinyImage>&lt;URL>http://ecx.images-amazon.com/images/I/41vTpLHUytL._SL110_.jpg&lt;/URL>&lt;Height Units="pixels">110&lt;/Height>&lt;Width Units="pixels">84&lt;/Width>&lt;/TinyImage>&lt;MediumImage>&lt;URL>http://ecx.images-amazon.com/images/I/41vTpLHUytL._SL160_.jpg&lt;/URL>&lt;Height Units="pixels">160&lt;/Height>&lt;Width Units="pixels">122&lt;/Width>&lt;/MediumImage>&lt;LargeImage>&lt;URL>http://ecx.images-amazon.com/images/I/41vTpLHUytL.jpg&lt;/URL>&lt;Height Units="pixels">500&lt;/Height>&lt;Width Units="pixels">382&lt;/Width>&lt;/LargeImage>&lt;/ImageSet>&lt;/ImageSets>&lt;ItemAttributes>&lt;Author>Jonathan S. Harbour&lt;/Author>&lt;Manufacturer>Sams Publishing&lt;/Manufacturer>&lt;ProductGroup>Book&lt;/ProductGroup>&lt;Title>Sams Teach Yourself Android Game Programming in 24 Hours&lt;/Title>&lt;/ItemAttributes>&lt;/Item>&lt;/Items>&lt;/ItemSearchResponse>&lt;/soapenv:Body>&lt;/soapenv:Envelope></span></code></pre></td></tr></table></div></figure>


<p>If you forget to fill in your AWS Access Key and Secure Key in the shared client, then you will get error like below:</p>

<p><img class="center" src="http://bulldog2011.github.com/images/nano/tutorial05/screen_shot2.png" width="400" height="600"></p>

<p>This is just a bare minimum Amazon Product Advertising service based application, for a demo with more functions, please see the <a href="https://github.com/bulldog2011/nano/tree/master/sample/webservice/AmazonBookFinder">AmazonBookFinder</a> sample in the <code>sample\webservice</code> folder of Nano source, AmazonBookFinder calls following APIs in one app:</p>

<blockquote><ol>
<li><strong><em>itemSearch</em></strong> for book search</li>
<li><strong><em>cartCreate</em></strong> to add chosen book into shopping cart</li>
</ol>
</blockquote>

<p>Below is a few screen shots:</p>

<p>Search:
<img class="center" src="http://bulldog2011.github.com/images/nano/tutorial05/screen_shot3.png" width="400" height="600"></p>

<p>Details:
<img class="center" src="http://bulldog2011.github.com/images/nano/tutorial05/screen_shot4.png" width="400" height="600"></p>

<p>Add To Cart:
<img class="center" src="http://bulldog2011.github.com/images/nano/tutorial05/screen_shot5.png" width="400" height="600"></p>

<p>Now it&#8217;s your turn to create Android applications based on Amazon Product Advertising web service, see your next great service based app.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nano Tutorial 4 - Hello eBay Shopping]]></title>
    <link href="http://bulldog2011.github.com/blog/2013/04/18/nano-tutorial-4-hello-ebay-shopping/"/>
    <updated>2013-04-18T09:52:00+08:00</updated>
    <id>http://bulldog2011.github.com/blog/2013/04/18/nano-tutorial-4-hello-ebay-shopping</id>
    <content type="html"><![CDATA[<p>This is the fourth tutorial of Nano tutorial series, in this tutorial, I will show you how to integrate <a href="https://github.com/bulldog2011/nano">Nano</a> with <a href="https://www.x.com/developers/ebay/products/shopping-api">eBay Shopping Web Service</a>, if you are not familiar with this service, just have a quick review on its official site, basically, eBay Shopping service allows you to search for eBay items, products and reviews, user info, and popular items and searches. In previous tutorials, I showed you how to integrate Nano with SOAP based services, while in this tutorial, I will show you how to interate Nano with XML based service, the eBay Shopping service just supports XML message format.</p>

<p>The source of this tutorial is <a href="https://github.com/bulldog2011/nano/tree/master/sample/webservice/HelloeBayShopping">here</a>.</p>

<!--more-->


<h2>Step 0 - Prerequisite</h2>

<p>I suppose you have already read previous Nano tutorials, at least 1 and 2, and basically you should know:</p>

<blockquote><ul>
<li>The wsdl driven development process supported by Nano.</li>
<li>How to add the Nano library and the generated service proxy into your Android project.</li>
</ul>
</blockquote>

<h2>Step 1 - Generate Java Proxy from WSDL</h2>

<p>Download <a href="https://github.com/bulldog2011/mwsc">mwsc</a> and run following command in terminal to generate the proxy:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bin\mwsc.bat -nano -d generated -ebayshopping http://developer.ebay.com/webservices/latest/ShoppingService.wsdl</span></code></pre></td></tr></table></div></figure>


<p>Depends on the network speed, you may need to wait a few moments to let the code generator download the wsdl and generate code, you may also download the wsdl and run the code generator with a local wsdl.</p>

<p>A few comments about the codegen options:</p>

<blockquote><ul>
<li>The code generator will throw many warnings, say that the wsdl violates some schema rule, just ignore them, it&#8217;s ok as long as the final code is generated correctly.</li>
<li>I have added a special <code>-ebayshopping</code> codegen option, this is because eBay Shopping service needs a per-call operation name HTTP header(eBay Finding service also needs a similar but different header), I added this special flag in the code generator to let it generate the header for me, since I don&#8217;t want to add this header everytime I call an eBay Shopping service, so this is just a special flag for eBay Shopping services and for demo only, or a hidden feature, not a generic codegen option.</li>
<li>By default, the code generator will derive package name from target namespace in wsdl, if necessary, you can override package name with <code>-p</code> option.</li>
<li>The generator will generate both SOAP and XML clients for us, in the <code>client</code> sub-folder.</li>
</ul>
</blockquote>

<h2>Step 2 - Create New Android Project, Add Nano Library and Generated Proxy into Your Project</h2>

<p>Create a simple Android project called <code>HelloeBayShopping</code> in eclipse(or other IDE you prefer), then:</p>

<blockquote><ol>
<li>Download <a href="https://github.com/bulldog2011/bulldog-repo/blob/master/repo/releases/com/leansoft/nano/0.7.0/nano-0.7.0.jar">latest nano library jar</a> and add it to the <code>libs</code> folder of your Android project.</li>
<li>Drag the above generated proxy into the <code>src</code> folder of your Android project.</li>
<li>Add following user permissions in the <code>AndroidManifest.xml</code> file to enable network access.</li>
</ol>
</blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;uses-permission</span> <span class="na">android:name=</span><span class="s">&quot;android.permission.INTERNET&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;uses-permission</span> <span class="na">android:name=</span><span class="s">&quot;android.permission.ACCESS_NETWORK_STATE&quot;</span> <span class="nt">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now build the project to ensure it can build successfully.</p>

<p>The code generation will generate both SOAP and XML based interfaces from eBay Shopping wsdl for us,
since we will use XML based interface in this tutorial, you may now review the generated eBay Shopping service XML interface to learn what kinds of functions are provided by eBay Shopping service, and what kinds of parameters are needed to call the service, the interface is posted below:</p>

<figure class='code'><figcaption><span>ShoppingInterface_XMLClient.java </span><a href='https://github.com/bulldog2011/nano/blob/master/sample/webservice/HelloeBayShopping/src/ebay/apis/eblbasecomponents/client/ShoppingInterface_XMLClient.java'>source </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// Generated by wsdl compiler for android/java</span>
</span><span class='line'><span class="c1">// DO NOT CHANGE!</span>
</span><span class='line'><span class="kn">package</span> <span class="n">ebay</span><span class="o">.</span><span class="na">apis</span><span class="o">.</span><span class="na">eblbasecomponents</span><span class="o">.</span><span class="na">client</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.leansoft.nano.ws.XMLServiceCallback</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.leansoft.nano.ws.NanoXMLClient</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">ebay.apis.eblbasecomponents.GetSingleItemResponseType</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">ebay.apis.eblbasecomponents.GetShippingCostsResponseType</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">ebay.apis.eblbasecomponents.GetCategoryInfoResponseType</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">ebay.apis.eblbasecomponents.GeteBayTimeRequestType</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">ebay.apis.eblbasecomponents.GetCategoryInfoRequestType</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">ebay.apis.eblbasecomponents.GetUserProfileRequestType</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">ebay.apis.eblbasecomponents.GetUserProfileResponseType</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">ebay.apis.eblbasecomponents.GetSingleItemRequestType</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">ebay.apis.eblbasecomponents.FindPopularSearchesRequestType</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">ebay.apis.eblbasecomponents.FindHalfProductsResponseType</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">ebay.apis.eblbasecomponents.FindPopularItemsRequestType</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">ebay.apis.eblbasecomponents.FindReviewsAndGuidesRequestType</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">ebay.apis.eblbasecomponents.FindPopularSearchesResponseType</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">ebay.apis.eblbasecomponents.FindProductsResponseType</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">ebay.apis.eblbasecomponents.GeteBayTimeResponseType</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">ebay.apis.eblbasecomponents.GetMultipleItemsResponseType</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">ebay.apis.eblbasecomponents.GetShippingCostsRequestType</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">ebay.apis.eblbasecomponents.GetItemStatusResponseType</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">ebay.apis.eblbasecomponents.FindPopularItemsResponseType</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">ebay.apis.eblbasecomponents.GetMultipleItemsRequestType</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">ebay.apis.eblbasecomponents.FindProductsRequestType</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">ebay.apis.eblbasecomponents.FindReviewsAndGuidesResponseType</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">ebay.apis.eblbasecomponents.FindHalfProductsRequestType</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">ebay.apis.eblbasecomponents.GetItemStatusRequestType</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> This class is the XML client to the ShoppingInterface Web Service.</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ShoppingInterface_XMLClient</span> <span class="kd">extends</span> <span class="n">NanoXMLClient</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     public method</span>
</span><span class='line'><span class="cm">    */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">findHalfProducts</span><span class="o">(</span><span class="n">FindHalfProductsRequestType</span> <span class="n">requestObject</span><span class="o">,</span> <span class="n">XMLServiceCallback</span><span class="o">&lt;</span><span class="n">FindHalfProductsResponseType</span><span class="o">&gt;</span> <span class="n">serviceCallback</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">getAsyncHttpClient</span><span class="o">().</span><span class="na">addHeader</span><span class="o">(</span><span class="s">&quot;X-EBAY-API-CALL-NAME&quot;</span><span class="o">,</span> <span class="s">&quot;FindHalfProducts&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">requestObject</span><span class="o">,</span> <span class="n">serviceCallback</span><span class="o">,</span> <span class="n">FindHalfProductsResponseType</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     public method</span>
</span><span class='line'><span class="cm">    */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">findPopularItems</span><span class="o">(</span><span class="n">FindPopularItemsRequestType</span> <span class="n">requestObject</span><span class="o">,</span> <span class="n">XMLServiceCallback</span><span class="o">&lt;</span><span class="n">FindPopularItemsResponseType</span><span class="o">&gt;</span> <span class="n">serviceCallback</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">getAsyncHttpClient</span><span class="o">().</span><span class="na">addHeader</span><span class="o">(</span><span class="s">&quot;X-EBAY-API-CALL-NAME&quot;</span><span class="o">,</span> <span class="s">&quot;FindPopularItems&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">requestObject</span><span class="o">,</span> <span class="n">serviceCallback</span><span class="o">,</span> <span class="n">FindPopularItemsResponseType</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     public method</span>
</span><span class='line'><span class="cm">    */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">findPopularSearches</span><span class="o">(</span><span class="n">FindPopularSearchesRequestType</span> <span class="n">requestObject</span><span class="o">,</span> <span class="n">XMLServiceCallback</span><span class="o">&lt;</span><span class="n">FindPopularSearchesResponseType</span><span class="o">&gt;</span> <span class="n">serviceCallback</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">getAsyncHttpClient</span><span class="o">().</span><span class="na">addHeader</span><span class="o">(</span><span class="s">&quot;X-EBAY-API-CALL-NAME&quot;</span><span class="o">,</span> <span class="s">&quot;FindPopularSearches&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">requestObject</span><span class="o">,</span> <span class="n">serviceCallback</span><span class="o">,</span> <span class="n">FindPopularSearchesResponseType</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     public method</span>
</span><span class='line'><span class="cm">    */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">findProducts</span><span class="o">(</span><span class="n">FindProductsRequestType</span> <span class="n">requestObject</span><span class="o">,</span> <span class="n">XMLServiceCallback</span><span class="o">&lt;</span><span class="n">FindProductsResponseType</span><span class="o">&gt;</span> <span class="n">serviceCallback</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">getAsyncHttpClient</span><span class="o">().</span><span class="na">addHeader</span><span class="o">(</span><span class="s">&quot;X-EBAY-API-CALL-NAME&quot;</span><span class="o">,</span> <span class="s">&quot;FindProducts&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">requestObject</span><span class="o">,</span> <span class="n">serviceCallback</span><span class="o">,</span> <span class="n">FindProductsResponseType</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     public method</span>
</span><span class='line'><span class="cm">    */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">findReviewsAndGuides</span><span class="o">(</span><span class="n">FindReviewsAndGuidesRequestType</span> <span class="n">requestObject</span><span class="o">,</span> <span class="n">XMLServiceCallback</span><span class="o">&lt;</span><span class="n">FindReviewsAndGuidesResponseType</span><span class="o">&gt;</span> <span class="n">serviceCallback</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">getAsyncHttpClient</span><span class="o">().</span><span class="na">addHeader</span><span class="o">(</span><span class="s">&quot;X-EBAY-API-CALL-NAME&quot;</span><span class="o">,</span> <span class="s">&quot;FindReviewsAndGuides&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">requestObject</span><span class="o">,</span> <span class="n">serviceCallback</span><span class="o">,</span> <span class="n">FindReviewsAndGuidesResponseType</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     public method</span>
</span><span class='line'><span class="cm">    */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">getCategoryInfo</span><span class="o">(</span><span class="n">GetCategoryInfoRequestType</span> <span class="n">requestObject</span><span class="o">,</span> <span class="n">XMLServiceCallback</span><span class="o">&lt;</span><span class="n">GetCategoryInfoResponseType</span><span class="o">&gt;</span> <span class="n">serviceCallback</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">getAsyncHttpClient</span><span class="o">().</span><span class="na">addHeader</span><span class="o">(</span><span class="s">&quot;X-EBAY-API-CALL-NAME&quot;</span><span class="o">,</span> <span class="s">&quot;GetCategoryInfo&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">requestObject</span><span class="o">,</span> <span class="n">serviceCallback</span><span class="o">,</span> <span class="n">GetCategoryInfoResponseType</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     public method</span>
</span><span class='line'><span class="cm">    */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">getItemStatus</span><span class="o">(</span><span class="n">GetItemStatusRequestType</span> <span class="n">requestObject</span><span class="o">,</span> <span class="n">XMLServiceCallback</span><span class="o">&lt;</span><span class="n">GetItemStatusResponseType</span><span class="o">&gt;</span> <span class="n">serviceCallback</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">getAsyncHttpClient</span><span class="o">().</span><span class="na">addHeader</span><span class="o">(</span><span class="s">&quot;X-EBAY-API-CALL-NAME&quot;</span><span class="o">,</span> <span class="s">&quot;GetItemStatus&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">requestObject</span><span class="o">,</span> <span class="n">serviceCallback</span><span class="o">,</span> <span class="n">GetItemStatusResponseType</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     public method</span>
</span><span class='line'><span class="cm">    */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">getMultipleItems</span><span class="o">(</span><span class="n">GetMultipleItemsRequestType</span> <span class="n">requestObject</span><span class="o">,</span> <span class="n">XMLServiceCallback</span><span class="o">&lt;</span><span class="n">GetMultipleItemsResponseType</span><span class="o">&gt;</span> <span class="n">serviceCallback</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">getAsyncHttpClient</span><span class="o">().</span><span class="na">addHeader</span><span class="o">(</span><span class="s">&quot;X-EBAY-API-CALL-NAME&quot;</span><span class="o">,</span> <span class="s">&quot;GetMultipleItems&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">requestObject</span><span class="o">,</span> <span class="n">serviceCallback</span><span class="o">,</span> <span class="n">GetMultipleItemsResponseType</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     public method</span>
</span><span class='line'><span class="cm">    */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">getShippingCosts</span><span class="o">(</span><span class="n">GetShippingCostsRequestType</span> <span class="n">requestObject</span><span class="o">,</span> <span class="n">XMLServiceCallback</span><span class="o">&lt;</span><span class="n">GetShippingCostsResponseType</span><span class="o">&gt;</span> <span class="n">serviceCallback</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">getAsyncHttpClient</span><span class="o">().</span><span class="na">addHeader</span><span class="o">(</span><span class="s">&quot;X-EBAY-API-CALL-NAME&quot;</span><span class="o">,</span> <span class="s">&quot;GetShippingCosts&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">requestObject</span><span class="o">,</span> <span class="n">serviceCallback</span><span class="o">,</span> <span class="n">GetShippingCostsResponseType</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     public method</span>
</span><span class='line'><span class="cm">    */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">getSingleItem</span><span class="o">(</span><span class="n">GetSingleItemRequestType</span> <span class="n">requestObject</span><span class="o">,</span> <span class="n">XMLServiceCallback</span><span class="o">&lt;</span><span class="n">GetSingleItemResponseType</span><span class="o">&gt;</span> <span class="n">serviceCallback</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">getAsyncHttpClient</span><span class="o">().</span><span class="na">addHeader</span><span class="o">(</span><span class="s">&quot;X-EBAY-API-CALL-NAME&quot;</span><span class="o">,</span> <span class="s">&quot;GetSingleItem&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">requestObject</span><span class="o">,</span> <span class="n">serviceCallback</span><span class="o">,</span> <span class="n">GetSingleItemResponseType</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     public method</span>
</span><span class='line'><span class="cm">    */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">getUserProfile</span><span class="o">(</span><span class="n">GetUserProfileRequestType</span> <span class="n">requestObject</span><span class="o">,</span> <span class="n">XMLServiceCallback</span><span class="o">&lt;</span><span class="n">GetUserProfileResponseType</span><span class="o">&gt;</span> <span class="n">serviceCallback</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">getAsyncHttpClient</span><span class="o">().</span><span class="na">addHeader</span><span class="o">(</span><span class="s">&quot;X-EBAY-API-CALL-NAME&quot;</span><span class="o">,</span> <span class="s">&quot;GetUserProfile&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">requestObject</span><span class="o">,</span> <span class="n">serviceCallback</span><span class="o">,</span> <span class="n">GetUserProfileResponseType</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     public method</span>
</span><span class='line'><span class="cm">    */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">geteBayTime</span><span class="o">(</span><span class="n">GeteBayTimeRequestType</span> <span class="n">requestObject</span><span class="o">,</span> <span class="n">XMLServiceCallback</span><span class="o">&lt;</span><span class="n">GeteBayTimeResponseType</span><span class="o">&gt;</span> <span class="n">serviceCallback</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">getAsyncHttpClient</span><span class="o">().</span><span class="na">addHeader</span><span class="o">(</span><span class="s">&quot;X-EBAY-API-CALL-NAME&quot;</span><span class="o">,</span> <span class="s">&quot;GeteBayTime&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">requestObject</span><span class="o">,</span> <span class="n">serviceCallback</span><span class="o">,</span> <span class="n">GeteBayTimeResponseType</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>All the methods in the interface follow same calling paradigm - you call the service with required request object and a callback object implementing interface <a href="https://github.com/bulldog2011/nano/blob/master/src/main/java/com/leansoft/nano/ws/XMLServiceCallback.java">XMLServiceCallback</a>.</p>

<p>You may also compare the XML interface with the SOAP interface, they are almost similar, except that SOAP interface will give you an additional SOAPFault object in the failure callback(<a href="https://github.com/bulldog2011/nano/blob/master/src/main/java/com/leansoft/nano/ws/SOAPServiceCallback.java">in SOAPServiceCallback</a>), this is obvious, since XML based service has no concept of SOAPFault, usually, the response error is returned as response resident error(RRE) in the XML response message.</p>

<h2>Step 3 - Implement Appliction Logic and UI, Call Proxy to Invoke Web Service as Needed.</h2>

<p>First, create a shared service client as below:</p>

<figure class='code'><figcaption><span>ShoppingServiceClient.java </span><a href='https://github.com/bulldog2011/nano/blob/master/sample/webservice/HelloeBayShopping/src/com/ebay/service/shopping/ShoppingServiceClient.java'>source </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">ebay</span><span class="o">.</span><span class="na">service</span><span class="o">.</span><span class="na">shopping</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">ebay.apis.eblbasecomponents.client.ShoppingInterface_XMLClient</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ShoppingServiceClient</span> <span class="o">{</span>
</span><span class='line'>  
</span><span class='line'>  <span class="c1">// production</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="n">String</span> <span class="n">eBayShoppingServiceURLString</span> <span class="o">=</span> <span class="s">&quot;http://open.api.ebay.com/shopping?&quot;</span><span class="o">;</span>
</span><span class='line'>  <span class="c1">// sandbox</span>
</span><span class='line'>  <span class="c1">//public static final String eBayShoppingServiceURLString = &quot;http://open.api.sandbox.ebay.com/shopping&quot;;</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="n">String</span> <span class="n">eBayAppId</span> <span class="o">=</span> <span class="s">&quot;YOUR APPID HERE&quot;</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="n">String</span> <span class="n">targetAPIVersion</span> <span class="o">=</span> <span class="s">&quot;809&quot;</span><span class="o">;</span>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm"> for site id list, see http://developer.ebay.com/DevZone/shopping/docs/CallRef/types/SiteCodeType.html</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="n">String</span> <span class="n">targetSiteid</span> <span class="o">=</span> <span class="s">&quot;0&quot;</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">private</span> <span class="kd">static</span> <span class="kd">volatile</span> <span class="n">ShoppingInterface_XMLClient</span> <span class="n">client</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="n">ShoppingInterface_XMLClient</span> <span class="nf">getSharedClient</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">client</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="kd">synchronized</span><span class="o">(</span><span class="n">ShoppingServiceClient</span><span class="o">.</span><span class="na">class</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="k">if</span> <span class="o">(</span><span class="n">client</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                  <span class="n">client</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ShoppingInterface_XMLClient</span><span class="o">();</span>
</span><span class='line'>                  <span class="n">client</span><span class="o">.</span><span class="na">setEndpointUrl</span><span class="o">(</span><span class="n">eBayShoppingServiceURLString</span><span class="o">);</span>
</span><span class='line'>                  <span class="n">client</span><span class="o">.</span><span class="na">getAsyncHttpClient</span><span class="o">().</span><span class="na">addHeader</span><span class="o">(</span><span class="s">&quot;X-EBAY-API-APP-ID&quot;</span><span class="o">,</span> <span class="n">eBayAppId</span><span class="o">);</span>
</span><span class='line'>                  <span class="n">client</span><span class="o">.</span><span class="na">getAsyncHttpClient</span><span class="o">().</span><span class="na">addHeader</span><span class="o">(</span><span class="s">&quot;X-EBAY-API-REQUEST-ENCODING&quot;</span><span class="o">,</span> <span class="s">&quot;XML&quot;</span><span class="o">);</span>
</span><span class='line'>                  <span class="n">client</span><span class="o">.</span><span class="na">getAsyncHttpClient</span><span class="o">().</span><span class="na">addHeader</span><span class="o">(</span><span class="s">&quot;X-EBAY-API-VERSION&quot;</span><span class="o">,</span> <span class="n">targetAPIVersion</span><span class="o">);</span>
</span><span class='line'>                  <span class="n">client</span><span class="o">.</span><span class="na">getAsyncHttpClient</span><span class="o">().</span><span class="na">addHeader</span><span class="o">(</span><span class="s">&quot;X-EBAY-API-SITE-ID&quot;</span><span class="o">,</span> <span class="n">targetSiteid</span><span class="o">);</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      
</span><span class='line'>      <span class="k">return</span> <span class="n">client</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Like eBay Finding service, the eBay Shopping service needs a few HTTP headers set to work, let me give more comments:</p>

<blockquote><ol>
<li>eBay Shopping service needs to set a few HTTP headers to work, for a list of required headers, please refer to doc <a href="http://developer.ebay.com/DevZone/shopping/docs/Concepts/ShoppingAPI_FormatOverview.html">here</a>.</li>
<li>One mandatory header for eBay Shopping service is <code>eBayAppId</code>, you need to register on eBay developer site as an eBay developer then get this id, before your can run this demo, you must fill in your own eBayAppId in the shared client.</li>
<li>Another mandatory header for eBay Shopping service is <code>targetAPIVersion</code>, aka the API version you want to use, usually, you use the latest one, at the time of this writing, the latest version is <code>809</code>, you may update this according to your real needs.</li>
<li>We also set <code>X-EBAY-API-REQUEST-ENCODING</code> to <code>XML</code>, indicating we want to call XML service supported by eBay Shopping service.</li>
</ol>
</blockquote>

<p>Now the UI part and application logic, for this hello world like sample, we just need a <code>EditText</code> for keyword input and <code>Button</code> to trigger eBay search by invoking listening method <code>onClick</code> which will indirectly call eBay Shopping service through the proxy, fairly simple, see the full application logic in <code>MainActivity</code> class below:</p>

<figure class='code'><figcaption><span>MainActivity.java </span><a href='https://github.com/bulldog2011/nano/blob/master/sample/webservice/HelloeBayShopping/src/com/leansoft/nano/sample/MainActivity.java'>source  </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">leansoft</span><span class="o">.</span><span class="na">nano</span><span class="o">.</span><span class="na">sample</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.service.shopping.ShoppingServiceClient</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.leansoft.nano.ws.XMLServiceCallback</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">ebay.apis.eblbasecomponents.AckCodeType</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">ebay.apis.eblbasecomponents.ErrorType</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">ebay.apis.eblbasecomponents.FindPopularItemsRequestType</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">ebay.apis.eblbasecomponents.FindPopularItemsResponseType</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">ebay.apis.eblbasecomponents.SimpleItemType</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">ebay.apis.eblbasecomponents.client.ShoppingInterface_XMLClient</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.os.Bundle</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.app.Activity</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.view.View</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.view.View.OnClickListener</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.Button</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.EditText</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.Toast</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MainActivity</span> <span class="kd">extends</span> <span class="n">Activity</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>
</span><span class='line'>      <span class="n">setContentView</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">activity_main</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">Button</span> <span class="n">searchButton</span> <span class="o">=</span> <span class="o">(</span><span class="n">Button</span><span class="o">)</span> <span class="k">this</span><span class="o">.</span><span class="na">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">search_button</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">searchButton</span><span class="o">.</span><span class="na">setOnClickListener</span><span class="o">(</span><span class="k">new</span> <span class="n">OnClickListener</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>          <span class="nd">@Override</span>
</span><span class='line'>          <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">View</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="c1">// Get shared client</span>
</span><span class='line'>              <span class="n">ShoppingInterface_XMLClient</span> <span class="n">client</span> <span class="o">=</span> <span class="n">ShoppingServiceClient</span><span class="o">.</span><span class="na">getSharedClient</span><span class="o">();</span>
</span><span class='line'>              <span class="n">client</span><span class="o">.</span><span class="na">setDebug</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span> <span class="c1">// enable xml message logging</span>
</span><span class='line'>          
</span><span class='line'>              <span class="c1">// Build request object</span>
</span><span class='line'>              <span class="n">FindPopularItemsRequestType</span> <span class="n">request</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FindPopularItemsRequestType</span><span class="o">();</span>
</span><span class='line'>              <span class="n">String</span> <span class="n">keywords</span> <span class="o">=</span> <span class="o">((</span><span class="n">EditText</span><span class="o">)</span><span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">keyword_input</span><span class="o">)).</span><span class="na">getText</span><span class="o">().</span><span class="na">toString</span><span class="o">();</span>
</span><span class='line'>              <span class="n">request</span><span class="o">.</span><span class="na">queryKeywords</span> <span class="o">=</span> <span class="n">keywords</span><span class="o">;</span>
</span><span class='line'>              <span class="c1">// only need one item for demo</span>
</span><span class='line'>              <span class="n">request</span><span class="o">.</span><span class="na">maxEntries</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
</span><span class='line'>              
</span><span class='line'>                <span class="c1">// make API call with registered callbacks</span>
</span><span class='line'>              <span class="n">client</span><span class="o">.</span><span class="na">findPopularItems</span><span class="o">(</span><span class="n">request</span><span class="o">,</span> <span class="k">new</span> <span class="n">XMLServiceCallback</span><span class="o">&lt;</span><span class="n">FindPopularItemsResponseType</span><span class="o">&gt;()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>                  <span class="nd">@Override</span>
</span><span class='line'>                  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onSuccess</span><span class="o">(</span>
</span><span class='line'>                          <span class="n">FindPopularItemsResponseType</span> <span class="n">responseObject</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>                      <span class="k">if</span> <span class="o">(</span><span class="n">AckCodeType</span><span class="o">.</span><span class="na">SUCCESS</span> <span class="o">==</span> <span class="n">responseObject</span><span class="o">.</span><span class="na">ack</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                          <span class="k">if</span> <span class="o">(</span><span class="n">responseObject</span><span class="o">.</span><span class="na">itemArray</span><span class="o">.</span><span class="na">item</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                              <span class="c1">// show the title of first found item</span>
</span><span class='line'>                              <span class="n">SimpleItemType</span> <span class="n">item</span> <span class="o">=</span> <span class="n">responseObject</span><span class="o">.</span><span class="na">itemArray</span><span class="o">.</span><span class="na">item</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>                              <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">,</span> <span class="n">item</span><span class="o">.</span><span class="na">title</span><span class="o">,</span> <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>                          <span class="o">}</span> <span class="k">else</span> <span class="o">{</span> <span class="c1">// no result</span>
</span><span class='line'>                              <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">,</span> <span class="s">&quot;No result&quot;</span><span class="o">,</span> <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>                          <span class="o">}</span>
</span><span class='line'>                      <span class="o">}</span> <span class="k">else</span> <span class="o">{</span> <span class="c1">// response resident error</span>
</span><span class='line'>                          <span class="n">ErrorType</span> <span class="n">error</span> <span class="o">=</span> <span class="n">responseObject</span><span class="o">.</span><span class="na">errors</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>                          <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">,</span> <span class="n">error</span><span class="o">.</span><span class="na">shortMessage</span><span class="o">,</span> <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>                      <span class="o">}</span>
</span><span class='line'>                  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>                  <span class="nd">@Override</span>
</span><span class='line'>                  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onFailure</span><span class="o">(</span><span class="n">Throwable</span> <span class="n">error</span><span class="o">,</span> <span class="n">String</span> <span class="n">errorMessage</span><span class="o">)</span> <span class="o">{</span> <span class="c1">// http or parsing error</span>
</span><span class='line'>                      <span class="k">if</span> <span class="o">(</span><span class="n">errorMessage</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                          <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">,</span> <span class="n">errorMessage</span><span class="o">,</span> <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>                      <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>                          <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">,</span> <span class="n">error</span><span class="o">.</span><span class="na">getMessage</span><span class="o">(),</span> <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>                      <span class="o">}</span>
</span><span class='line'>                  <span class="o">}</span>
</span><span class='line'>                  
</span><span class='line'>              <span class="o">});</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>          
</span><span class='line'>      <span class="o">});</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>More comments to the serivce call code:</p>

<blockquote><ol>
<li>I&#8217;ve added comments in the code so the whole service call flow should be easy to understand.</li>
<li>We used the eBay Shopping <code>findPopularItems</code> call, which takes a keyword as input, and will return a list of matched popular items on eBay, for demo, we just need one item to display, so we set <code>maxEntries</code> to 1.</li>
<li>In the success handling logic, we show the title of the returned item..</li>
<li>eBay Shopping service supports response resident error(RRE), so even we get a success response, we still need to check the response for resident error and handle it accordingly.</li>
</ol>
</blockquote>

<h2>Final Step - Run the Demo</h2>

<p>Let&#8217;s run the demo on simulator, see a screen shot below:</p>

<p><img class="center" src="http://bulldog2011.github.com/images/nano/tutorial04/screen_shot1.png" width="400" height="600"></p>

<p>and the debug output:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>04-18 02:29:54.646: D/NanoXMLClient(279): Sending request to : http://open.api.ebay.com/shopping?
</span><span class='line'>04-18 02:29:54.646: D/NanoXMLClient(279): Request HTTP headers : 
</span><span class='line'>04-18 02:29:54.646: D/NanoXMLClient(279): {
</span><span class='line'>04-18 02:29:54.646: D/NanoXMLClient(279):     X-EBAY-API-APP-ID="********"
</span><span class='line'>04-18 02:29:54.646: D/NanoXMLClient(279):     X-EBAY-API-SITE-ID="0"
</span><span class='line'>04-18 02:29:54.646: D/NanoXMLClient(279):     X-EBAY-API-CALL-NAME="FindPopularItems"
</span><span class='line'>04-18 02:29:54.646: D/NanoXMLClient(279):     X-EBAY-API-REQUEST-ENCODING="XML"
</span><span class='line'>04-18 02:29:54.646: D/NanoXMLClient(279):     Accept="text/xml"
</span><span class='line'>04-18 02:29:54.646: D/NanoXMLClient(279):     X-EBAY-API-VERSION="809"
</span><span class='line'>04-18 02:29:54.646: D/NanoXMLClient(279): }
</span><span class='line'>04-18 02:29:54.646: D/NanoXMLClient(279): Request message : 
</span><span class='line'>04-18 02:29:54.646: D/NanoXMLClient(279): &lt;?xml version='1.0' encoding='UTF-8' ?>
</span><span class='line'>04-18 02:29:54.646: D/NanoXMLClient(279): &lt;FindPopularItemsRequest xmlns="urn:ebay:apis:eBLBaseComponents">
</span><span class='line'>04-18 02:29:54.646: D/NanoXMLClient(279):   &lt;QueryKeywords>android&lt;/QueryKeywords>
</span><span class='line'>04-18 02:29:54.646: D/NanoXMLClient(279):   &lt;MaxEntries>1&lt;/MaxEntries>
</span><span class='line'>04-18 02:29:54.646: D/NanoXMLClient(279): &lt;/FindPopularItemsRequest>
</span><span class='line'>04-18 02:29:55.926: D/dalvikvm(279): GC_FOR_MALLOC freed 6860 objects / 348416 bytes in 50ms
</span><span class='line'>04-18 02:29:55.936: D/XMLHttpResponseHandler(279): Response HTTP status : 200
</span><span class='line'>04-18 02:29:55.936: D/XMLHttpResponseHandler(279): Response HTTP headers : 
</span><span class='line'>04-18 02:29:55.936: D/XMLHttpResponseHandler(279): {
</span><span class='line'>04-18 02:29:55.936: D/XMLHttpResponseHandler(279):     X-EBAY-ESB-GUID="urn:uuid:3CD859772BC3C3F65827459259312600922-1430899813"
</span><span class='line'>04-18 02:29:55.936: D/XMLHttpResponseHandler(279):     Expires="Sat, 25 Dec 1999 00:00:00 GMT"
</span><span class='line'>04-18 02:29:55.936: D/XMLHttpResponseHandler(279):     Last-Modified="Thu, 18 Apr 2013 02:30:21 GMT"
</span><span class='line'>04-18 02:29:55.936: D/XMLHttpResponseHandler(279):     Connection="Keep-Alive"
</span><span class='line'>04-18 02:29:55.936: D/XMLHttpResponseHandler(279):     Server="Apache-Coyote/1.1"
</span><span class='line'>04-18 02:29:55.936: D/XMLHttpResponseHandler(279):     Pragma="no-cache"
</span><span class='line'>04-18 02:29:55.936: D/XMLHttpResponseHandler(279):     Cache-Control="no-cache"
</span><span class='line'>04-18 02:29:55.936: D/XMLHttpResponseHandler(279):     X-EBAY-API-BUILD-TAG="E819_CORE_APILW2_15990919_R1"
</span><span class='line'>04-18 02:29:55.936: D/XMLHttpResponseHandler(279):     Transfer-Encoding="chunked"
</span><span class='line'>04-18 02:29:55.936: D/XMLHttpResponseHandler(279):     Date="Thu, 18 Apr 2013 02:30:21 GMT"
</span><span class='line'>04-18 02:29:55.936: D/XMLHttpResponseHandler(279):     X-EBAY-API-POOL-NAME="___cDRidW9rdDdlaHFg"
</span><span class='line'>04-18 02:29:55.936: D/XMLHttpResponseHandler(279):     X-EBAY-API-SERVER-NAME="___dm97MmQ3MWYrYWU1PigyNSg/NSs3NTUrNDMyPz43OzU="
</span><span class='line'>04-18 02:29:55.936: D/XMLHttpResponseHandler(279):     Content-Encoding="gzip"
</span><span class='line'>04-18 02:29:55.936: D/XMLHttpResponseHandler(279):     Content-Type="text/xml;charset=utf-8"
</span><span class='line'>04-18 02:29:55.936: D/XMLHttpResponseHandler(279): }
</span><span class='line'>04-18 02:29:55.936: D/XMLHttpResponseHandler(279): Response message : 
</span><span class='line'>04-18 02:29:55.936: D/XMLHttpResponseHandler(279): &lt;?xml version="1.0" encoding="UTF-8"?>
</span><span class='line'>04-18 02:29:55.936: D/XMLHttpResponseHandler(279):   &lt;FindPopularItemsResponse xmlns="urn:ebay:apis:eBLBaseComponents">
</span><span class='line'>04-18 02:29:55.936: D/XMLHttpResponseHandler(279):    &lt;Timestamp>2013-04-18T02:30:21.938Z&lt;/Timestamp>
</span><span class='line'>04-18 02:29:55.936: D/XMLHttpResponseHandler(279):    &lt;Ack>Success&lt;/Ack>
</span><span class='line'>04-18 02:29:55.936: D/XMLHttpResponseHandler(279):    &lt;Build>E819_CORE_APILW2_15990919_R1&lt;/Build>
</span><span class='line'>04-18 02:29:55.936: D/XMLHttpResponseHandler(279):    &lt;Version>819&lt;/Version>
</span><span class='line'>04-18 02:29:55.936: D/XMLHttpResponseHandler(279):    &lt;ItemArray>
</span><span class='line'>04-18 02:29:55.936: D/XMLHttpResponseHandler(279):     &lt;Item>
</span><span class='line'>04-18 02:29:55.936: D/XMLHttpResponseHandler(279):      &lt;ItemID>170848931666&lt;/ItemID>
</span><span class='line'>04-18 02:29:55.936: D/XMLHttpResponseHandler(279):      &lt;EndTime>2013-04-20T17:07:32.000Z&lt;/EndTime>
</span><span class='line'>04-18 02:29:55.936: D/XMLHttpResponseHandler(279):      &lt;ViewItemURLForNaturalSearch>http://www.ebay.com/itm/HTC-Droid-Incredible-Verizon-Wireless-Wifi-8-0-MP-Camera-8GB-Android-Cell-Phone-/170848931666&lt;/ViewItemURLForNaturalSearch>
</span><span class='line'>04-18 02:29:55.936: D/XMLHttpResponseHandler(279):      &lt;ListingType>FixedPriceItem&lt;/ListingType>
</span><span class='line'>04-18 02:29:55.936: D/XMLHttpResponseHandler(279):      &lt;GalleryURL>http://thumbs3.ebaystatic.com/pict/1708489316668080_52.jpg&lt;/GalleryURL>
</span><span class='line'>04-18 02:29:55.936: D/XMLHttpResponseHandler(279):      &lt;PrimaryCategoryID>9355&lt;/PrimaryCategoryID>
</span><span class='line'>04-18 02:29:55.936: D/XMLHttpResponseHandler(279):      &lt;PrimaryCategoryName>Cell Phones &amp; Accessories:Cell Phones &amp; Smartphones&lt;/PrimaryCategoryName>
</span><span class='line'>04-18 02:29:55.936: D/XMLHttpResponseHandler(279):      &lt;BidCount>18835&lt;/BidCount>
</span><span class='line'>04-18 02:29:55.936: D/XMLHttpResponseHandler(279):      &lt;ConvertedCurrentPrice currencyID="USD">64.95&lt;/ConvertedCurrentPrice>
</span><span class='line'>04-18 02:29:55.936: D/XMLHttpResponseHandler(279):      &lt;ListingStatus>Active&lt;/ListingStatus>
</span><span class='line'>04-18 02:29:55.936: D/XMLHttpResponseHandler(279):      &lt;TimeLeft>P2DT14H37M11S&lt;/TimeLeft>
</span><span class='line'>04-18 02:29:55.936: D/XMLHttpResponseHandler(279):      &lt;Title>HTC Droid Incredible Verizon Wireless Wifi 8.0 MP Camera 8GB Android Cell Phone&lt;/Title>
</span><span class='line'>04-18 02:29:55.936: D/XMLHttpResponseHandler(279):      &lt;ShippingCostSummary>
</span><span class='line'>04-18 02:29:55.936: D/XMLHttpResponseHandler(279):       &lt;ShippingServiceCost currencyID="USD">0.0&lt;/ShippingServiceCost>
</span><span class='line'>04-18 02:29:55.936: D/XMLHttpResponseHandler(279):       &lt;ShippingType>Flat&lt;/ShippingType>
</span><span class='line'>04-18 02:29:55.936: D/XMLHttpResponseHandler(279):       &lt;ListedShippingServiceCost currencyID="USD">0.0&lt;/ListedShippingServiceCost>
</span><span class='line'>04-18 02:29:55.936: D/XMLHttpResponseHandler(279):      &lt;/ShippingCostSummary>
</span><span class='line'>04-18 02:29:55.936: D/XMLHttpResponseHandler(279):      &lt;WatchCount>10901&lt;/WatchCount>
</span><span class='line'>04-18 02:29:55.936: D/XMLHttpResponseHandler(279):      &lt;DiscountPriceInfo>
</span><span class='line'>04-18 02:29:55.936: D/XMLHttpResponseHandler(279):       &lt;OriginalRetailPrice currencyID="USD">500.0&lt;/OriginalRetailPrice>
</span><span class='line'>04-18 02:29:55.936: D/XMLHttpResponseHandler(279):       &lt;PricingTreatment>STP&lt;/PricingTreatment>
</span><span class='line'>04-18 02:29:55.936: D/XMLHttpResponseHandler(279):       &lt;SoldOneBay>false&lt;/SoldOneBay>
</span><span class='line'>04-18 02:29:55.936: D/XMLHttpResponseHandler(279):       &lt;SoldOffeBay>false&lt;/SoldOffeBay>
</span><span class='line'>04-18 02:29:55.936: D/XMLHttpResponseHandler(279):      &lt;/DiscountPriceInfo>
</span><span class='line'>04-18 02:29:55.936: D/XMLHttpResponseHandler(279):     &lt;/Item>
</span><span class='line'>04-18 02:29:55.936: D/XMLHttpResponseHandler(279):    &lt;/ItemArray>
</span><span class='line'>04-18 02:29:55.936: D/XMLHttpResponseHandler(279):   &lt;/FindPopularItemsResponse></span></code></pre></td></tr></table></div></figure>


<p>let&#8217;s also try a soap fault case, for example, if you forget to fill in your <code>eBayAppId</code> in the shared client, then you will get:
<img class="center" src="http://bulldog2011.github.com/images/nano/tutorial04/screen_shot2.png" width="400" height="600"></p>

<p>This is just a bare minimum eBay Shopping service based application, for a demo with more functions, please see the <a href="https://github.com/bulldog2011/nano/tree/master/sample/webservice/eBayDemoApp">eBayDemoApp</a> sample in the <code>sample\webservice</code> folder of Nano source, eBayDemoApp is a composite app which calls two eBay services behind, this app searches eBay by calling eBay Finding service, shows a list of matched items on UI, when an item is clicked, it will show item details by calling eBay Shopping service, see a screen shot below.</p>

<p><img class="center" src="http://bulldog2011.github.com/images/nano/tutorial04/screen_shot3.png" width="400" height="600"></p>

<p>Now it&#8217;s your turn to create Android applications based on eBay Shopping and eBay Finding web services, see your next great service based app.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nano Tutorial 3 - Hello eBay Finding]]></title>
    <link href="http://bulldog2011.github.com/blog/2013/04/17/nano-tutorial-3-hello-ebay-finding/"/>
    <updated>2013-04-17T21:27:00+08:00</updated>
    <id>http://bulldog2011.github.com/blog/2013/04/17/nano-tutorial-3-hello-ebay-finding</id>
    <content type="html"><![CDATA[<p>This is the third tutorial of Nano Tutorial Series, in <a href="http://bulldog2011.github.io/blog/2013/04/15/nano-tutorial-1-a-number-conversion-sample/">first</a> and <a href="http://bulldog2011.github.io/blog/2013/04/17/nano-tutorial-2-a-barcode-sample/">second</a> tutorials, I showed you how to use Nano with simple services, these services only support one or two calls, the request/response structures are fairly simple, supporting these simple services only can&#8217;t show the full power of Nano, so in this and later tutorials, I will show you how to use Nano with industrial grade services, let&#8217;s start with <a href="http://developer.ebay.com/DevZone/finding/CallRef/index.html">eBay Finding service</a>, please review its official site if you are not familiar with this service, basically, it lets you search items on eBay. eBay Finding service supports SOAP 1.2, so I will also show you how to configure Nano to support SOAP 1.2 protocol, also I will show how to set service required HTTP headers on Nano client.</p>

<p>The source of this tutorial is <a href="https://github.com/bulldog2011/nano/tree/master/sample/webservice/HelloeBayFinding">here</a>.</p>

<!--more-->


<h2>Step 0 - Prerequisite</h2>

<p>I suppose you have already read Nano tutorial 1 and 2, and basically you should know:</p>

<blockquote><ul>
<li>The wsdl driven development process supported by Nano.</li>
<li>How to add the Nano library and the generated service proxy into your Android project.</li>
</ul>
</blockquote>

<h2>Step 1 - Generate Java Proxy from WSDL</h2>

<p>Download <a href="https://github.com/bulldog2011/mwsc">mwsc</a> and run following command in terminal to generate the proxy:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bin\mwsc.bat -nano -ebaysoa -d generated -p com.ebay.api.finding http://developer.ebay.com/webservices/Finding/latest/FindingService.wsdl</span></code></pre></td></tr></table></div></figure>


<p>Depends on the network speed, you may need to wait a few moments to let the code generator download the wsdl and generate code, you may also download the wsdl and run the code generator with a local wsdl.</p>

<p>A few comments about the code generation:</p>

<blockquote><ul>
<li>I have added a special <code>-ebaysoa</code> codegen option, this is because eBay Finding service needs a per-call operation name HTTP header, I added this special flag in the code generator to let it generate the header for me, since I don&#8217;t want to add this header everytime I call an eBay Finding service, so this is just a special flag for eBay SOA services and for demo, or a hidden feature, not a generic codegen option.</li>
<li>By default, the code generator will derive package name from the target namespace in wsdl, you can use <code>-p</code> option to override this, for example, <code>-p com.ebay.api.finding</code>.</li>
</ul>
</blockquote>

<h2>Step 2 - Create New Android Project, Add Nano Library and Generated Proxy into Your Project</h2>

<p>Create a simple Android project called <code>HelloeBayFinding</code> in eclipse(or other IDE you prefer), then:</p>

<blockquote><ol>
<li>Download <a href="https://github.com/bulldog2011/bulldog-repo/blob/master/repo/releases/com/leansoft/nano/0.7.0/nano-0.7.0.jar">latest nano library jar</a> and add it to the <code>libs</code> folder of your Android project.</li>
<li>Drag the above generated proxy into the <code>src</code> folder of your Android project.</li>
<li>Add following user permissions in the <code>AndroidManifest.xml</code> file to enable network access.</li>
</ol>
</blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;uses-permission</span> <span class="na">android:name=</span><span class="s">&quot;android.permission.INTERNET&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;uses-permission</span> <span class="na">android:name=</span><span class="s">&quot;android.permission.ACCESS_NETWORK_STATE&quot;</span> <span class="nt">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now build the project to ensure it can build successfully.</p>

<p>You may now review the eBay Finding service SOAP interface generated from wsdl, to learn what kinds of functions are provided by eBay Finding service, and what kinds of parameters are needed to call the service, the interface is posted below:</p>

<figure class='code'><figcaption><span>FindingServicePortType_SOAPClient.java </span><a href='https://github.com/bulldog2011/nano/blob/master/sample/webservice/HelloeBayFinding/src/com/ebay/marketplace/search/v1/services/client/FindingServicePortType_SOAPClient.java'>source </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// Generated by wsdl compiler for android/java</span>
</span><span class='line'><span class="c1">// DO NOT CHANGE!</span>
</span><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">ebay</span><span class="o">.</span><span class="na">api</span><span class="o">.</span><span class="na">finding</span><span class="o">.</span><span class="na">client</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.leansoft.nano.ws.SOAPServiceCallback</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.leansoft.nano.ws.NanoSOAPClient</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.FindItemsForFavoriteSearchResponse</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.FindItemsByCategoryResponse</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.FindItemsByProductResponse</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.FindItemsByImageRequest</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.GetSearchKeywordsRecommendationRequest</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.FindItemsByCategoryRequest</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.FindCompletedItemsResponse</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.FindItemsAdvancedResponse</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.FindItemsIneBayStoresResponse</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.FindItemsForFavoriteSearchRequest</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.FindItemsByKeywordsRequest</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.FindItemsByProductRequest</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.FindItemsIneBayStoresRequest</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.FindItemsAdvancedRequest</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.FindItemsByImageResponse</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.GetVersionResponse</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.GetHistogramsResponse</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.GetVersionRequest</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.GetSearchKeywordsRecommendationResponse</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.FindItemsByKeywordsResponse</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.GetHistogramsRequest</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.FindCompletedItemsRequest</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> This class is the SOAP client to the FindingServicePortType Web Service.</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">FindingServicePortType_SOAPClient</span> <span class="kd">extends</span> <span class="n">NanoSOAPClient</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     public method</span>
</span><span class='line'><span class="cm">    */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">getSearchKeywordsRecommendation</span><span class="o">(</span><span class="n">GetSearchKeywordsRecommendationRequest</span> <span class="n">requestObject</span><span class="o">,</span> <span class="n">SOAPServiceCallback</span><span class="o">&lt;</span><span class="n">GetSearchKeywordsRecommendationResponse</span><span class="o">&gt;</span> <span class="n">serviceCallback</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">getAsyncHttpClient</span><span class="o">().</span><span class="na">addHeader</span><span class="o">(</span><span class="s">&quot;X-EBAY-SOA-OPERATION-NAME&quot;</span><span class="o">,</span> <span class="s">&quot;getSearchKeywordsRecommendation&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">requestObject</span><span class="o">,</span> <span class="n">serviceCallback</span><span class="o">,</span> <span class="n">GetSearchKeywordsRecommendationResponse</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     public method</span>
</span><span class='line'><span class="cm">    */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">findItemsByKeywords</span><span class="o">(</span><span class="n">FindItemsByKeywordsRequest</span> <span class="n">requestObject</span><span class="o">,</span> <span class="n">SOAPServiceCallback</span><span class="o">&lt;</span><span class="n">FindItemsByKeywordsResponse</span><span class="o">&gt;</span> <span class="n">serviceCallback</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">getAsyncHttpClient</span><span class="o">().</span><span class="na">addHeader</span><span class="o">(</span><span class="s">&quot;X-EBAY-SOA-OPERATION-NAME&quot;</span><span class="o">,</span> <span class="s">&quot;findItemsByKeywords&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">requestObject</span><span class="o">,</span> <span class="n">serviceCallback</span><span class="o">,</span> <span class="n">FindItemsByKeywordsResponse</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     public method</span>
</span><span class='line'><span class="cm">    */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">findItemsByCategory</span><span class="o">(</span><span class="n">FindItemsByCategoryRequest</span> <span class="n">requestObject</span><span class="o">,</span> <span class="n">SOAPServiceCallback</span><span class="o">&lt;</span><span class="n">FindItemsByCategoryResponse</span><span class="o">&gt;</span> <span class="n">serviceCallback</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">getAsyncHttpClient</span><span class="o">().</span><span class="na">addHeader</span><span class="o">(</span><span class="s">&quot;X-EBAY-SOA-OPERATION-NAME&quot;</span><span class="o">,</span> <span class="s">&quot;findItemsByCategory&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">requestObject</span><span class="o">,</span> <span class="n">serviceCallback</span><span class="o">,</span> <span class="n">FindItemsByCategoryResponse</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     public method</span>
</span><span class='line'><span class="cm">    */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">findItemsAdvanced</span><span class="o">(</span><span class="n">FindItemsAdvancedRequest</span> <span class="n">requestObject</span><span class="o">,</span> <span class="n">SOAPServiceCallback</span><span class="o">&lt;</span><span class="n">FindItemsAdvancedResponse</span><span class="o">&gt;</span> <span class="n">serviceCallback</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">getAsyncHttpClient</span><span class="o">().</span><span class="na">addHeader</span><span class="o">(</span><span class="s">&quot;X-EBAY-SOA-OPERATION-NAME&quot;</span><span class="o">,</span> <span class="s">&quot;findItemsAdvanced&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">requestObject</span><span class="o">,</span> <span class="n">serviceCallback</span><span class="o">,</span> <span class="n">FindItemsAdvancedResponse</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     public method</span>
</span><span class='line'><span class="cm">    */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">findItemsByProduct</span><span class="o">(</span><span class="n">FindItemsByProductRequest</span> <span class="n">requestObject</span><span class="o">,</span> <span class="n">SOAPServiceCallback</span><span class="o">&lt;</span><span class="n">FindItemsByProductResponse</span><span class="o">&gt;</span> <span class="n">serviceCallback</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">getAsyncHttpClient</span><span class="o">().</span><span class="na">addHeader</span><span class="o">(</span><span class="s">&quot;X-EBAY-SOA-OPERATION-NAME&quot;</span><span class="o">,</span> <span class="s">&quot;findItemsByProduct&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">requestObject</span><span class="o">,</span> <span class="n">serviceCallback</span><span class="o">,</span> <span class="n">FindItemsByProductResponse</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     public method</span>
</span><span class='line'><span class="cm">    */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">findItemsIneBayStores</span><span class="o">(</span><span class="n">FindItemsIneBayStoresRequest</span> <span class="n">requestObject</span><span class="o">,</span> <span class="n">SOAPServiceCallback</span><span class="o">&lt;</span><span class="n">FindItemsIneBayStoresResponse</span><span class="o">&gt;</span> <span class="n">serviceCallback</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">getAsyncHttpClient</span><span class="o">().</span><span class="na">addHeader</span><span class="o">(</span><span class="s">&quot;X-EBAY-SOA-OPERATION-NAME&quot;</span><span class="o">,</span> <span class="s">&quot;findItemsIneBayStores&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">requestObject</span><span class="o">,</span> <span class="n">serviceCallback</span><span class="o">,</span> <span class="n">FindItemsIneBayStoresResponse</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     public method</span>
</span><span class='line'><span class="cm">    */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">findItemsByImage</span><span class="o">(</span><span class="n">FindItemsByImageRequest</span> <span class="n">requestObject</span><span class="o">,</span> <span class="n">SOAPServiceCallback</span><span class="o">&lt;</span><span class="n">FindItemsByImageResponse</span><span class="o">&gt;</span> <span class="n">serviceCallback</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">getAsyncHttpClient</span><span class="o">().</span><span class="na">addHeader</span><span class="o">(</span><span class="s">&quot;X-EBAY-SOA-OPERATION-NAME&quot;</span><span class="o">,</span> <span class="s">&quot;findItemsByImage&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">requestObject</span><span class="o">,</span> <span class="n">serviceCallback</span><span class="o">,</span> <span class="n">FindItemsByImageResponse</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     public method</span>
</span><span class='line'><span class="cm">    */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">getHistograms</span><span class="o">(</span><span class="n">GetHistogramsRequest</span> <span class="n">requestObject</span><span class="o">,</span> <span class="n">SOAPServiceCallback</span><span class="o">&lt;</span><span class="n">GetHistogramsResponse</span><span class="o">&gt;</span> <span class="n">serviceCallback</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">getAsyncHttpClient</span><span class="o">().</span><span class="na">addHeader</span><span class="o">(</span><span class="s">&quot;X-EBAY-SOA-OPERATION-NAME&quot;</span><span class="o">,</span> <span class="s">&quot;getHistograms&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">requestObject</span><span class="o">,</span> <span class="n">serviceCallback</span><span class="o">,</span> <span class="n">GetHistogramsResponse</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     public method</span>
</span><span class='line'><span class="cm">    */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">findCompletedItems</span><span class="o">(</span><span class="n">FindCompletedItemsRequest</span> <span class="n">requestObject</span><span class="o">,</span> <span class="n">SOAPServiceCallback</span><span class="o">&lt;</span><span class="n">FindCompletedItemsResponse</span><span class="o">&gt;</span> <span class="n">serviceCallback</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">getAsyncHttpClient</span><span class="o">().</span><span class="na">addHeader</span><span class="o">(</span><span class="s">&quot;X-EBAY-SOA-OPERATION-NAME&quot;</span><span class="o">,</span> <span class="s">&quot;findCompletedItems&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">requestObject</span><span class="o">,</span> <span class="n">serviceCallback</span><span class="o">,</span> <span class="n">FindCompletedItemsResponse</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     public method</span>
</span><span class='line'><span class="cm">    */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">getVersion</span><span class="o">(</span><span class="n">GetVersionRequest</span> <span class="n">requestObject</span><span class="o">,</span> <span class="n">SOAPServiceCallback</span><span class="o">&lt;</span><span class="n">GetVersionResponse</span><span class="o">&gt;</span> <span class="n">serviceCallback</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">getAsyncHttpClient</span><span class="o">().</span><span class="na">addHeader</span><span class="o">(</span><span class="s">&quot;X-EBAY-SOA-OPERATION-NAME&quot;</span><span class="o">,</span> <span class="s">&quot;getVersion&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">requestObject</span><span class="o">,</span> <span class="n">serviceCallback</span><span class="o">,</span> <span class="n">GetVersionResponse</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     public method</span>
</span><span class='line'><span class="cm">    */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">findItemsForFavoriteSearch</span><span class="o">(</span><span class="n">FindItemsForFavoriteSearchRequest</span> <span class="n">requestObject</span><span class="o">,</span> <span class="n">SOAPServiceCallback</span><span class="o">&lt;</span><span class="n">FindItemsForFavoriteSearchResponse</span><span class="o">&gt;</span> <span class="n">serviceCallback</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">getAsyncHttpClient</span><span class="o">().</span><span class="na">addHeader</span><span class="o">(</span><span class="s">&quot;X-EBAY-SOA-OPERATION-NAME&quot;</span><span class="o">,</span> <span class="s">&quot;findItemsForFavoriteSearch&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">requestObject</span><span class="o">,</span> <span class="n">serviceCallback</span><span class="o">,</span> <span class="n">FindItemsForFavoriteSearchResponse</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>All the methods in the interface follow same calling paradigm - you call the service with required request object and a callback object implementing interface <a href="https://github.com/bulldog2011/nano/blob/master/src/main/java/com/leansoft/nano/ws/SOAPServiceCallback.java">SOAPServiceCallback</a>.</p>

<h2>Step 3 - Implement Appliction Logic and UI, Call Proxy to Invoke Web Service as Needed.</h2>

<p>First, create a shared service client as below:</p>

<figure class='code'><figcaption><span>FindingServiceClient.java </span><a href='https://github.com/bulldog2011/nano/blob/master/sample/webservice/HelloeBayFinding/src/com/ebay/service/finding/FindingServiceClient.java'>source </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">ebay</span><span class="o">.</span><span class="na">service</span><span class="o">.</span><span class="na">finding</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.client.FindingServicePortType_SOAPClient</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.leansoft.nano.ws.SOAPVersion</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">FindingServiceClient</span> <span class="o">{</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="n">String</span> <span class="n">eBayFindingServiceURLString</span> <span class="o">=</span> <span class="s">&quot;http://svcs.ebay.com/services/search/FindingService/v1&quot;</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="n">String</span> <span class="n">eBayAppId</span> <span class="o">=</span> <span class="s">&quot;YOUR APPID HERE&quot;</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">private</span> <span class="kd">static</span> <span class="kd">volatile</span> <span class="n">FindingServicePortType_SOAPClient</span> <span class="n">client</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="n">FindingServicePortType_SOAPClient</span> <span class="nf">getSharedClient</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">client</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="kd">synchronized</span><span class="o">(</span><span class="n">FindingServiceClient</span><span class="o">.</span><span class="na">class</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="k">if</span> <span class="o">(</span><span class="n">client</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                  <span class="n">client</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FindingServicePortType_SOAPClient</span><span class="o">();</span>
</span><span class='line'>                  <span class="n">client</span><span class="o">.</span><span class="na">setEndpointUrl</span><span class="o">(</span><span class="n">eBayFindingServiceURLString</span><span class="o">);</span>
</span><span class='line'>                  <span class="n">client</span><span class="o">.</span><span class="na">setSoapVersion</span><span class="o">(</span><span class="n">SOAPVersion</span><span class="o">.</span><span class="na">SOAP12</span><span class="o">);</span> <span class="c1">// ebay finding service supports SOAP 1.2</span>
</span><span class='line'>                  <span class="n">client</span><span class="o">.</span><span class="na">setContentType</span><span class="o">(</span><span class="s">&quot;application/soap+xml&quot;</span><span class="o">);</span>
</span><span class='line'>                  <span class="n">client</span><span class="o">.</span><span class="na">getAsyncHttpClient</span><span class="o">().</span><span class="na">addHeader</span><span class="o">(</span><span class="s">&quot;Accept&quot;</span><span class="o">,</span> <span class="s">&quot;application/soap+xml&quot;</span><span class="o">);</span>
</span><span class='line'>                  <span class="n">client</span><span class="o">.</span><span class="na">getAsyncHttpClient</span><span class="o">().</span><span class="na">addHeader</span><span class="o">(</span><span class="s">&quot;X-EBAY-SOA-SECURITY-APPNAME&quot;</span><span class="o">,</span> <span class="n">eBayAppId</span><span class="o">);</span>
</span><span class='line'>                  <span class="n">client</span><span class="o">.</span><span class="na">getAsyncHttpClient</span><span class="o">().</span><span class="na">addHeader</span><span class="o">(</span><span class="s">&quot;X-EBAY-SOA-MESSAGE-PROTOCOL&quot;</span><span class="o">,</span> <span class="s">&quot;SOAP12&quot;</span><span class="o">);</span>
</span><span class='line'>                  <span class="n">client</span><span class="o">.</span><span class="na">getAsyncHttpClient</span><span class="o">().</span><span class="na">addHeader</span><span class="o">(</span><span class="s">&quot;X-EBAY-SOA-REQUEST-DATA-FORMAT&quot;</span><span class="o">,</span> <span class="s">&quot;SOAP&quot;</span><span class="o">);</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      
</span><span class='line'>      <span class="k">return</span> <span class="n">client</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>The shared client for eBay Finding service is a little more complex than the simple serivce client in tutorial 1 and 2, this is because that eBay Finding service needs a few HTTP headers set to work, let me give more comments:</p>

<blockquote><ol>
<li>eBay Finding service support SOAP12, so we set the client to use <code>SOAP12</code> protocol, this is not necessary since eBay Finding service also supports SOAP11(which is Nano default), we use SOAP12 here just for demo and to show the capability of Nano.</li>
<li>eBay Finding service needs to set a few HTTP headers to work, for a list of required headers, please refer to doc <a href="http://developer.ebay.com/DevZone/finding/Concepts/MakingACall.html">here</a>.</li>
<li>One mandatory header for eBay Finding service is <code>eBayAppId</code>, you need to register on eBay developer site as an eBay developer then get this id, before your can run this demo, you must fill in your own eBayAppId in the shared client.</li>
</ol>
</blockquote>

<p>Now the UI part and application logic, for this hello world like sample, we just need a <code>EditText</code> for keyword input and <code>Button</code> to trigger eBay search by invoking listening method <code>onClick</code> which will indirectly call eBay Finding service through the proxy, fairly simple, see the full application logic in <code>MainActivity</code> class below:</p>

<figure class='code'><figcaption><span>MainActivity.java </span><a href='https://github.com/bulldog2011/nano/blob/master/sample/webservice/HelloeBayFinding/src/com/leansoft/nano/sample/MainActivity.java'>source  </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">leansoft</span><span class="o">.</span><span class="na">nano</span><span class="o">.</span><span class="na">sample</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.AckValue</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.ErrorData</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.FindItemsByKeywordsRequest</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.FindItemsByKeywordsResponse</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.PaginationInput</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.SearchItem</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.api.finding.client.FindingServicePortType_SOAPClient</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.service.finding.FindingServiceClient</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.leansoft.nano.soap12.Reasontext</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.leansoft.nano.ws.SOAPServiceCallback</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.os.Bundle</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.app.Activity</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.view.View</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.view.View.OnClickListener</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.Button</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.EditText</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.Toast</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MainActivity</span> <span class="kd">extends</span> <span class="n">Activity</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>
</span><span class='line'>      <span class="n">setContentView</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">activity_main</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">Button</span> <span class="n">searchButton</span> <span class="o">=</span> <span class="o">(</span><span class="n">Button</span><span class="o">)</span> <span class="k">this</span><span class="o">.</span><span class="na">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">search_button</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">searchButton</span><span class="o">.</span><span class="na">setOnClickListener</span><span class="o">(</span><span class="k">new</span> <span class="n">OnClickListener</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>          <span class="nd">@Override</span>
</span><span class='line'>          <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">View</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="c1">// Get shared client</span>
</span><span class='line'>              <span class="n">FindingServicePortType_SOAPClient</span> <span class="n">client</span> <span class="o">=</span> <span class="n">FindingServiceClient</span><span class="o">.</span><span class="na">getSharedClient</span><span class="o">();</span>
</span><span class='line'>              <span class="n">client</span><span class="o">.</span><span class="na">setDebug</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span> <span class="c1">// enable soap message logging</span>
</span><span class='line'>              
</span><span class='line'>              <span class="c1">// Build request</span>
</span><span class='line'>              <span class="n">FindItemsByKeywordsRequest</span> <span class="n">request</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FindItemsByKeywordsRequest</span><span class="o">();</span>
</span><span class='line'>              <span class="n">String</span> <span class="n">keywords</span> <span class="o">=</span> <span class="o">((</span><span class="n">EditText</span><span class="o">)</span><span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">keyword_input</span><span class="o">)).</span><span class="na">getText</span><span class="o">().</span><span class="na">toString</span><span class="o">();</span>
</span><span class='line'>              <span class="n">request</span><span class="o">.</span><span class="na">keywords</span> <span class="o">=</span> <span class="n">keywords</span><span class="o">;</span>
</span><span class='line'>              <span class="n">PaginationInput</span> <span class="n">pi</span> <span class="o">=</span> <span class="k">new</span> <span class="n">PaginationInput</span><span class="o">();</span>
</span><span class='line'>              <span class="n">pi</span><span class="o">.</span><span class="na">pageNumber</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
</span><span class='line'>              <span class="n">pi</span><span class="o">.</span><span class="na">entriesPerPage</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
</span><span class='line'>              <span class="n">request</span><span class="o">.</span><span class="na">paginationInput</span> <span class="o">=</span> <span class="n">pi</span><span class="o">;</span>
</span><span class='line'>              
</span><span class='line'>              <span class="c1">// Make API call and register callbacks</span>
</span><span class='line'>              <span class="n">client</span><span class="o">.</span><span class="na">findItemsByKeywords</span><span class="o">(</span><span class="n">request</span><span class="o">,</span> <span class="k">new</span> <span class="n">SOAPServiceCallback</span><span class="o">&lt;</span><span class="n">FindItemsByKeywordsResponse</span><span class="o">&gt;()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>                  <span class="nd">@Override</span>
</span><span class='line'>                  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onSuccess</span><span class="o">(</span>
</span><span class='line'>                          <span class="n">FindItemsByKeywordsResponse</span> <span class="n">responseObject</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                      
</span><span class='line'>                      <span class="k">if</span> <span class="o">(</span><span class="n">AckValue</span><span class="o">.</span><span class="na">SUCCESS</span> <span class="o">==</span> <span class="n">responseObject</span><span class="o">.</span><span class="na">ack</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                          <span class="k">if</span> <span class="o">(</span><span class="n">responseObject</span><span class="o">.</span><span class="na">searchResult</span> <span class="o">!=</span> <span class="kc">null</span> <span class="o">&amp;&amp;</span> <span class="n">responseObject</span><span class="o">.</span><span class="na">searchResult</span><span class="o">.</span><span class="na">count</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                              <span class="c1">// show the title of the first found item</span>
</span><span class='line'>                              <span class="n">SearchItem</span> <span class="n">item</span> <span class="o">=</span> <span class="n">responseObject</span><span class="o">.</span><span class="na">searchResult</span><span class="o">.</span><span class="na">item</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>                              <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">,</span> <span class="n">item</span><span class="o">.</span><span class="na">title</span><span class="o">,</span> <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>                          <span class="o">}</span> <span class="k">else</span> <span class="o">{</span> <span class="c1">// no result</span>
</span><span class='line'>                              <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">,</span> <span class="s">&quot;No result&quot;</span><span class="o">,</span> <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>                          <span class="o">}</span>
</span><span class='line'>                      <span class="o">}</span> <span class="k">else</span> <span class="o">{</span> <span class="c1">// response resident error</span>
</span><span class='line'>                          <span class="n">ErrorData</span> <span class="n">errorData</span> <span class="o">=</span> <span class="n">responseObject</span><span class="o">.</span><span class="na">errorMessage</span><span class="o">.</span><span class="na">error</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>                          <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">,</span> <span class="n">errorData</span><span class="o">.</span><span class="na">message</span><span class="o">,</span> <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>                      <span class="o">}</span>
</span><span class='line'>                  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>                  <span class="nd">@Override</span>
</span><span class='line'>                  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onFailure</span><span class="o">(</span><span class="n">Throwable</span> <span class="n">error</span><span class="o">,</span> <span class="n">String</span> <span class="n">errorMessage</span><span class="o">)</span> <span class="o">{</span> <span class="c1">// http or parsing error</span>
</span><span class='line'>                      <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">,</span> <span class="n">errorMessage</span><span class="o">,</span> <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>                  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>                  <span class="nd">@Override</span>
</span><span class='line'>                  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onSOAPFault</span><span class="o">(</span><span class="n">Object</span> <span class="n">soapFault</span><span class="o">)</span> <span class="o">{</span> <span class="c1">// soap fault</span>
</span><span class='line'>                      <span class="n">com</span><span class="o">.</span><span class="na">leansoft</span><span class="o">.</span><span class="na">nano</span><span class="o">.</span><span class="na">soap12</span><span class="o">.</span><span class="na">Fault</span> <span class="n">fault</span> <span class="o">=</span> <span class="o">(</span><span class="n">com</span><span class="o">.</span><span class="na">leansoft</span><span class="o">.</span><span class="na">nano</span><span class="o">.</span><span class="na">soap12</span><span class="o">.</span><span class="na">Fault</span><span class="o">)</span><span class="n">soapFault</span><span class="o">;</span>
</span><span class='line'>                      <span class="n">Reasontext</span> <span class="n">reasonText</span> <span class="o">=</span> <span class="n">fault</span><span class="o">.</span><span class="na">reason</span><span class="o">.</span><span class="na">text</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>                      <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">,</span> <span class="n">reasonText</span><span class="o">.</span><span class="na">value</span><span class="o">,</span> <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>                  <span class="o">}</span>
</span><span class='line'>                  
</span><span class='line'>              <span class="o">});</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>          
</span><span class='line'>      <span class="o">});</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>More comments to the serivce call code:</p>

<blockquote><ol>
<li>I&#8217;ve added comments in the code so the whole service call flow should be easy to understand.</li>
<li>We used the eBay Finding <code>findItemsByKeywords</code> call, which takes a keyword as input, and will return a list of matched items, for demo, we just need one item to display, so we set entries per page to 1.</li>
<li>In the success handling logic, we show the title of the returned item using Android <code>Toast</code> component.</li>
<li>Since we set the client to use SOAP12 protocol, in the soap fault error handling logic, we need to cast the soapFault variable to type <code>SOAP12Fault</code> and handle it accordingly.</li>
<li>eBay Finding service supports response resident error(RRE), so even we get a success response, we still need to check the response for resident error and handle it accordingly.</li>
</ol>
</blockquote>

<h2>Final Step - Run the Demo</h2>

<p>Let&#8217;s run the demo on simulator, see a screen shot below:</p>

<p><img class="center" src="http://bulldog2011.github.com/images/nano/tutorial03/screen_shot1.png" width="400" height="600"></p>

<p>and the debug output:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>04-17 14:17:49.157: D/NanoSOAPClient(317): Sending request to : http://svcs.ebay.com/services/search/FindingService/v1
</span><span class='line'>04-17 14:17:49.157: D/NanoSOAPClient(317): Request HTTP headers : 
</span><span class='line'>04-17 14:17:49.157: D/NanoSOAPClient(317): {
</span><span class='line'>04-17 14:17:49.157: D/NanoSOAPClient(317):     X-EBAY-SOA-OPERATION-NAME="findItemsByKeywords"
</span><span class='line'>04-17 14:17:49.157: D/NanoSOAPClient(317):     X-EBAY-SOA-SECURITY-APPNAME="*******"
</span><span class='line'>04-17 14:17:49.157: D/NanoSOAPClient(317):     Accept="application/soap+xml"
</span><span class='line'>04-17 14:17:49.157: D/NanoSOAPClient(317):     X-EBAY-SOA-MESSAGE-PROTOCOL="SOAP12"
</span><span class='line'>04-17 14:17:49.157: D/NanoSOAPClient(317):     X-EBAY-SOA-REQUEST-DATA-FORMAT="SOAP"
</span><span class='line'>04-17 14:17:49.157: D/NanoSOAPClient(317): }
</span><span class='line'>04-17 14:17:49.157: D/NanoSOAPClient(317): Request message : 
</span><span class='line'>04-17 14:17:49.157: D/NanoSOAPClient(317): &lt;?xml version='1.0' encoding='UTF-8' ?>
</span><span class='line'>04-17 14:17:49.157: D/NanoSOAPClient(317): &lt;soapenv:Envelope xmlns:soapenv="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.ebay.com/marketplace/search/v1/services">
</span><span class='line'>04-17 14:17:49.157: D/NanoSOAPClient(317):   &lt;soapenv:Body>
</span><span class='line'>04-17 14:17:49.157: D/NanoSOAPClient(317):     &lt;findItemsByKeywordsRequest>
</span><span class='line'>04-17 14:17:49.157: D/NanoSOAPClient(317):       &lt;paginationInput>
</span><span class='line'>04-17 14:17:49.157: D/NanoSOAPClient(317):         &lt;pageNumber>1&lt;/pageNumber>
</span><span class='line'>04-17 14:17:49.157: D/NanoSOAPClient(317):         &lt;entriesPerPage>1&lt;/entriesPerPage>
</span><span class='line'>04-17 14:17:49.157: D/NanoSOAPClient(317):       &lt;/paginationInput>
</span><span class='line'>04-17 14:17:49.157: D/NanoSOAPClient(317):       &lt;keywords>nexus 2&lt;/keywords>
</span><span class='line'>04-17 14:17:49.157: D/NanoSOAPClient(317):     &lt;/findItemsByKeywordsRequest>
</span><span class='line'>04-17 14:17:49.157: D/NanoSOAPClient(317):   &lt;/soapenv:Body>
</span><span class='line'>04-17 14:17:49.157: D/NanoSOAPClient(317): &lt;/soapenv:Envelope>
</span><span class='line'>04-17 14:17:50.509: D/SOAPHttpResponseHandler(317): Response HTTP status : 200
</span><span class='line'>04-17 14:17:50.517: D/SOAPHttpResponseHandler(317): Response HTTP headers : 
</span><span class='line'>04-17 14:17:50.517: D/SOAPHttpResponseHandler(317): {
</span><span class='line'>04-17 14:17:50.517: D/SOAPHttpResponseHandler(317):     X-EBAY-ESB-GUID="urn:uuid:CC62052BA7B85308BC1367424536385"
</span><span class='line'>04-17 14:17:50.517: D/SOAPHttpResponseHandler(317):     X-EBAY-SOA-SERVICE-NAME="{http://www.ebay.com/marketplace/search/v1/services}FindingService"
</span><span class='line'>04-17 14:17:50.517: D/SOAPHttpResponseHandler(317):     Connection="Keep-Alive"
</span><span class='line'>04-17 14:17:50.517: D/SOAPHttpResponseHandler(317):     X-EBAY-SOA-MESSAGE-PROTOCOL="SOAP12"
</span><span class='line'>04-17 14:17:50.517: D/SOAPHttpResponseHandler(317):     Server="Apache-Coyote/1.1"
</span><span class='line'>04-17 14:17:50.517: D/SOAPHttpResponseHandler(317):     X-EBAY-SOA-REQUEST-ID="13e185c3-12d0-a0a9-ee72-82e2fff134e0!FindingService!10.10.158.231!v3apifindingcore[!FindItemServiceNextGen!10.10.158.231!v3apifindingcore[!MetadataDependencyService!10.86.122.101!v3mddscore[]]]"
</span><span class='line'>04-17 14:17:50.517: D/SOAPHttpResponseHandler(317):     X-EBAY-SOA-OPERATION-NAME="findItemsByKeywords"
</span><span class='line'>04-17 14:17:50.517: D/SOAPHttpResponseHandler(317):     X-EBAY-SOA-SERVICE-VERSION="1.12.0"
</span><span class='line'>04-17 14:17:50.517: D/SOAPHttpResponseHandler(317):     Transfer-Encoding="chunked"
</span><span class='line'>04-17 14:17:50.517: D/SOAPHttpResponseHandler(317):     Date="Wed, 17 Apr 2013 14:18:15 GMT"
</span><span class='line'>04-17 14:17:50.517: D/SOAPHttpResponseHandler(317):     X-EBAY-SOA-RESPONSE-DATA-FORMAT="XML"
</span><span class='line'>04-17 14:17:50.517: D/SOAPHttpResponseHandler(317):     X-EBAY-ESB-ENDPOINTURL="/Root/ESBFunctions/Services/Ports/7003/profile/search/v1/FindingService/destination_default/address_synapse"
</span><span class='line'>04-17 14:17:50.517: D/SOAPHttpResponseHandler(317):     Content-Encoding="gzip"
</span><span class='line'>04-17 14:17:50.517: D/SOAPHttpResponseHandler(317):     X-EBAY-SOA-SERVICE-METRICS="203269893"
</span><span class='line'>04-17 14:17:50.517: D/SOAPHttpResponseHandler(317):     X-EBAY-SOA-LOCALE-LIST="en-US_US"
</span><span class='line'>04-17 14:17:50.517: D/SOAPHttpResponseHandler(317):     Content-Type="application/soap+xml;charset=UTF-8"
</span><span class='line'>04-17 14:17:50.517: D/SOAPHttpResponseHandler(317): }
</span><span class='line'>04-17 14:17:50.517: D/SOAPHttpResponseHandler(317): Response message : 
</span><span class='line'>04-17 14:17:50.517: D/SOAPHttpResponseHandler(317): &lt;?xml version='1.0' encoding='utf-8'?>&lt;soapenv:Envelope xmlns:soapenv="http://www.w3.org/2003/05/soap-envelope">&lt;soapenv:Header/>&lt;soapenv:Body>&lt;findItemsByKeywordsResponse xmlns="http://www.ebay.com/marketplace/search/v1/services">&lt;ack>Success&lt;/ack>&lt;version>1.12.0&lt;/version>&lt;timestamp>2013-04-17T14:18:15.791Z&lt;/timestamp>&lt;searchResult count="1">&lt;item>&lt;itemId>300853070145&lt;/itemId>&lt;title>2x Home Wall Chargers for Samsung Galaxy s 2 Epic Touch , 9100 , Nexus 4G&lt;/title>&lt;globalId>EBAY-US&lt;/globalId>&lt;primaryCategory>&lt;categoryId>123417&lt;/categoryId>&lt;categoryName>Chargers &amp; Cradles&lt;/categoryName>&lt;/primaryCategory>&lt;galleryURL>http://thumbs2.ebaystatic.com/m/mDzv8Uawtt-rUUIqsXn7WAQ/140.jpg&lt;/galleryURL>&lt;viewItemURL>http://www.ebay.com/itm/2x-Home-Wall-Chargers-Samsung-Galaxy-s-2-Epic-Touch-9100-Nexus-4G-/300853070145?pt=US_Cell_Phone_PDA_Chargers&lt;/viewItemURL>&lt;paymentMethod>PayPal&lt;/paymentMethod>&lt;autoPay>false&lt;/autoPay>&lt;postalCode>60654&lt;/postalCode>&lt;location>Chicago,IL,USA&lt;/location>&lt;country>US&lt;/country>&lt;shippingInfo>&lt;shippingServiceCost currencyId="USD">0.0&lt;/shippingServiceCost>&lt;shippingType>Free&lt;/shippingType>&lt;shipToLocations>US&lt;/shipToLocations>&lt;expeditedShipping>true&lt;/expeditedShipping>&lt;oneDayShippingAvailable>true&lt;/oneDayShippingAvailable>&lt;handlingTime>1&lt;/handlingTime>&lt;/shippingInfo>&lt;sellingStatus>&lt;currentPrice currencyId="USD">4.95&lt;/currentPrice>&lt;convertedCurrentPrice currencyId="USD">4.95&lt;/convertedCurrentPrice>&lt;sellingState>Active&lt;/sellingState>&lt;timeLeft>P10DT1H40M39S&lt;/timeLeft>&lt;/sellingStatus>&lt;listingInfo>&lt;bestOfferEnabled>false&lt;/bestOfferEnabled>&lt;buyItNowAvailable>false&lt;/buyItNowAvailable>&lt;startTime>2013-01-27T15:53:54.000Z&lt;/startTime>&lt;endTime>2013-04-27T15:58:54.000Z&lt;/endTime>&lt;listingType>StoreInventory&lt;/listingType>&lt;gift>false&lt;/gift>&lt;/listingInfo>&lt;returnsAccepted>true&lt;/returnsAccepted>&lt;condition>&lt;conditionId>1000&lt;/conditionId>&lt;conditionDisplayName>New&lt;/conditionDisplayName>&lt;/condition>&lt;isMultiVariationListing>false&lt;/isMultiVariationListing>&lt;topRatedListing>true&lt;/topRatedListing>&lt;/item>&lt;/searchResult>&lt;paginationOutput>&lt;pageNumber>1&lt;/pageNumber>&lt;entriesPerPage>1&lt;/entriesPerPage>&lt;totalPages>10679&lt;/totalPages>&lt;totalEntries>10679&lt;/totalEntries>&lt;/paginationOutput>&lt;itemSearchURL>http://www.ebay.com/sch/i.html?_nkw=nexus+2&amp;_ddo=1&amp;_ipg=1&amp;_pgn=1&lt;/itemSearchURL>&lt;/findItemsByKeywordsResponse>&lt;/soapenv:Body>&lt;/soapenv:Envelope></span></code></pre></td></tr></table></div></figure>


<p>let&#8217;s also try a soap fault case, for example, if you forget to fill in your <code>eBayAppId</code> in the shared client, then you will get:
<img class="center" src="http://bulldog2011.github.com/images/nano/tutorial03/screen_shot2.png" width="400" height="600"></p>

<p>This is just a bare minimum eBay Finding service based application, for a demo with more functions, please see the eBayDemoApp sample in the <code>sample\webservice</code> folder of Nano source, eBayDemoApp is a composite app which calls two eBay serivces behind, this app searches eBay by calling eBay Fining service, showes a list of matched items on UI, when an item is clicked, it will show item details by calling eBay Shopping service, see a screen shot below.</p>

<p><img class="center" src="http://bulldog2011.github.com/images/nano/tutorial03/screen_shot3.png" width="400" height="600"></p>

<p>Now it&#8217;s your turn to create Android applications based on eBay Finding web service, see your next great service based app.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nano Tutorial 2 - a BarCode Generator sample]]></title>
    <link href="http://bulldog2011.github.com/blog/2013/04/17/nano-tutorial-2-a-barcode-sample/"/>
    <updated>2013-04-17T10:31:00+08:00</updated>
    <id>http://bulldog2011.github.com/blog/2013/04/17/nano-tutorial-2-a-barcode-sample</id>
    <content type="html"><![CDATA[<p>This is the second tutorial of Nano Tutorial series, in the <a href="http://bulldog2011.github.io/blog/2013/04/15/nano-tutorial-1-a-number-conversion-sample/">first tutorial</a>, I showed how to use Nano with a service called <a href="http://www.dataaccess.com/webservicesserver/numberconversion.wso">Number Conversion</a> from data access worldwide. Number conversion is a simple service, its request/response structures are quite simple. Today I will show you how to use Pico with a more complex service called <a href="http://www.webservicex.net/ws/WSDetails.aspx?CATID=8&amp;WSID=76">Barcode Generator</a> from webserviceX.NET, barcode generator service has a more complex request/response structures, it will return encoded binary image data in the response.</p>

<!--more-->


<p>By the way, since the wsdl driven development process in both tutorials are quite similar, I won&#8217;t repeat too much details in this tutorial, I suppose you have already read tutorial one and basically understand the wsdl driven development process supported by Nano.</p>

<p>The whole source of this tutorial is <a href="https://github.com/bulldog2011/nano/tree/master/sample/webservice/BarCode">here</a>.</p>

<p>Let&#8217;s cut to the point:</p>

<h2>Step 1 - Generate Java Proxy from WSDL</h2>

<p>Download <a href="https://github.com/bulldog2011/mwsc">mwsc</a> and run following command in terminal to generate the proxy:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bin\mwsc.bat -nano -d generated http://www.webservicex.net/genericbarcode.asmx?WSDL</span></code></pre></td></tr></table></div></figure>


<p>A few comments to the code generation:</p>

<blockquote><ul>
<li>During the code generation, you will get a few warnings say some ports in the wsdl will be ignored, just ignore these warnings, We won&#8217;t use those ports in this tutorial, it&#8217;s ok as long as the standard SOAP port is generated correctly.</li>
<li>By default, the proxy code will be generated in the sub-folder corresponding to the target namespace of the wsdl, you can use <code>-p</code> option to override the package name if needed.</li>
<li>There is a generated sub-folder called <code>client</code>, the SOAP and XML proxy interface will be generated in this folder.</li>
</ul>
</blockquote>

<h2>Step 2 - Create New Android Project, Add Nano Library and Generated Proxy into Your Project</h2>

<p>Create a simple Android project in eclipse(or other IDE you prefer), then:</p>

<blockquote><ol>
<li>Download <a href="https://github.com/bulldog2011/bulldog-repo/blob/master/repo/releases/com/leansoft/nano/0.7.0/nano-0.7.0.jar">latest nano library jar</a> and add it to the <code>libs</code> folder of your Android project.</li>
<li>Drag the above generated proxy into the <code>src</code> folder of your Android project.</li>
<li>Add following user permissions in the <code>AndroidManifest.xml</code> file to enable network access.</li>
</ol>
</blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;uses-permission</span> <span class="na">android:name=</span><span class="s">&quot;android.permission.INTERNET&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;uses-permission</span> <span class="na">android:name=</span><span class="s">&quot;android.permission.ACCESS_NETWORK_STATE&quot;</span> <span class="nt">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now build the project to ensure it can build successfully.</p>

<p>Below is an eclipse package explorer screenshot after finishing this step:</p>

<p><img class="center" src="http://bulldog2011.github.com/images/nano/tutorial02/screen_shot1.png" width="400" height="600"></p>

<h2>Step 3 - Implement Appliction Logic and UI, Call Proxy to Invoke Web Service as Needed.</h2>

<p>First, create a shared service client as below:</p>

<figure class='code'><figcaption><span>BarCodeServiceClient.java </span><a href='https://github.com/bulldog2011/nano/blob/master/sample/webservice/BarCode/src/net/webservicex/service/BarCodeServiceClient.java'>source </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">net</span><span class="o">.</span><span class="na">webservicex</span><span class="o">.</span><span class="na">service</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">net.webservicex.client.BarCodeSoap_SOAPClient</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * http://www.webservicex.net/genericbarcode.asmx</span>
</span><span class='line'><span class="cm"> * </span>
</span><span class='line'><span class="cm"> * @author bulldog</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">BarCodeServiceClient</span> <span class="o">{</span>
</span><span class='line'>  
</span><span class='line'>  <span class="c1">// target endpoint</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="n">String</span> <span class="n">barCodeServiceUrl</span> <span class="o">=</span> <span class="s">&quot;http://www.webservicex.net/genericbarcode.asmx&quot;</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">private</span> <span class="kd">static</span> <span class="kd">volatile</span> <span class="n">BarCodeSoap_SOAPClient</span> <span class="n">client</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="c1">// get a shared client</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="n">BarCodeSoap_SOAPClient</span> <span class="nf">getSharedClient</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">client</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="kd">synchronized</span><span class="o">(</span><span class="n">BarCodeServiceClient</span><span class="o">.</span><span class="na">class</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="k">if</span> <span class="o">(</span><span class="n">client</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                  <span class="n">client</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BarCodeSoap_SOAPClient</span><span class="o">();</span>
</span><span class='line'>                  <span class="n">client</span><span class="o">.</span><span class="na">setEndpointUrl</span><span class="o">(</span><span class="n">barCodeServiceUrl</span><span class="o">);</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span>    
</span><span class='line'>      <span class="k">return</span> <span class="n">client</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now open the main layout file and add three UI components:</p>

<blockquote><ul>
<li>A <code>EditText</code> for barcode number input,</li>
<li>A <code>Button</code> for encoding trigger,</li>
<li>A <code>ImageView</code> for encoded barcode display.</li>
</ul>
</blockquote>

<figure class='code'><figcaption><span>activity_main.xml </span><a href='https://github.com/bulldog2011/nano/blob/master/sample/webservice/BarCode/res/layout/activity_main.xml'>source </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;RelativeLayout</span> <span class="na">xmlns:android=</span><span class="s">&quot;http://schemas.android.com/apk/res/android&quot;</span>
</span><span class='line'>    <span class="na">xmlns:tools=</span><span class="s">&quot;http://schemas.android.com/tools&quot;</span>
</span><span class='line'>    <span class="na">android:layout_width=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>    <span class="na">android:layout_height=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>    <span class="na">tools:context=</span><span class="s">&quot;.MainActivity&quot;</span> <span class="nt">&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;EditText</span>
</span><span class='line'>        <span class="na">android:id=</span><span class="s">&quot;@+id/barCodeText&quot;</span>
</span><span class='line'>        <span class="na">android:layout_width=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>        <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>        <span class="na">android:layout_alignParentLeft=</span><span class="s">&quot;true&quot;</span>
</span><span class='line'>        <span class="na">android:layout_alignParentTop=</span><span class="s">&quot;true&quot;</span>
</span><span class='line'>        <span class="na">android:layout_marginLeft=</span><span class="s">&quot;20dp&quot;</span>
</span><span class='line'>        <span class="na">android:layout_marginTop=</span><span class="s">&quot;19dp&quot;</span>
</span><span class='line'>        <span class="na">android:ems=</span><span class="s">&quot;10&quot;</span>
</span><span class='line'>        <span class="na">android:singleLine=</span><span class="s">&quot;true&quot;</span>
</span><span class='line'>        <span class="na">android:hint=</span><span class="s">&quot;Enter Barcode&quot;</span> <span class="nt">&gt;</span>
</span><span class='line'>
</span><span class='line'>        <span class="nt">&lt;requestFocus</span> <span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/EditText&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;Button</span>
</span><span class='line'>        <span class="na">android:id=</span><span class="s">&quot;@+id/encodeButton&quot;</span>
</span><span class='line'>        <span class="na">android:layout_width=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>        <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>        <span class="na">android:layout_alignBaseline=</span><span class="s">&quot;@+id/barCodeText&quot;</span>
</span><span class='line'>        <span class="na">android:layout_alignBottom=</span><span class="s">&quot;@+id/barCodeText&quot;</span>
</span><span class='line'>        <span class="na">android:layout_toRightOf=</span><span class="s">&quot;@+id/barCodeText&quot;</span>
</span><span class='line'>        <span class="na">android:text=</span><span class="s">&quot;Encode&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;ImageView</span>
</span><span class='line'>        <span class="na">android:id=</span><span class="s">&quot;@+id/barCodeImage&quot;</span>
</span><span class='line'>        <span class="na">android:layout_width=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>        <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>        <span class="na">android:layout_below=</span><span class="s">&quot;@+id/encodeButton&quot;</span>
</span><span class='line'>        <span class="na">android:layout_centerHorizontal=</span><span class="s">&quot;true&quot;</span>
</span><span class='line'>        <span class="na">android:layout_marginTop=</span><span class="s">&quot;98dp&quot;</span>
</span><span class='line'>        <span class="na">android:src=</span><span class="s">&quot;@drawable/ic_launcher&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;/RelativeLayout&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p><img class="center" src="http://bulldog2011.github.com/images/nano/tutorial02/screen_shot2.png" width="300" height="500"></p>

<p>Now implement application logic in <code>MainActivity</code> class as below:</p>

<figure class='code'><figcaption><span>MainActivity.java </span><a href='https://github.com/bulldog2011/nano/blob/master/sample/webservice/BarCode/src/com/leansoft/nano/sample/MainActivity.java'>source  </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">leansoft</span><span class="o">.</span><span class="na">nano</span><span class="o">.</span><span class="na">sample</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.leansoft.nano.soap11.Fault</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.leansoft.nano.ws.SOAPServiceCallback</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">net.webservicex.BarCodeData</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">net.webservicex.BarcodeOption</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">net.webservicex.BarcodeType</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">net.webservicex.CheckSumMethod</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">net.webservicex.GenerateBarCode</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">net.webservicex.GenerateBarCodeResponse</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">net.webservicex.ImageFormats</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">net.webservicex.ShowTextPosition</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">net.webservicex.client.BarCodeSoap_SOAPClient</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">net.webservicex.service.BarCodeServiceClient</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.os.Bundle</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.view.View</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.view.View.OnClickListener</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.Button</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.EditText</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.ImageView</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.Toast</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.app.Activity</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.graphics.Bitmap</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.graphics.BitmapFactory</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MainActivity</span> <span class="kd">extends</span> <span class="n">Activity</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>
</span><span class='line'>      <span class="n">setContentView</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">activity_main</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">Button</span> <span class="n">encodeButton</span> <span class="o">=</span> <span class="o">(</span><span class="n">Button</span><span class="o">)</span> <span class="k">this</span><span class="o">.</span><span class="na">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">encodeButton</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">encodeButton</span><span class="o">.</span><span class="na">setOnClickListener</span><span class="o">(</span><span class="k">new</span> <span class="n">OnClickListener</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>          <span class="nd">@Override</span>
</span><span class='line'>          <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">View</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="c1">// get shared client</span>
</span><span class='line'>              <span class="n">BarCodeSoap_SOAPClient</span> <span class="n">client</span> <span class="o">=</span> <span class="n">BarCodeServiceClient</span><span class="o">.</span><span class="na">getSharedClient</span><span class="o">();</span>
</span><span class='line'>              <span class="n">client</span><span class="o">.</span><span class="na">setDebug</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span> <span class="c1">// enable soap message logging</span>
</span><span class='line'>              
</span><span class='line'>              <span class="c1">// build request</span>
</span><span class='line'>              <span class="n">BarCodeData</span> <span class="n">barCodeData</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BarCodeData</span><span class="o">();</span>
</span><span class='line'>              <span class="n">barCodeData</span><span class="o">.</span><span class="na">height</span> <span class="o">=</span> <span class="mi">125</span><span class="o">;</span>
</span><span class='line'>              <span class="n">barCodeData</span><span class="o">.</span><span class="na">width</span> <span class="o">=</span> <span class="mi">225</span><span class="o">;</span>
</span><span class='line'>              <span class="n">barCodeData</span><span class="o">.</span><span class="na">angle</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>              <span class="n">barCodeData</span><span class="o">.</span><span class="na">ratio</span> <span class="o">=</span> <span class="mi">5</span><span class="o">;</span>
</span><span class='line'>              <span class="n">barCodeData</span><span class="o">.</span><span class="na">module</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>              <span class="n">barCodeData</span><span class="o">.</span><span class="na">left</span> <span class="o">=</span> <span class="mi">25</span><span class="o">;</span>
</span><span class='line'>              <span class="n">barCodeData</span><span class="o">.</span><span class="na">top</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>              <span class="n">barCodeData</span><span class="o">.</span><span class="na">checkSum</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>              <span class="n">barCodeData</span><span class="o">.</span><span class="na">fontName</span> <span class="o">=</span> <span class="s">&quot;Arial&quot;</span><span class="o">;</span>
</span><span class='line'>              <span class="n">barCodeData</span><span class="o">.</span><span class="na">barColor</span> <span class="o">=</span> <span class="s">&quot;Black&quot;</span><span class="o">;</span>
</span><span class='line'>              <span class="n">barCodeData</span><span class="o">.</span><span class="na">bgColor</span> <span class="o">=</span> <span class="s">&quot;White&quot;</span><span class="o">;</span>
</span><span class='line'>              <span class="n">barCodeData</span><span class="o">.</span><span class="na">fontSize</span> <span class="o">=</span> <span class="mf">10.0f</span><span class="o">;</span>
</span><span class='line'>              <span class="n">barCodeData</span><span class="o">.</span><span class="na">barcodeOption</span> <span class="o">=</span> <span class="n">BarcodeOption</span><span class="o">.</span><span class="na">BOTH</span><span class="o">;</span>
</span><span class='line'>              <span class="n">barCodeData</span><span class="o">.</span><span class="na">barcodeType</span> <span class="o">=</span> <span class="n">BarcodeType</span><span class="o">.</span><span class="na">CODE_2_5_INTERLEAVED</span><span class="o">;</span>
</span><span class='line'>              <span class="n">barCodeData</span><span class="o">.</span><span class="na">checkSumMethod</span> <span class="o">=</span> <span class="n">CheckSumMethod</span><span class="o">.</span><span class="na">NONE</span><span class="o">;</span>
</span><span class='line'>              <span class="n">barCodeData</span><span class="o">.</span><span class="na">showTextPosition</span> <span class="o">=</span> <span class="n">ShowTextPosition</span><span class="o">.</span><span class="na">BOTTOM_CENTER</span><span class="o">;</span>
</span><span class='line'>              <span class="n">barCodeData</span><span class="o">.</span><span class="na">barCodeImageFormat</span> <span class="o">=</span> <span class="n">ImageFormats</span><span class="o">.</span><span class="na">PNG</span><span class="o">;</span>
</span><span class='line'>              
</span><span class='line'>              <span class="n">GenerateBarCode</span> <span class="n">request</span> <span class="o">=</span> <span class="k">new</span> <span class="n">GenerateBarCode</span><span class="o">();</span>
</span><span class='line'>              <span class="n">request</span><span class="o">.</span><span class="na">barCodeParam</span> <span class="o">=</span> <span class="n">barCodeData</span><span class="o">;</span>
</span><span class='line'>              <span class="n">request</span><span class="o">.</span><span class="na">barCodeText</span> <span class="o">=</span> <span class="o">((</span><span class="n">EditText</span><span class="o">)</span><span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">barCodeText</span><span class="o">)).</span><span class="na">getText</span><span class="o">().</span><span class="na">toString</span><span class="o">();</span>
</span><span class='line'>              
</span><span class='line'>              <span class="c1">// make API call with registered callbacks</span>
</span><span class='line'>              <span class="n">client</span><span class="o">.</span><span class="na">generateBarCode</span><span class="o">(</span><span class="n">request</span><span class="o">,</span> <span class="k">new</span> <span class="n">SOAPServiceCallback</span><span class="o">&lt;</span><span class="n">GenerateBarCodeResponse</span><span class="o">&gt;()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>                  <span class="nd">@Override</span>
</span><span class='line'>                  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onSuccess</span><span class="o">(</span><span class="n">GenerateBarCodeResponse</span> <span class="n">responseObject</span><span class="o">)</span> <span class="o">{</span> <span class="c1">// success</span>
</span><span class='line'>                      <span class="n">ImageView</span> <span class="n">barCodeImage</span> <span class="o">=</span> <span class="o">(</span><span class="n">ImageView</span><span class="o">)</span><span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">barCodeImage</span><span class="o">);</span>
</span><span class='line'>                      <span class="kt">byte</span><span class="o">[]</span> <span class="n">imageData</span> <span class="o">=</span> <span class="n">responseObject</span><span class="o">.</span><span class="na">generateBarCodeResult</span><span class="o">;</span>
</span><span class='line'>                      <span class="n">Bitmap</span> <span class="n">bitmap</span> <span class="o">=</span> <span class="n">BitmapFactory</span><span class="o">.</span><span class="na">decodeByteArray</span><span class="o">(</span><span class="n">imageData</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">imageData</span><span class="o">.</span><span class="na">length</span><span class="o">);</span>
</span><span class='line'>                      <span class="n">barCodeImage</span><span class="o">.</span><span class="na">setImageBitmap</span><span class="o">(</span><span class="n">bitmap</span><span class="o">);</span>
</span><span class='line'>                  <span class="o">}</span>
</span><span class='line'>                  
</span><span class='line'>                  <span class="nd">@Override</span>
</span><span class='line'>                  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onFailure</span><span class="o">(</span><span class="n">Throwable</span> <span class="n">error</span><span class="o">,</span> <span class="n">String</span> <span class="n">errorMessage</span><span class="o">)</span> <span class="o">{</span><span class="c1">// http or parsing error</span>
</span><span class='line'>                      <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">,</span> <span class="n">errorMessage</span><span class="o">,</span> <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>                      
</span><span class='line'>                  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>                  <span class="nd">@Override</span>
</span><span class='line'>                  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onSOAPFault</span><span class="o">(</span><span class="n">Object</span> <span class="n">soapFault</span><span class="o">)</span> <span class="o">{</span> <span class="c1">// soap fault</span>
</span><span class='line'>                      <span class="n">Fault</span> <span class="n">fault</span> <span class="o">=</span> <span class="o">(</span><span class="n">Fault</span><span class="o">)</span><span class="n">soapFault</span><span class="o">;</span>
</span><span class='line'>                      <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">,</span> <span class="n">fault</span><span class="o">.</span><span class="na">faultstring</span><span class="o">,</span> <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>                  <span class="o">}</span>
</span><span class='line'>                  
</span><span class='line'>              <span class="o">});</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>          
</span><span class='line'>      <span class="o">});</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>The service invocation logic is quite self explanatory, you get shared SOAP barcode proxy client first, then build encoding request, make API call with the request and registered callbacks, if API call is successful, you just display the barcode image on UI, otherwise, you display error message accordingly using Android <code>Toast</code> UI component.</p>

<h2>Final Step - Run the Demo</h2>

<p>See a screen shot below:</p>

<p><img class="center" src="http://bulldog2011.github.com/images/nano/tutorial02/screen_shot3.png" width="600" height="800"></p>

<p>And the debug output:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>04-17 03:35:21.116: D/NanoSOAPClient(283): Sending request to : http://www.webservicex.net/genericbarcode.asmx
</span><span class='line'>04-17 03:35:21.116: D/NanoSOAPClient(283): Request HTTP headers : 
</span><span class='line'>04-17 03:35:21.116: D/NanoSOAPClient(283): {
</span><span class='line'>04-17 03:35:21.116: D/NanoSOAPClient(283):     Accept="text/xml"
</span><span class='line'>04-17 03:35:21.116: D/NanoSOAPClient(283): }
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283): Request message : 
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283): &lt;?xml version='1.0' encoding='UTF-8' ?>
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283): &lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.webservicex.net/">
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283):   &lt;soapenv:Body>
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283):     &lt;GenerateBarCode>
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283):       &lt;BarCodeParam>
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283):         &lt;Height>125&lt;/Height>
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283):         &lt;Width>225&lt;/Width>
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283):         &lt;Angle>0&lt;/Angle>
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283):         &lt;Ratio>5&lt;/Ratio>
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283):         &lt;Module>0&lt;/Module>
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283):         &lt;Left>25&lt;/Left>
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283):         &lt;Top>0&lt;/Top>
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283):         &lt;CheckSum>false&lt;/CheckSum>
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283):         &lt;FontName>Arial&lt;/FontName>
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283):         &lt;BarColor>Black&lt;/BarColor>
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283):         &lt;BGColor>White&lt;/BGColor>
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283):         &lt;FontSize>10.0&lt;/FontSize>
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283):         &lt;barcodeOption>Both&lt;/barcodeOption>
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283):         &lt;barcodeType>Code_2_5_interleaved&lt;/barcodeType>
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283):         &lt;checkSumMethod>None&lt;/checkSumMethod>
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283):         &lt;showTextPosition>BottomCenter&lt;/showTextPosition>
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283):         &lt;BarCodeImageFormat>PNG&lt;/BarCodeImageFormat>=
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283):       &lt;/BarCodeParam>
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283):       &lt;BarCodeText>123456789&lt;/BarCodeText>
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283):     &lt;/GenerateBarCode>
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283):   &lt;/soapenv:Body>
</span><span class='line'>04-17 03:35:21.126: D/NanoSOAPClient(283): &lt;/soapenv:Envelope>
</span><span class='line'>04-17 03:35:21.176: D/dalvikvm(283): GC_FOR_MALLOC freed 12599 objects / 580360 bytes in 35ms
</span><span class='line'>04-17 03:35:22.838: D/SOAPHttpResponseHandler(283): Response HTTP status : 200
</span><span class='line'>04-17 03:35:22.838: D/SOAPHttpResponseHandler(283): Response HTTP headers : 
</span><span class='line'>04-17 03:35:22.846: D/SOAPHttpResponseHandler(283): {
</span><span class='line'>04-17 03:35:22.846: D/SOAPHttpResponseHandler(283):     X-AspNet-Version="4.0.30319"
</span><span class='line'>04-17 03:35:22.846: D/SOAPHttpResponseHandler(283):     Date="Wed, 17 Apr 2013 03:35:56 GMT"
</span><span class='line'>04-17 03:35:22.846: D/SOAPHttpResponseHandler(283):     Vary="Accept-Encoding"
</span><span class='line'>04-17 03:35:22.846: D/SOAPHttpResponseHandler(283):     Content-Length="1951"
</span><span class='line'>04-17 03:35:22.846: D/SOAPHttpResponseHandler(283):     Content-Encoding="gzip"
</span><span class='line'>04-17 03:35:22.846: D/SOAPHttpResponseHandler(283):     Content-Type="text/xml; charset=utf-8"
</span><span class='line'>04-17 03:35:22.846: D/SOAPHttpResponseHandler(283):     X-Powered-By="ASP.NET"
</span><span class='line'>04-17 03:35:22.846: D/SOAPHttpResponseHandler(283):     Server="Microsoft-IIS/7.0"
</span><span class='line'>04-17 03:35:22.846: D/SOAPHttpResponseHandler(283):     Cache-Control="private, max-age=0"
</span><span class='line'>04-17 03:35:22.846: D/SOAPHttpResponseHandler(283): }
</span><span class='line'>04-17 03:35:22.846: D/SOAPHttpResponseHandler(283): Response message : 
</span><span class='line'>04-17 03:35:22.846: D/SOAPHttpResponseHandler(283): &lt;?xml version="1.0" encoding="utf-8"?>&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">&lt;soap:Body>&lt;GenerateBarCodeResponse xmlns="http://www.webservicex.net/">&lt;GenerateBarCodeResult>iVBORw0KGgoAAAANSUhEUgAAAOEAAAB9CAYAAABUFwRCAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAABkVJREFUeF7t2gmS2jAUhGFzOx/Ix+EuXGVu4uBF8CQvMBNv3fVTNTUJYPk9ub9Ihtza56Pa+XG73aruNPF3OmV8Pj336f3xfeU4vxl3bZw4LV09cdy1Osvj1vr+ax87Xy6GP3oGOoR7P5499aeIv7s/l8+nOj69P76vHOc3466NE+ckjZnqWquzPG6t77/2sff1YvxjZ2DQsfPjE6pvwh1x/TW8a+g/4V06f4kMhDuHyXB4EI4rNAgN0y3SEghBKBJV3zJBCELfdIt0BkIQikTVt0wQgtA33SKdgRCEIlH1LROEIPRNt0hnIAShSFR9ywQhCH3TLdIZCEEoElXfMkEIQt90i3QGQhCKRNW3TBCC0DfdIp2BEIQiUfUtE4Qg9E23SGcgBKFIVH3LBCEIfdMt0hkIQSgSVd8yQQhC33SLdAZCEIpE1bdMEILQN90inYEQhCJR9S0ThCD0TbdIZyAEoUhUfcsEIQh90y3SGQhBKBJV3zJBCELfdIt0BkIQikTVt0wQgtA33SKdgRCEIlH1LROEIPRNt0hnIAShSFR9ywQhCH3TLdIZCEEoElXfMkEIQt90i3QGQhCKRNW3TBCC0DfdIp2BEIQiUfUtE4Qg9E23SGcgBKFIVH3LBCEIfdMt0hkIQSgSVd8yQQhC33SLdAZCEIpE1bdMEILQN90inYEQhCJR9S0ThCD0TbdIZyAEoUhUfcsEIQh90y3SGQhBKBJV3zJBCELfdIt0BkIQikTVt0wQgtA33SKdgRCEIlH1LROEIPRNt0hnIAShSFR9ywQhCH3TLdIZCEEoElXfMkEIQt90i3QGQhCKRNW3TBCC0DfdIp2BEIQiUfUtE4Qg9E23SGcgBKFIVH3LBCEIfdMt0hkIQSgSVd8yQQhC33SLdAZCEIpE1bdMEILQN90inYEQhCJR9S0ThCD0TbdIZyAEoUhUfcsEIQh90y3SGQhBKBJV3zJBCELfdIt0BkIQikTVt0wQgtA33SKdgRCEIlH1LROEIPRNt0hnIAShSFR9ywQhCH3TLdIZCEEoElXfMkEIQt90i3QGQhCKRNW3TBCC0DfdIp2BEIQiUfUtE4Qg9E23SGcgBKFIVH3LBCEIfdMt0hkIQSgSVd8yQQhC33SLdAZCEIpE1bdMEILQN90inYEQhCJR9S0ThCD0TbdIZyAEoUhUfcsEIQh90y3SGQhBKBJV3zJBCELfdIt0BkIQikTVt0wQgtA33SKdgRCEIlH1LROEIPRNt0hnIAShSFR9ywQhCH3TLdIZCEEoElXfMk9B6Dud23VWVVXb/XSP9Hu70RnpSjMAwitdjVALCC96YXYoC4Q7TOoWQ4Jwi1nUGONCCB9tU9Xt/SdM3M+9rcdtWVW+9mj6bdrwUxyXhuiPz1/7udfhuO7Ypn28TvnT3us0ZtXWqZjsXO/Xq2Y8cq2W+Fp9b2N7axEBoQagLaq8CMIOYIlpeC7lvO3DPILpcQU88bUwK49mCrR77jVmMYP9+xOUGcBvqxF3XueAPNb5Pl//2pcQQbhFvDXGOB1hWpnqpslXrQ5WFtiZlfI1xzOv9cfXxUrYrXQLq+ZzPZysxLPXcFgt81UyrqZhnF/1kJ8MhBqAtqjyfISPx7BFW1t5+k6XkWSrz+u9TxiTMYcx6teWM4AsV9el2Z2sujMrYfrHYxbh8kocTwnCLeKtMcbpCOe3eNPJy7aK2T3fdMvZoexXqhJh8fcM7wjmEe4Zp9vWYhXMVuLxXjGu3uM9bb6lBqEGjeOqlEA4YFnaRnbWivuwb+7rXivmiGL8AOW1zZxbmWdX62ElXNyexg9mmnu/lV26J2UlPC74VzrT5RF+AjhM5nurmn3w8nGLO6xsPYrJNjO8lq7YZHuZttHlPeEStLV7Uu4JrwTjyFoujfA7gBFh+pQ1fI2QvsaYXX7CfebknnCKsN8Sl+N8cVy+5Y5gly8194RHMjj3XNdFuLaKFavW4kf/5RjFceV9Zvf35U89Z1bG/tqtfFpanH8W8cL1B+G5MI48+2URDt/xTX/SQpR/6b6wunz8sr48Lv+yPl/0iu8ts6sUV+CV/xzw5XeE3dAgPJLBuee6DsJz5+FyZwfh5S7JbgWBcLep/b+BQfh/86d0NAgverVAeNELs0NZ/wANCo7oOuyQVQAAAABJRU5ErkJggg==&lt;/GenerateBarCodeResult>&lt;/GenerateBarCodeResponse>&lt;/soap:Body>&lt;/soap:Envelope></span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nano Tutorial 1 - a Number Conversion Sample]]></title>
    <link href="http://bulldog2011.github.com/blog/2013/04/15/nano-tutorial-1-a-number-conversion-sample/"/>
    <updated>2013-04-15T20:14:00+08:00</updated>
    <id>http://bulldog2011.github.com/blog/2013/04/15/nano-tutorial-1-a-number-conversion-sample</id>
    <content type="html"><![CDATA[<p>This is the first post of Nano Tutorial Series, in this post, I will show you how easy to use <a href="https://github.com/bulldog2011/nano">Nano framework</a> to put WSDL driven application development on Android platform into practice. If this is the first time you get to know Nano, then after this tutorial, you will basically understand what Nano can do for you, and the basic development process when using Nano to carry out WSDL driven development on Android. If you want to see the big picture, please read <a href="http://bulldog2011.github.io/blog/2013/04/15/wsdl-driven-development-on-android-the-big-picture/">this post</a> first.</p>

<p>The whole source of this demo is <a href="https://github.com/bulldog2011/nano/tree/master/sample/webservice/NumberConverter">here</a>.</p>

<p>WSDL driven development using Nano framework has following steps:</p>

<blockquote><ol>
<li>Generate Java proxy from WSDL</li>
<li>Create new Android project, add Nano runtime and generated proxy into your project</li>
<li>Implement appliction logic and UI, call proxy to invoke web service as needed.</li>
</ol>
</blockquote>

<p>Let me cut to the point and show you each step using a simple <a href="http://www.dataaccess.com/webservicesserver/numberconversion.wso">Number Conversion</a> web serivce from <a href="http://www.dataaccess.com/">Data Access Worldwide</a>.</p>

<!--more-->


<h2>Step 1 - Generate Java Proxy from WSDL</h2>

<p>Nano has an accompanying code generator which can generate Java proxy for Android from wsdl, the tool is called <a href="https://github.com/bulldog2011/mwsc">mwsc</a>, please download the latest zip package <a href="https://github.com/bulldog2011/bulldog-repo/blob/master/repo/releases/com/leansoft/mwsc/0.6.0/mwsc-0.6.0-bin.zip">here</a> then extract it into your local folder.
<strong><em>Note</em></strong> : mwsc code generator needs Java 1.6 or above to run, so please ensure Java is installed on your OS, if not, please install it first.</p>

<p>The command line script <code>mwsc.bat</code> is in the bin folder, note, <code>mwsc.bat</code> is for windows, for linux, please use <code>mwsc</code> in the same folder. Before code generation, you may optionally create a folder as your code generation target(for example, <code>generated</code>), otherwise, mwsc will generate code in current folder. Now let&#8217;s generate code from wsdl by running flowing command in the terminal:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bin\mwsc.bat -nano -d generated http://www.dataaccess.com/webservicesserver/numberconversion.wso?WSDL</span></code></pre></td></tr></table></div></figure>


<p>If everything works fine, you will see the code generator output <code>generating code…</code> and <code>done</code> at the end, the target proxy will be generated in the <code>generated</code> folder.</p>

<h2>Step 2 - Create New Android Project, Add Nano Library and Generated Proxy into Your Project</h2>

<p>Now let&#8217;s create a simple Android project in eclipse(or other IDE you prefer), then you need to:</p>

<blockquote><ol>
<li>Download <a href="https://github.com/bulldog2011/bulldog-repo/blob/master/repo/releases/com/leansoft/nano/0.7.0/nano-0.7.0.jar">latest nano library jar</a> and add it to the <code>libs</code> folder of your Android project.</li>
<li>Drag the above generated proxy into the <code>src</code> folder of your Android project.</li>
<li>Add following user permissions in the <code>AndroidManifest.xml</code> file to enable network access.</li>
</ol>
</blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;uses-permission</span> <span class="na">android:name=</span><span class="s">&quot;android.permission.INTERNET&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;uses-permission</span> <span class="na">android:name=</span><span class="s">&quot;android.permission.ACCESS_NETWORK_STATE&quot;</span> <span class="nt">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now since both Nano runtime library and the NumberConversion web service proxy have been added in the project, you can try to refresh(or build) the project, if no build error, job well done, you can continue to the next step, otherwise, please do some troubleshooting, or check the source of this tutorial(in the sample/webservice folder).</p>

<p>Below is an eclipse package explorer screenshot after finishing this step:</p>

<p><img class="center" src="http://bulldog2011.github.com/images/nano/tutorial01/screen_shot1.png" width="600" height="800"></p>

<h2>Step 3 - Implement Appliction Logic and UI, Call Proxy to Invoke Web Service as Needed.</h2>

<p>A SOAP web service client called <code>NumberConversionSoapType_SOAPClient</code> has been generated in the <code>com.dataaccess.webservicesserver.client</code> package, it&#8217;s the main proxy to the external number conversion service, you can invoke number conversion service by calling methods on a <code>NumberConversionSoapType_SOAPClient</code> instance. As a Nano best practice, it&#8217;s not necessary for you to initiate a new client everytime you need to call service, a singleton client instance is enough for the whole application, so before writing any application logic, let&#8217;s create a shared NumberConversion service client for later use first, see code below:</p>

<figure class='code'><figcaption><span>NumberConversionServiceClient.java </span><a href='https://github.com/bulldog2011/nano/blob/master/sample/webservice/NumberConverter/src/com/dataaccess/service/NumberConversionServiceClient.java'>source </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">dataaccess</span><span class="o">.</span><span class="na">service</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.dataaccess.webservicesserver.client.NumberConversionSoapType_SOAPClient</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * The Number Conversion Web Service, implemented with Visual DataFlex, </span>
</span><span class='line'><span class="cm"> * provides functions that convert numbers into words or dollar amounts.</span>
</span><span class='line'><span class="cm"> * </span>
</span><span class='line'><span class="cm"> * http://www.dataaccess.com/webservicesserver/numberconversion.wso</span>
</span><span class='line'><span class="cm"> * </span>
</span><span class='line'><span class="cm"> * @author bulldog</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">NumberConversionServiceClient</span> <span class="o">{</span>
</span><span class='line'>  
</span><span class='line'>  <span class="c1">// target endpoint</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="n">String</span> <span class="n">numberConversionServiceUrl</span> <span class="o">=</span> <span class="s">&quot;http://www.dataaccess.com/webservicesserver/numberconversion.wso&quot;</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">private</span> <span class="kd">static</span> <span class="kd">volatile</span> <span class="n">NumberConversionSoapType_SOAPClient</span> <span class="n">client</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="c1">// get a shared client</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="n">NumberConversionSoapType_SOAPClient</span> <span class="nf">getSharedClient</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">client</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="kd">synchronized</span><span class="o">(</span><span class="n">NumberConversionServiceClient</span><span class="o">.</span><span class="na">class</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="k">if</span> <span class="o">(</span><span class="n">client</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                  <span class="n">client</span> <span class="o">=</span> <span class="k">new</span> <span class="n">NumberConversionSoapType_SOAPClient</span><span class="o">();</span>
</span><span class='line'>                  <span class="n">client</span><span class="o">.</span><span class="na">setEndpointUrl</span><span class="o">(</span><span class="n">numberConversionServiceUrl</span><span class="o">);</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      
</span><span class='line'>      <span class="k">return</span> <span class="n">client</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>The code is quite self-explanatory, the <code>getSharedClient</code> static factory method just returns a NumberConversionSoapType_SOAPClient instance with specified target service endpoint address, and there will be only one such client instance within the application.</p>

<p>With the help of the NumberConversion service proxy generated from WSDL, web service call through Nano is extremely simple, let&#8217;s review and understand the generated numberToWords proxy interface first before writing calling logic:</p>

<figure class='code'><figcaption><span>NumberConversionSoapType_SOAPClient.java </span><a href='https://github.com/bulldog2011/nano/blob/master/sample/webservice/NumberConverter/src/com/dataaccess/webservicesserver/client/NumberConversionSoapType_SOAPClient.java'>source  </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// Generated by wsdl compiler for android/java</span>
</span><span class='line'><span class="c1">// DO NOT CHANGE!</span>
</span><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">dataaccess</span><span class="o">.</span><span class="na">webservicesserver</span><span class="o">.</span><span class="na">client</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.leansoft.nano.ws.SOAPServiceCallback</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.leansoft.nano.ws.NanoSOAPClient</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.dataaccess.webservicesserver.NumberToDollars</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.dataaccess.webservicesserver.NumberToWords</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.dataaccess.webservicesserver.NumberToWordsResponse</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.dataaccess.webservicesserver.NumberToDollarsResponse</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> This class is the SOAP client to the NumberConversionSoapType Web Service.</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">NumberConversionSoapType_SOAPClient</span> <span class="kd">extends</span> <span class="n">NanoSOAPClient</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     Returns the word corresponding to the positive number passed as parameter. Limited to quadrillions.</span>
</span><span class='line'><span class="cm">    */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">numberToWords</span><span class="o">(</span><span class="n">NumberToWords</span> <span class="n">requestObject</span><span class="o">,</span> <span class="n">SOAPServiceCallback</span><span class="o">&lt;</span><span class="n">NumberToWordsResponse</span><span class="o">&gt;</span> <span class="n">serviceCallback</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">requestObject</span><span class="o">,</span> <span class="n">serviceCallback</span><span class="o">,</span> <span class="n">NumberToWordsResponse</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     Returns the non-zero dollar amount of the passed number.</span>
</span><span class='line'><span class="cm">    */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">numberToDollars</span><span class="o">(</span><span class="n">NumberToDollars</span> <span class="n">requestObject</span><span class="o">,</span> <span class="n">SOAPServiceCallback</span><span class="o">&lt;</span><span class="n">NumberToDollarsResponse</span><span class="o">&gt;</span> <span class="n">serviceCallback</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">requestObject</span><span class="o">,</span> <span class="n">serviceCallback</span><span class="o">,</span> <span class="n">NumberToDollarsResponse</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>This is just a plain old interface generated from wsdl, unlike normal interface, this interface is asynchronous, when you call <code>numberToWords</code> service, you need to provide a request of type <code>NumberToWords</code> as first parameter, also you need to provide(or register) a callback implementing interface <code>SOAPServiceCallback</code>, see definition of this interface below:</p>

<figure class='code'><figcaption><span>XMLServiceCallback.java </span><a href='https://github.com/bulldog2011/nano/blob/master/src/main/java/com/leansoft/nano/ws/XMLServiceCallback.java'>source  </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">leansoft</span><span class="o">.</span><span class="na">nano</span><span class="o">.</span><span class="na">ws</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">XMLServiceCallback</span><span class="o">&lt;</span><span class="n">R</span><span class="o">&gt;</span> <span class="o">{</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onSuccess</span><span class="o">(</span><span class="n">R</span> <span class="n">responseObject</span><span class="o">);</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onFailure</span><span class="o">(</span><span class="n">Throwable</span> <span class="n">error</span><span class="o">,</span> <span class="n">String</span> <span class="n">errorMessage</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>SOAPServiceCallback.java </span><a href='https://github.com/bulldog2011/nano/blob/master/src/main/java/com/leansoft/nano/ws/SOAPServiceCallback.java'>source  </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">leansoft</span><span class="o">.</span><span class="na">nano</span><span class="o">.</span><span class="na">ws</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">SOAPServiceCallback</span><span class="o">&lt;</span><span class="n">R</span><span class="o">&gt;</span> <span class="kd">extends</span> <span class="n">XMLServiceCallback</span><span class="o">&lt;</span><span class="n">R</span><span class="o">&gt;</span> <span class="o">{</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onSOAPFault</span><span class="o">(</span><span class="n">Object</span> <span class="n">soapFault</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>SOAPServiceCallback</code> interface supports three callback methods, <code>onSuccess</code>, <code>onFailure</code> and <code>onSOAPFault</code> callbacks, success callback will be called if the service invocation succeed, and you will get a response object of type <code>NumberToWordsResponse</code>, usually, in success callback, you implement response handling logic and update UI according to the response; failure callback will be called if there is any HTTP or Nano parsing error, you may get an exception and an error message in such case, usually, you implement error handling logic in failure callback and update UI accordingly; soap fault callback will be called if Nano get a SOAP fault from service response, usually, you implement error handling logic in the soap fault callback and update UI accordingly.</p>

<p>By the way, although not necessary, I suggest you to review all proxy code generated by mwsc, this will help you better understand the inner working of Nano.</p>

<p>Now time to the UI part, for this simple demo, we only need an <code>EditText</code> for number input, and two <code>Button</code>, one for number to dollars conversion, the other for number to words conversion, see graphical layout screenshot below:</p>

<p><img class="center" src="http://bulldog2011.github.com/images/nano/tutorial01/screen_shot2.png" width="400" height="600"></p>

<p>Now let&#8217;s implement application logic by calling the <code>numberToWords</code> or <code>numberToDollars</code> services,
the application logic is implemented in the <code>MainActivity</code> class, a registered <code>onClick</code> method will be triggered when you click the <code>Number To Words</code> button on the UI:</p>

<figure class='code'><figcaption><span>MainActivity.m </span><a href='https://github.com/bulldog2011/nano/blob/master/sample/webservice/NumberConverter/src/com/leansoft/nano/sample/MainActivity.java'>source  </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'> <span class="n">Button</span> <span class="n">numberToWordsButton</span> <span class="o">=</span> <span class="o">(</span><span class="n">Button</span><span class="o">)</span> <span class="k">this</span><span class="o">.</span><span class="na">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">numToWordsButton</span><span class="o">);</span>
</span><span class='line'>  
</span><span class='line'>  <span class="n">numberToWordsButton</span><span class="o">.</span><span class="na">setOnClickListener</span><span class="o">(</span><span class="k">new</span> <span class="n">OnClickListener</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>      <span class="nd">@Override</span>
</span><span class='line'>      <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">View</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="c1">// get shared client</span>
</span><span class='line'>          <span class="n">NumberConversionSoapType_SOAPClient</span> <span class="n">client</span> <span class="o">=</span> <span class="n">NumberConversionServiceClient</span><span class="o">.</span><span class="na">getSharedClient</span><span class="o">();</span>
</span><span class='line'>          <span class="n">client</span><span class="o">.</span><span class="na">setDebug</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span> <span class="c1">// enable soap message logging</span>
</span><span class='line'>          
</span><span class='line'>          <span class="c1">// build request</span>
</span><span class='line'>          <span class="n">NumberToWords</span> <span class="n">request</span> <span class="o">=</span> <span class="k">new</span> <span class="n">NumberToWords</span><span class="o">();</span>
</span><span class='line'>          <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">String</span> <span class="n">number</span> <span class="o">=</span> <span class="o">((</span><span class="n">EditText</span><span class="o">)</span><span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">numerInputText</span><span class="o">)).</span><span class="na">getText</span><span class="o">().</span><span class="na">toString</span><span class="o">();</span>
</span><span class='line'>              <span class="n">request</span><span class="o">.</span><span class="na">ubiNum</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BigInteger</span><span class="o">(</span><span class="n">number</span><span class="o">);</span>
</span><span class='line'>          <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">NumberFormatException</span> <span class="n">ex</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">,</span> <span class="s">&quot;Invalid integer number&quot;</span><span class="o">,</span> <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>              <span class="k">return</span><span class="o">;</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>          
</span><span class='line'>          <span class="c1">// make API call and register callbacks</span>
</span><span class='line'>          <span class="n">client</span><span class="o">.</span><span class="na">numberToWords</span><span class="o">(</span><span class="n">request</span><span class="o">,</span> <span class="k">new</span> <span class="n">SOAPServiceCallback</span><span class="o">&lt;</span><span class="n">NumberToWordsResponse</span><span class="o">&gt;()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>              <span class="nd">@Override</span>
</span><span class='line'>              <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onSuccess</span><span class="o">(</span><span class="n">NumberToWordsResponse</span> <span class="n">responseObject</span><span class="o">)</span> <span class="o">{</span> <span class="c1">// success</span>
</span><span class='line'>                  <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">,</span> <span class="n">responseObject</span><span class="o">.</span><span class="na">numberToWordsResult</span><span class="o">,</span> <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>              <span class="nd">@Override</span>
</span><span class='line'>              <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onFailure</span><span class="o">(</span><span class="n">Throwable</span> <span class="n">error</span><span class="o">,</span> <span class="n">String</span> <span class="n">errorMessage</span><span class="o">)</span> <span class="o">{</span> <span class="c1">// http or parsing error</span>
</span><span class='line'>                  <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">,</span> <span class="n">errorMessage</span><span class="o">,</span> <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>              <span class="nd">@Override</span>
</span><span class='line'>              <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onSOAPFault</span><span class="o">(</span><span class="n">Object</span> <span class="n">soapFault</span><span class="o">)</span> <span class="o">{</span> <span class="c1">// soap fault</span>
</span><span class='line'>                  <span class="n">Fault</span> <span class="n">fault</span> <span class="o">=</span> <span class="o">(</span><span class="n">Fault</span><span class="o">)</span><span class="n">soapFault</span><span class="o">;</span>
</span><span class='line'>                  <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">,</span> <span class="n">fault</span><span class="o">.</span><span class="na">faultstring</span><span class="o">,</span> <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>              
</span><span class='line'>          <span class="o">});</span>
</span><span class='line'>          
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      
</span><span class='line'>  <span class="o">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>The call logic can&#8217;t be simpler, I&#8217;ve added comments in the service call code for you to better understand the call flow. Also, I&#8217;ve enabled the debug mode of the proxy, so you can see the detailed request/response messages when you run the demo, this feature is extremely useful for troubleshooting.</p>

<h2>Final Step - Run the Demo</h2>

<p>Now it&#8217;s time to run the demo, let&#8217;s try it in the simulator(you may use a real device of course),  below is a screenshot of the simulator after converting a number to dollars:</p>

<p><img class="center" src="http://bulldog2011.github.com/images/nano/tutorial01/screen_shot3.png" width="400" height="600"></p>

<p>You can also find the debug output in the Android LogCat, like below:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>04-15 13:54:26.146: D/NanoSOAPClient(281): Sending request to : http://www.dataaccess.com/webservicesserver/numberconversion.wso
</span><span class='line'>04-15 13:54:26.146: D/NanoSOAPClient(281): Request HTTP headers : 
</span><span class='line'>04-15 13:54:26.146: D/NanoSOAPClient(281): {
</span><span class='line'>04-15 13:54:26.146: D/NanoSOAPClient(281):     Accept="text/xml"
</span><span class='line'>04-15 13:54:26.146: D/NanoSOAPClient(281): }
</span><span class='line'>04-15 13:54:26.146: D/NanoSOAPClient(281): Request message : 
</span><span class='line'>04-15 13:54:26.146: D/NanoSOAPClient(281): &lt;?xml version='1.0' encoding='UTF-8' ?>
</span><span class='line'>04-15 13:54:26.146: D/NanoSOAPClient(281): &lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.dataaccess.com/webservicesserver/">
</span><span class='line'>04-15 13:54:26.146: D/NanoSOAPClient(281):   &lt;soapenv:Body>
</span><span class='line'>04-15 13:54:26.146: D/NanoSOAPClient(281):     &lt;NumberToDollars>
</span><span class='line'>04-15 13:54:26.146: D/NanoSOAPClient(281):       &lt;dNum>128.32&lt;/dNum>
</span><span class='line'>04-15 13:54:26.146: D/NanoSOAPClient(281):     &lt;/NumberToDollars>
</span><span class='line'>04-15 13:54:26.146: D/NanoSOAPClient(281):   &lt;/soapenv:Body>
</span><span class='line'>04-15 13:54:26.146: D/NanoSOAPClient(281): &lt;/soapenv:Envelope>
</span><span class='line'>04-15 13:54:27.356: D/SOAPHttpResponseHandler(281): Response HTTP status : 200
</span><span class='line'>04-15 13:54:27.366: D/SOAPHttpResponseHandler(281): Response HTTP headers : 
</span><span class='line'>04-15 13:54:27.366: D/SOAPHttpResponseHandler(281): {
</span><span class='line'>04-15 13:54:27.366: D/SOAPHttpResponseHandler(281):     Web-Service="Visual DataFlex 17.0"
</span><span class='line'>04-15 13:54:27.366: D/SOAPHttpResponseHandler(281):     Content-Type="text/xml; charset=utf-8"
</span><span class='line'>04-15 13:54:27.366: D/SOAPHttpResponseHandler(281):     Date="Mon, 15 Apr 2013 13:54:52 GMT"
</span><span class='line'>04-15 13:54:27.366: D/SOAPHttpResponseHandler(281):     Content-Length="397"
</span><span class='line'>04-15 13:54:27.366: D/SOAPHttpResponseHandler(281):     X-Powered-By="ASP.NET"
</span><span class='line'>04-15 13:54:27.366: D/SOAPHttpResponseHandler(281):     Server="Microsoft-IIS/6.0"
</span><span class='line'>04-15 13:54:27.366: D/SOAPHttpResponseHandler(281):     Cache-Control="private, max-age=0"
</span><span class='line'>04-15 13:54:27.366: D/SOAPHttpResponseHandler(281): }
</span><span class='line'>04-15 13:54:27.376: D/SOAPHttpResponseHandler(281): Response message : 
</span><span class='line'>04-15 13:54:27.376: D/SOAPHttpResponseHandler(281): &lt;?xml version="1.0" encoding="utf-8"?>
</span><span class='line'>04-15 13:54:27.376: D/SOAPHttpResponseHandler(281): &lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
</span><span class='line'>04-15 13:54:27.376: D/SOAPHttpResponseHandler(281):   &lt;soap:Body>
</span><span class='line'>04-15 13:54:27.376: D/SOAPHttpResponseHandler(281):     &lt;m:NumberToDollarsResponse xmlns:m="http://www.dataaccess.com/webservicesserver/">
</span><span class='line'>04-15 13:54:27.376: D/SOAPHttpResponseHandler(281):       &lt;m:NumberToDollarsResult>one hundred and twenty eight dollars and thirty two cents&lt;/m:NumberToDollarsResult>
</span><span class='line'>04-15 13:54:27.376: D/SOAPHttpResponseHandler(281):     &lt;/m:NumberToDollarsResponse>
</span><span class='line'>04-15 13:54:27.376: D/SOAPHttpResponseHandler(281):   &lt;/soap:Body>
</span><span class='line'>04-15 13:54:27.376: D/SOAPHttpResponseHandler(281): &lt;/soap:Envelope></span></code></pre></td></tr></table></div></figure>


<p>If you have any problem to run the demo, please check the debug output first.</p>

<p>Now you see the power of Nano framework, you don&#8217;t get troubled with error prone and tedious SOAP/XML parsing or http handling, the generic Nano framework will do these stuff for you, you only need to use a plain old asynchronous interface for service invocation, this can not only accelerate application development, but reduce the long term maintenance cost.</p>

<p>NumberConversion is just a bare minimum demo, there are other more featured demos(like Amazon, eBay search demo) in the sample folder of Nano project, please try them to better understand how Nano works, then you can begin to develop your own service based applications, using wsdl driven methodology supported by Nano.</p>

<p>See your next great Android application!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WSDL Driven Development on Android - the Big Picture]]></title>
    <link href="http://bulldog2011.github.com/blog/2013/04/15/wsdl-driven-development-on-android-the-big-picture/"/>
    <updated>2013-04-15T10:14:00+08:00</updated>
    <id>http://bulldog2011.github.com/blog/2013/04/15/wsdl-driven-development-on-android-the-big-picture</id>
    <content type="html"><![CDATA[<p>WSDL driven development is a popular and mature development methodology on platforms like Java and .Net, tools like Axis, CXF, JAX-WS, WCF are leveraged by many developers for rapid web service development. With WSDL as interface contract, both server side and client side proxies can be automatically generated from WSDL, developer can work with plain old interfaces/objects directly, no need to worry about low level SOAP/XML serialization/deserialization and service invocation details(which are very tedious and error-prone), this kind of model driven development(or meta-data driven development) can not only dramatically reduce initial development cost, but reduce long term maintenance cost.</p>

<!--more-->


<p>Although nowadays there is a trend toward RESTful service(which has no formal interface definition like WSDL), many industries(such as ecommerce industry) have a complex business domain, it&#8217;s very hard to expose complex business logic as RESTful service(a typical maintenance nightmare), so we will keep seeing that many enterprises will keep exposing their services as traditional SOAP or XML based web services, some examples are <a href="https://affiliate-program.amazon.com/gp/advertising/api/detail/main.html">Amazon Product Advertising Web Service</a>, eBay <a href="https://www.x.com/developers/ebay/products/finding-api">Finding</a>, <a href="https://www.x.com/developers/ebay/products/shopping-api">Shopping</a> and <a href="https://www.x.com/developers/ebay/products/trading-api">Trading</a> Web Services, etc.</p>

<p>Can WSDL driven development be put into practice on Android platform? Yes, now with <a href="https://github.com/bulldog2011/nano">Nano Web Service Client Framework</a> and <a href="https://github.com/bulldog2011/mwsc">WSDL compiler for Android</a>, you can also leverage WSDL driven development technology on iOS platform, dramatically improving your application development speed.</p>

<p>Let&#8217;s see the big picture:</p>

<p><img class="center" src="http://bulldog2011.github.com/images/nano/big_picture.png" width="600" height="800"></p>

<p>The picture above is the blueprint of WSDL driven development on Android. The left part of the blueprint is a build-time phase view, in this phase, we will leverage <a href="https://github.com/bulldog2011/mwsc">mwsc</a> wsdl compiler to automatically generate service proxy from wsdl, the service proxy alone can&#8217;t be used directly, it must be integrated with the generic <a href="https://github.com/bulldog2011/nano">Nano Web Service client framework</a> to take effect; The right part of the blueprint is a runtime view, a typical flow starts from your Android app, your app issues request on service proxy, the proxy passes the request to the Nano runtime framework which will delegate the object to XML/SOAP marshalling work to Nano binding framework then send serialized XML/SOAP request to external service through <a href="https://github.com/loopj/android-async-http">loopj async HTTP client</a> component, when an XML/SOAP response is received by the HTTP client component, the Nano runtime framework will also delegate the XML/SOAP to object unmarshalling work to Nano binding framework and passes the deserialized response object to the proxy which will eventually return the response object back to the calling app.</p>

<p>We used the synchronous flow in the picture just for simple demonstration, the real call flow in the runtime is asynchronous, by leveraging Java <code>Thread</code> and <code>ThreadPoolExecutor</code>, in order not to block main UI thread.</p>

<p>The Nano binding framework is the core of the Nano runtime, the real object<->xml binding magic happens here, below is the architecture of the binding runtime:</p>

<p><img class="center" src="http://bulldog2011.github.com/images/pico/binding.png" width="500" height="600"></p>

<p>There are four main components:</p>

<blockquote><ol>
<li><strong><em>Marshaller</em></strong> - responsible for object to xml marshalling</li>
<li><strong><em>Unmarshaller</em></strong> - responsible for xml to object unmarshalling</li>
<li><strong><em>BindingSchema</em></strong> - store object<->xml mapping information, used by both Marshaller and Unmarshaller to guide the marshalling/unmarshalling process at runtime, schema is extracted from class annotations and is cached for better performance.</li>
<li><strong><em>Converter</em></strong> - type converter for primitive types or frequently used types.</li>
</ol>
</blockquote>

<p>The marshalling/unmarshalling algorithm is recursive in nature:</p>

<blockquote><ol>
<li>for field of primitive or frequently used type, use corresponding converter to convert the field directly.</li>
<li>for field of object type, convert the fields of the object one by one and recursively.</li>
</ol>
</blockquote>

<p>The code generator component is based on <a href="http://docs.oracle.com/javase/6/docs/technotes/tools/share/wsimport.html">JAX-WS Wsimport</a> and <a href="http://freemarker.org/">Freemarker</a> template engine, see the whole architecture below:</p>

<p><img class="center" src="http://bulldog2011.github.com/images/pico/codegen-arch.png" width="600" height="750"></p>

<p>The whole architecture can be summarized as <strong><em>Model + Template = Code</em></strong>, code generation flow as following:</p>

<blockquote><ol>
<li>WSDL doc is first fed into Wsimport and a JAXB/JAX-WS model is generated.</li>
<li>The JAXB/JAX-WS model is then transformed into a language independent intermediate codegen model.</li>
<li>The codegen model and corresponding target language templates(Objective-C or Android) are then fed into the Freemarker template engine.</li>
<li>The Freemarker template engine will eventually transform the in-memory model into target code, guided by the templates.</li>
</ol>
</blockquote>

<p>As I know, there is no existing WSDL code generation tool tailored for Android platform, the mwsc code generator just filled this gap, it is backed by JAX-WS Wsimport, which is mature and stable, and can recognize most standard WSDL/Schema components, by delegating the most tricky and complex wsdl model transformation task to Wsimport, the mwsc code generator solved the WSDL to Android Java(or Objective-C) problem in a simple while elegant way.</p>

<p>The mwsc code generator not only generates simple bean classes from WSDL/Schema, but also generates the XML<->object mapping information(schema) and records these information in the class as Java annotations, the meta-data will later be leveraged by Nano binding framework to guide the XML<->Object transformation at runtime.</p>

<p>With a generic code generation tool and a generic web service client runtime, web service based app development on Android platform becomes easy, there is no low level xml parsing and http handling(which are tedious, error-prone and hard to maintain) any more, developers only need to work with a plain old service interface for service invocation, now they can put their real effort on application logic and UI, leading to agile Android app development.</p>

<p>In later posts, I will show how to put WSDL driven Android app development into practice in a series of tutorials, just stay tuned.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[luxun quick start]]></title>
    <link href="http://bulldog2011.github.com/blog/2013/04/03/luxun-quick-start/"/>
    <updated>2013-04-03T17:01:00+08:00</updated>
    <id>http://bulldog2011.github.com/blog/2013/04/03/luxun-quick-start</id>
    <content type="html"><![CDATA[<h2>Step 0 : Prerequisite</h2>

<p>To use Luxun, you need to have JDK 1.6 or above installed on your operating system, and Luxun supports <strong><em>Windows</em></strong> and <strong><em>Linux</em></strong> operation systems.</p>

<!--more-->


<h2>Step 1 : Download Luxun package</h2>

<p>Download a recent stable release by following instructions on <a href="https://github.com/bulldog2011/luxun">Luxun github site</a>, then extract zip file to a local folder.  Current(when this post is written) stable release is <a href="https://github.com/bulldog2011/bulldog-repo/raw/master/repo/releases/com/leansoft/luxun/0.6.0/luxun-0.6.0-bin.zip">0.6.0</a>.</p>

<p>Luxun distribution provides scripts(in <code>bin</code> folder) for both Windows and Linux environments, the demo below is made in a windows environment, if you are using Linux environment, please change script accordingly.</p>

<h2>Step 2 : Start the server</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>D:\test\luxun-0.6.0>bin\server.bat conf\server.properties
</span><span class='line'>2013-04-03 16:36:18.856 INFO  [LuxunServer] Starting luxun server 0.6
</span><span class='line'>2013-04-03 16:36:18.872 INFO  [LogManager] starting log cleaner every 600000 ms.
</span><span class='line'>2013-04-03 16:36:18.888 INFO  [ThriftServer] Wating server to start, time waited : 0 s.
</span><span class='line'>2013-04-03 16:36:19.902 INFO  [ThriftServer] Thrift server started on port : 9092
</span><span class='line'>2013-04-03 16:36:19.902 INFO  [LuxunServer] Server started.</span></code></pre></td></tr></table></div></figure>


<h2>Step 3 : Send some messages</h2>

<p>Luxun comes with a command line client that will take input from standard input and send it out as messages to the Luxun server. Each line will be sent as a separate message. The topic <code>demo</code> is created automatically when messages are sent to it. You should see something like this:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>D:\test\luxun-0.6.0>bin\producer-console.bat --broker-list 0:localhost:9092 --topic demo
</span><span class='line'>Enter your message and exit with empty string.
</span><span class='line'>> Welcome to Luxun
</span><span class='line'>Message sent : Welcome to Luxun
</span><span class='line'>> 鲁迅是一个伟大的中国作家
</span><span class='line'>Message sent : 鲁迅是一个伟大的中国作家
</span><span class='line'>></span></code></pre></td></tr></table></div></figure>


<h2>Step 4 : Start a consumer</h2>

<p>Luxun also has a command line consumer that will dump out messages to standard output.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>D:\test\luxun-0.6.0>bin\simple-consumer-console --topic demo --server luxun://localhost:9092
</span><span class='line'>
</span><span class='line'>[1] 0: Welcome to Luxun
</span><span class='line'>[2] 1: 鲁迅是一个伟大的中国作家</span></code></pre></td></tr></table></div></figure>


<p>If you have each of the above commands running in a different terminal then you should now be able to type messages into the producer terminal and see them appear in the consumer terminal.</p>

<p>Both of these command line tools have additional options. Running the command with no arguments will display usage information documenting them in more detail.</p>

<p><code>simple-consumer-console</code> is built on Luxun&#8217;s simple consumer, there is also a similar <code>consumer-console</code> which is built on Luxun&#8217;s advanced consumer. Both can be used for demo and testing.</p>

<h2>Step 5 : Write some code</h2>

<p>Below is some very simple examples of using Luxun for message producing and consuming, for consuming part,  <code>SimpleConsumer</code> is used, both <code>consume by index</code> and <code>consume by fanout id</code> are demonstrated in every case.</p>

<h4>Setup &amp; Cleanup</h4>

<p>The demos are showed as unit test cases, before every test cases, we set up two brokers and two simple consumers for testing, after every test cases, we do some cleanup:</p>

<figure class='code'><figcaption><span>SimpleDemo.java </span><a href='https://github.com/bulldog2011/luxun/blob/master/src/test/java/com/leansoft/luxun/quickstart/SimpleDemo.java'>source </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'> <span class="kd">private</span> <span class="kt">int</span> <span class="n">brokerId1</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kt">int</span> <span class="n">brokerId2</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kt">int</span> <span class="n">port1</span> <span class="o">=</span> <span class="mi">9092</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kt">int</span> <span class="n">port2</span> <span class="o">=</span> <span class="mi">9093</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">LuxunServer</span> <span class="n">server1</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">LuxunServer</span> <span class="n">server2</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">String</span> <span class="n">brokerList</span> <span class="o">=</span> <span class="n">brokerId1</span> <span class="o">+</span> <span class="s">&quot;:localhost:&quot;</span> <span class="o">+</span> <span class="n">port1</span> <span class="o">+</span> <span class="s">&quot;,&quot;</span> <span class="o">+</span> <span class="n">brokerId2</span> <span class="o">+</span> <span class="s">&quot;:localhost:&quot;</span> <span class="o">+</span> <span class="n">port2</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">String</span> <span class="n">broker1</span> <span class="o">=</span> <span class="n">brokerId1</span> <span class="o">+</span> <span class="s">&quot;:localhost:&quot;</span> <span class="o">+</span> <span class="n">port1</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">private</span> <span class="n">SimpleConsumer</span> <span class="n">simpleConsumer1</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">SimpleConsumer</span> <span class="n">simpleConsumer2</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nd">@Before</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setup</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="c1">// set up 2 brokers</span>
</span><span class='line'>      <span class="n">Properties</span> <span class="n">props1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Properties</span><span class="o">();</span>
</span><span class='line'>      <span class="n">props1</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;brokerid&quot;</span><span class="o">,</span> <span class="n">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">brokerId1</span><span class="o">));</span>
</span><span class='line'>      <span class="n">props1</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;port&quot;</span><span class="o">,</span> <span class="n">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">port1</span><span class="o">));</span>
</span><span class='line'>      <span class="n">props1</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;log.dir&quot;</span><span class="o">,</span> <span class="n">TestUtils</span><span class="o">.</span><span class="na">createTempDir</span><span class="o">().</span><span class="na">getAbsolutePath</span><span class="o">());</span>
</span><span class='line'>      <span class="n">ServerConfig</span> <span class="n">config1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ServerConfig</span><span class="o">(</span><span class="n">props1</span><span class="o">);</span>
</span><span class='line'>      <span class="n">server1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">LuxunServer</span><span class="o">(</span><span class="n">config1</span><span class="o">);</span>
</span><span class='line'>      <span class="n">server1</span><span class="o">.</span><span class="na">startup</span><span class="o">();</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">Properties</span> <span class="n">props2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Properties</span><span class="o">();</span>
</span><span class='line'>      <span class="n">props2</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;brokerid&quot;</span><span class="o">,</span> <span class="n">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">brokerId2</span><span class="o">));</span>
</span><span class='line'>      <span class="n">props2</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;port&quot;</span><span class="o">,</span> <span class="n">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">port2</span><span class="o">));</span>
</span><span class='line'>      <span class="n">props2</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;log.dir&quot;</span><span class="o">,</span> <span class="n">TestUtils</span><span class="o">.</span><span class="na">createTempDir</span><span class="o">().</span><span class="na">getAbsolutePath</span><span class="o">());</span>
</span><span class='line'>      <span class="n">ServerConfig</span> <span class="n">config2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ServerConfig</span><span class="o">(</span><span class="n">props2</span><span class="o">);</span>
</span><span class='line'>      <span class="n">server2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">LuxunServer</span><span class="o">(</span><span class="n">config2</span><span class="o">);</span>
</span><span class='line'>      <span class="n">server2</span><span class="o">.</span><span class="na">startup</span><span class="o">();</span>
</span><span class='line'>      
</span><span class='line'>      <span class="c1">// set up two simple consumers</span>
</span><span class='line'>      <span class="c1">// create a consumer 1 to connect to the Luxun server running on localhost, port 9092, socket timeout of 60 secs</span>
</span><span class='line'>      <span class="n">simpleConsumer1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SimpleConsumer</span><span class="o">(</span><span class="s">&quot;localhost&quot;</span><span class="o">,</span> <span class="n">port1</span><span class="o">,</span> <span class="mi">60000</span><span class="o">);</span>
</span><span class='line'>      <span class="c1">// create a consumer 2 to connect to the Luxun server running on localhost, port 9093, socket timeout of 60 secs</span>
</span><span class='line'>      <span class="n">simpleConsumer2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SimpleConsumer</span><span class="o">(</span><span class="s">&quot;localhost&quot;</span><span class="o">,</span> <span class="n">port2</span><span class="o">,</span> <span class="mi">60000</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@After</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">cleanup</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">server1</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>      <span class="n">server2</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">simpleConsumer1</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>      <span class="n">simpleConsumer2</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">Utils</span><span class="o">.</span><span class="na">deleteDirectory</span><span class="o">(</span><span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">server1</span><span class="o">.</span><span class="na">config</span><span class="o">.</span><span class="na">getLogDir</span><span class="o">()));</span>
</span><span class='line'>      <span class="n">Utils</span><span class="o">.</span><span class="na">deleteDirectory</span><span class="o">(</span><span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">server2</span><span class="o">.</span><span class="na">config</span><span class="o">.</span><span class="na">getLogDir</span><span class="o">()));</span>
</span><span class='line'>      <span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">500</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Send a single message</h4>

<figure class='code'><figcaption><span>SimpleDemo.java </span><a href='https://github.com/bulldog2011/luxun/blob/master/src/test/java/com/leansoft/luxun/quickstart/SimpleDemo.java'>source </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'> <span class="nd">@Test</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">sendSingleMessage</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">Properties</span> <span class="n">props</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Properties</span><span class="o">();</span>
</span><span class='line'>      <span class="n">props</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;serializer.class&quot;</span><span class="o">,</span> <span class="n">StringEncoder</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
</span><span class='line'>      <span class="n">props</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;broker.list&quot;</span><span class="o">,</span> <span class="n">broker1</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">ProducerConfig</span> <span class="n">config</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ProducerConfig</span><span class="o">(</span><span class="n">props</span><span class="o">);</span>
</span><span class='line'>      <span class="n">Producer</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">producer</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Producer</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;(</span><span class="n">config</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">ProducerData</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">data</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ProducerData</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;(</span><span class="s">&quot;test-topic&quot;</span><span class="o">,</span> <span class="s">&quot;test-message&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">producer</span><span class="o">.</span><span class="na">send</span><span class="o">(</span><span class="n">data</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">producer</span><span class="o">.</span><span class="na">close</span><span class="o">();</span> <span class="c1">// finish with the producer</span>
</span><span class='line'>      
</span><span class='line'>      <span class="c1">// consume by index</span>
</span><span class='line'>      <span class="n">List</span><span class="o">&lt;</span><span class="n">MessageList</span><span class="o">&gt;</span> <span class="n">listOfMessageList</span> <span class="o">=</span> <span class="n">simpleConsumer1</span><span class="o">.</span><span class="na">consume</span><span class="o">(</span><span class="s">&quot;test-topic&quot;</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">10000</span><span class="o">);</span>
</span><span class='line'>      <span class="n">assertTrue</span><span class="o">(</span><span class="n">listOfMessageList</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">==</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>      <span class="n">MessageList</span> <span class="n">messageList</span> <span class="o">=</span> <span class="n">listOfMessageList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>      <span class="n">assertTrue</span><span class="o">(</span><span class="n">messageList</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">==</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>      <span class="n">Message</span> <span class="n">message</span> <span class="o">=</span> <span class="n">messageList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>      <span class="n">assertEquals</span><span class="o">(</span><span class="s">&quot;test-message&quot;</span><span class="o">,</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="n">message</span><span class="o">.</span><span class="na">getBytes</span><span class="o">()));</span>
</span><span class='line'>      
</span><span class='line'>      <span class="c1">// consume by fanout id</span>
</span><span class='line'>      <span class="n">String</span> <span class="n">fanoutId</span> <span class="o">=</span> <span class="s">&quot;demo&quot;</span><span class="o">;</span>
</span><span class='line'>      <span class="n">listOfMessageList</span> <span class="o">=</span> <span class="n">simpleConsumer1</span><span class="o">.</span><span class="na">consume</span><span class="o">(</span><span class="s">&quot;test-topic&quot;</span><span class="o">,</span> <span class="n">fanoutId</span><span class="o">,</span> <span class="mi">10000</span><span class="o">);</span>
</span><span class='line'>      <span class="n">assertTrue</span><span class="o">(</span><span class="n">listOfMessageList</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">==</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>      <span class="n">messageList</span> <span class="o">=</span> <span class="n">listOfMessageList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>      <span class="n">assertTrue</span><span class="o">(</span><span class="n">messageList</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">==</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>      <span class="n">message</span> <span class="o">=</span> <span class="n">messageList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>      <span class="n">assertEquals</span><span class="o">(</span><span class="s">&quot;test-message&quot;</span><span class="o">,</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="n">message</span><span class="o">.</span><span class="na">getBytes</span><span class="o">()));</span>
</span><span class='line'>  <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Send multiple messages in one request</h4>

<figure class='code'><figcaption><span>SimpleDemo.java </span><a href='https://github.com/bulldog2011/luxun/blob/master/src/test/java/com/leansoft/luxun/quickstart/SimpleDemo.java'>source </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'> <span class="nd">@Test</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">sendMultipleMessages</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">Properties</span> <span class="n">props</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Properties</span><span class="o">();</span>
</span><span class='line'>      <span class="n">props</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;serializer.class&quot;</span><span class="o">,</span> <span class="n">StringEncoder</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
</span><span class='line'>      <span class="n">props</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;broker.list&quot;</span><span class="o">,</span> <span class="n">broker1</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">ProducerConfig</span> <span class="n">config</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ProducerConfig</span><span class="o">(</span><span class="n">props</span><span class="o">);</span>
</span><span class='line'>      <span class="n">Producer</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">producer</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Producer</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;(</span><span class="n">config</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">messages</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;();</span>
</span><span class='line'>      <span class="n">messages</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">&quot;test-message1&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">messages</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">&quot;test-message2&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">messages</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">&quot;test-message3&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">ProducerData</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">data</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ProducerData</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;(</span><span class="s">&quot;test-topic&quot;</span><span class="o">,</span> <span class="n">messages</span><span class="o">);</span>
</span><span class='line'>      <span class="n">producer</span><span class="o">.</span><span class="na">send</span><span class="o">(</span><span class="n">data</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">producer</span><span class="o">.</span><span class="na">close</span><span class="o">();</span> <span class="c1">// finish with the producer</span>
</span><span class='line'>      
</span><span class='line'>      <span class="c1">// consume by index</span>
</span><span class='line'>      <span class="n">List</span><span class="o">&lt;</span><span class="n">MessageList</span><span class="o">&gt;</span> <span class="n">listOfMessageList</span> <span class="o">=</span> <span class="n">simpleConsumer1</span><span class="o">.</span><span class="na">consume</span><span class="o">(</span><span class="s">&quot;test-topic&quot;</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">10000</span><span class="o">);</span>
</span><span class='line'>      <span class="n">assertTrue</span><span class="o">(</span><span class="n">listOfMessageList</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">==</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>      <span class="n">MessageList</span> <span class="n">messageList</span> <span class="o">=</span> <span class="n">listOfMessageList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>      <span class="n">assertTrue</span><span class="o">(</span><span class="n">messageList</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">==</span> <span class="mi">3</span><span class="o">);</span>
</span><span class='line'>      <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="mi">3</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">Message</span> <span class="n">message</span> <span class="o">=</span> <span class="n">messageList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span> <span class="o">-</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>          <span class="n">assertEquals</span><span class="o">(</span><span class="s">&quot;test-message&quot;</span> <span class="o">+</span> <span class="n">i</span><span class="o">,</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="n">message</span><span class="o">.</span><span class="na">getBytes</span><span class="o">()));</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      
</span><span class='line'>      <span class="c1">// consume by fanout id</span>
</span><span class='line'>      <span class="n">String</span> <span class="n">fanoutId</span> <span class="o">=</span> <span class="s">&quot;demo&quot;</span><span class="o">;</span>
</span><span class='line'>      <span class="n">listOfMessageList</span> <span class="o">=</span> <span class="n">simpleConsumer1</span><span class="o">.</span><span class="na">consume</span><span class="o">(</span><span class="s">&quot;test-topic&quot;</span><span class="o">,</span> <span class="n">fanoutId</span><span class="o">,</span> <span class="mi">10000</span><span class="o">);</span>
</span><span class='line'>      <span class="n">assertTrue</span><span class="o">(</span><span class="n">listOfMessageList</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">==</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>      <span class="n">messageList</span> <span class="o">=</span> <span class="n">listOfMessageList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>      <span class="n">assertTrue</span><span class="o">(</span><span class="n">messageList</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">==</span> <span class="mi">3</span><span class="o">);</span>
</span><span class='line'>      <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="mi">3</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">Message</span> <span class="n">message</span> <span class="o">=</span> <span class="n">messageList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span> <span class="o">-</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>          <span class="n">assertEquals</span><span class="o">(</span><span class="s">&quot;test-message&quot;</span> <span class="o">+</span> <span class="n">i</span><span class="o">,</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="n">message</span><span class="o">.</span><span class="na">getBytes</span><span class="o">()));</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Send messages to different topics</h4>

<figure class='code'><figcaption><span>SimpleDemo.java </span><a href='https://github.com/bulldog2011/luxun/blob/master/src/test/java/com/leansoft/luxun/quickstart/SimpleDemo.java'>source </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'> <span class="nd">@Test</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">sendMessagesToDifferentTopics</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">Properties</span> <span class="n">props</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Properties</span><span class="o">();</span>
</span><span class='line'>      <span class="n">props</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;serializer.class&quot;</span><span class="o">,</span> <span class="n">StringEncoder</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
</span><span class='line'>      <span class="n">props</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;broker.list&quot;</span><span class="o">,</span> <span class="n">broker1</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">ProducerConfig</span> <span class="n">config</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ProducerConfig</span><span class="o">(</span><span class="n">props</span><span class="o">);</span>
</span><span class='line'>      <span class="n">Producer</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">producer</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Producer</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;(</span><span class="n">config</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">ProducerData</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">data1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ProducerData</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;(</span><span class="s">&quot;test-topic1&quot;</span><span class="o">,</span> <span class="s">&quot;test-message1&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">producer</span><span class="o">.</span><span class="na">send</span><span class="o">(</span><span class="n">data1</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">ProducerData</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">data2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ProducerData</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;(</span><span class="s">&quot;test-topic2&quot;</span><span class="o">,</span> <span class="s">&quot;test-message2&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">producer</span><span class="o">.</span><span class="na">send</span><span class="o">(</span><span class="n">data2</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">producer</span><span class="o">.</span><span class="na">close</span><span class="o">();</span> <span class="c1">// finish with the producer</span>
</span><span class='line'>      
</span><span class='line'>      <span class="c1">// consume by index</span>
</span><span class='line'>      <span class="n">List</span><span class="o">&lt;</span><span class="n">MessageList</span><span class="o">&gt;</span> <span class="n">listOfMessageList</span> <span class="o">=</span> <span class="n">simpleConsumer1</span><span class="o">.</span><span class="na">consume</span><span class="o">(</span><span class="s">&quot;test-topic1&quot;</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">10000</span><span class="o">);</span>
</span><span class='line'>      <span class="n">assertTrue</span><span class="o">(</span><span class="n">listOfMessageList</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">==</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>      <span class="n">MessageList</span> <span class="n">messageList</span> <span class="o">=</span> <span class="n">listOfMessageList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>      <span class="n">assertTrue</span><span class="o">(</span><span class="n">messageList</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">==</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>      <span class="n">Message</span> <span class="n">message</span> <span class="o">=</span> <span class="n">messageList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>      <span class="n">assertEquals</span><span class="o">(</span><span class="s">&quot;test-message1&quot;</span><span class="o">,</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="n">message</span><span class="o">.</span><span class="na">getBytes</span><span class="o">()));</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">listOfMessageList</span> <span class="o">=</span> <span class="n">simpleConsumer1</span><span class="o">.</span><span class="na">consume</span><span class="o">(</span><span class="s">&quot;test-topic2&quot;</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">10000</span><span class="o">);</span>
</span><span class='line'>      <span class="n">assertTrue</span><span class="o">(</span><span class="n">listOfMessageList</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">==</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>      <span class="n">messageList</span> <span class="o">=</span> <span class="n">listOfMessageList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>      <span class="n">assertTrue</span><span class="o">(</span><span class="n">messageList</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">==</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>      <span class="n">message</span> <span class="o">=</span> <span class="n">messageList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>      <span class="n">assertEquals</span><span class="o">(</span><span class="s">&quot;test-message2&quot;</span><span class="o">,</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="n">message</span><span class="o">.</span><span class="na">getBytes</span><span class="o">()));</span>
</span><span class='line'>      
</span><span class='line'>      <span class="c1">// consume by fanoutId</span>
</span><span class='line'>      <span class="n">String</span> <span class="n">fanoutId</span> <span class="o">=</span> <span class="s">&quot;demo&quot;</span><span class="o">;</span>
</span><span class='line'>      <span class="n">listOfMessageList</span> <span class="o">=</span> <span class="n">simpleConsumer1</span><span class="o">.</span><span class="na">consume</span><span class="o">(</span><span class="s">&quot;test-topic1&quot;</span><span class="o">,</span> <span class="n">fanoutId</span><span class="o">,</span> <span class="mi">10000</span><span class="o">);</span>
</span><span class='line'>      <span class="n">assertTrue</span><span class="o">(</span><span class="n">listOfMessageList</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">==</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>      <span class="n">messageList</span> <span class="o">=</span> <span class="n">listOfMessageList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>      <span class="n">assertTrue</span><span class="o">(</span><span class="n">messageList</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">==</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>      <span class="n">message</span> <span class="o">=</span> <span class="n">messageList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>      <span class="n">assertEquals</span><span class="o">(</span><span class="s">&quot;test-message1&quot;</span><span class="o">,</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="n">message</span><span class="o">.</span><span class="na">getBytes</span><span class="o">()));</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">listOfMessageList</span> <span class="o">=</span> <span class="n">simpleConsumer1</span><span class="o">.</span><span class="na">consume</span><span class="o">(</span><span class="s">&quot;test-topic2&quot;</span><span class="o">,</span> <span class="n">fanoutId</span><span class="o">,</span> <span class="mi">10000</span><span class="o">);</span>
</span><span class='line'>      <span class="n">assertTrue</span><span class="o">(</span><span class="n">listOfMessageList</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">==</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>      <span class="n">messageList</span> <span class="o">=</span> <span class="n">listOfMessageList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>      <span class="n">assertTrue</span><span class="o">(</span><span class="n">messageList</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">==</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>      <span class="n">message</span> <span class="o">=</span> <span class="n">messageList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>      <span class="n">assertEquals</span><span class="o">(</span><span class="s">&quot;test-message2&quot;</span><span class="o">,</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="n">message</span><span class="o">.</span><span class="na">getBytes</span><span class="o">()));</span>
</span><span class='line'>  <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Send messages with GZIP compression</h4>

<figure class='code'><figcaption><span>SimpleDemo.java </span><a href='https://github.com/bulldog2011/luxun/blob/master/src/test/java/com/leansoft/luxun/quickstart/SimpleDemo.java'>source </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'> <span class="nd">@Test</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">sendMessageWithGZIPCompression</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">Properties</span> <span class="n">props</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Properties</span><span class="o">();</span>
</span><span class='line'>      <span class="n">props</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;serializer.class&quot;</span><span class="o">,</span> <span class="n">StringEncoder</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
</span><span class='line'>      <span class="n">props</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;broker.list&quot;</span><span class="o">,</span> <span class="n">broker1</span><span class="o">);</span>
</span><span class='line'>      <span class="n">props</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;compression.codec&quot;</span><span class="o">,</span> <span class="s">&quot;1&quot;</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">ProducerConfig</span> <span class="n">config</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ProducerConfig</span><span class="o">(</span><span class="n">props</span><span class="o">);</span>
</span><span class='line'>      <span class="n">Producer</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">producer</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Producer</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;(</span><span class="n">config</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">ProducerData</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">data</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ProducerData</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;(</span><span class="s">&quot;test-topic&quot;</span><span class="o">,</span> <span class="s">&quot;test-message&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">producer</span><span class="o">.</span><span class="na">send</span><span class="o">(</span><span class="n">data</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">producer</span><span class="o">.</span><span class="na">close</span><span class="o">();</span> <span class="c1">// finish with the producer</span>
</span><span class='line'>      
</span><span class='line'>      <span class="c1">// consume by index</span>
</span><span class='line'>      <span class="n">List</span><span class="o">&lt;</span><span class="n">MessageList</span><span class="o">&gt;</span> <span class="n">listOfMessageList</span> <span class="o">=</span> <span class="n">simpleConsumer1</span><span class="o">.</span><span class="na">consume</span><span class="o">(</span><span class="s">&quot;test-topic&quot;</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">10000</span><span class="o">);</span>
</span><span class='line'>      <span class="n">assertTrue</span><span class="o">(</span><span class="n">listOfMessageList</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">==</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>      <span class="n">MessageList</span> <span class="n">messageList</span> <span class="o">=</span> <span class="n">listOfMessageList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>      <span class="n">assertEquals</span><span class="o">(</span><span class="n">CompressionCodec</span><span class="o">.</span><span class="na">GZIP</span><span class="o">,</span> <span class="n">messageList</span><span class="o">.</span><span class="na">getCompressionCodec</span><span class="o">());</span>
</span><span class='line'>      <span class="n">assertTrue</span><span class="o">(</span><span class="n">messageList</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">==</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>      <span class="n">Message</span> <span class="n">message</span> <span class="o">=</span> <span class="n">messageList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>      <span class="n">assertEquals</span><span class="o">(</span><span class="s">&quot;test-message&quot;</span><span class="o">,</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="n">message</span><span class="o">.</span><span class="na">getBytes</span><span class="o">()));</span>
</span><span class='line'>      
</span><span class='line'>      <span class="c1">// consume by fanout id</span>
</span><span class='line'>      <span class="n">String</span> <span class="n">fanoutId</span> <span class="o">=</span> <span class="s">&quot;demo&quot;</span><span class="o">;</span>
</span><span class='line'>      <span class="n">listOfMessageList</span> <span class="o">=</span> <span class="n">simpleConsumer1</span><span class="o">.</span><span class="na">consume</span><span class="o">(</span><span class="s">&quot;test-topic&quot;</span><span class="o">,</span> <span class="n">fanoutId</span><span class="o">,</span> <span class="mi">10000</span><span class="o">);</span>
</span><span class='line'>      <span class="n">assertTrue</span><span class="o">(</span><span class="n">listOfMessageList</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">==</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>      <span class="n">messageList</span> <span class="o">=</span> <span class="n">listOfMessageList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>      <span class="n">assertEquals</span><span class="o">(</span><span class="n">CompressionCodec</span><span class="o">.</span><span class="na">GZIP</span><span class="o">,</span> <span class="n">messageList</span><span class="o">.</span><span class="na">getCompressionCodec</span><span class="o">());</span>
</span><span class='line'>      <span class="n">assertTrue</span><span class="o">(</span><span class="n">messageList</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">==</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>      <span class="n">message</span> <span class="o">=</span> <span class="n">messageList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>      <span class="n">assertEquals</span><span class="o">(</span><span class="s">&quot;test-message&quot;</span><span class="o">,</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="n">message</span><span class="o">.</span><span class="na">getBytes</span><span class="o">()));</span>
</span><span class='line'>  <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Send messages with async producer</h4>

<figure class='code'><figcaption><span>SimpleDemo.java </span><a href='https://github.com/bulldog2011/luxun/blob/master/src/test/java/com/leansoft/luxun/quickstart/SimpleDemo.java'>source </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'> <span class="nd">@Test</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">sendMessageWithAsyncProducer</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">Properties</span> <span class="n">props</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Properties</span><span class="o">();</span>
</span><span class='line'>      <span class="n">props</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;serializer.class&quot;</span><span class="o">,</span> <span class="n">StringEncoder</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
</span><span class='line'>      <span class="n">props</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;producer.type&quot;</span><span class="o">,</span> <span class="s">&quot;async&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">props</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;broker.list&quot;</span><span class="o">,</span> <span class="n">broker1</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">ProducerConfig</span> <span class="n">config</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ProducerConfig</span><span class="o">(</span><span class="n">props</span><span class="o">);</span>
</span><span class='line'>      <span class="n">Producer</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">producer</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Producer</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;(</span><span class="n">config</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">ProducerData</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">data</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ProducerData</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;(</span><span class="s">&quot;test-topic&quot;</span><span class="o">,</span> <span class="s">&quot;test-message&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">producer</span><span class="o">.</span><span class="na">send</span><span class="o">(</span><span class="n">data</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">producer</span><span class="o">.</span><span class="na">close</span><span class="o">();</span> <span class="c1">// finish with the producer</span>
</span><span class='line'>      
</span><span class='line'>      <span class="c1">// consume by index</span>
</span><span class='line'>      <span class="n">List</span><span class="o">&lt;</span><span class="n">MessageList</span><span class="o">&gt;</span> <span class="n">listOfMessageList</span> <span class="o">=</span> <span class="n">simpleConsumer1</span><span class="o">.</span><span class="na">consume</span><span class="o">(</span><span class="s">&quot;test-topic&quot;</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">10000</span><span class="o">);</span>
</span><span class='line'>      <span class="n">assertTrue</span><span class="o">(</span><span class="n">listOfMessageList</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">==</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>      <span class="n">MessageList</span> <span class="n">messageList</span> <span class="o">=</span> <span class="n">listOfMessageList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>      <span class="n">assertTrue</span><span class="o">(</span><span class="n">messageList</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">==</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>      <span class="n">Message</span> <span class="n">message</span> <span class="o">=</span> <span class="n">messageList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>      <span class="n">assertEquals</span><span class="o">(</span><span class="s">&quot;test-message&quot;</span><span class="o">,</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="n">message</span><span class="o">.</span><span class="na">getBytes</span><span class="o">()));</span>
</span><span class='line'>      
</span><span class='line'>      <span class="c1">// consume by fanout id</span>
</span><span class='line'>      <span class="n">String</span> <span class="n">fanoutId</span> <span class="o">=</span> <span class="s">&quot;demo&quot;</span><span class="o">;</span>
</span><span class='line'>      <span class="n">listOfMessageList</span> <span class="o">=</span> <span class="n">simpleConsumer1</span><span class="o">.</span><span class="na">consume</span><span class="o">(</span><span class="s">&quot;test-topic&quot;</span><span class="o">,</span> <span class="n">fanoutId</span><span class="o">,</span> <span class="mi">10000</span><span class="o">);</span>
</span><span class='line'>      <span class="n">assertTrue</span><span class="o">(</span><span class="n">listOfMessageList</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">==</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>      <span class="n">messageList</span> <span class="o">=</span> <span class="n">listOfMessageList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>      <span class="n">assertTrue</span><span class="o">(</span><span class="n">messageList</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">==</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>      <span class="n">message</span> <span class="o">=</span> <span class="n">messageList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>      <span class="n">assertEquals</span><span class="o">(</span><span class="s">&quot;test-message&quot;</span><span class="o">,</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="n">message</span><span class="o">.</span><span class="na">getBytes</span><span class="o">()));</span>
</span><span class='line'>  <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Send messages with custom partitioner</h4>

<figure class='code'><figcaption><span>CustomPartitioner.java </span><a href='https://github.com/bulldog2011/luxun/blob/master/src/test/java/com/leansoft/luxun/quickstart/CustomPartitioner.java'>source </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">leansoft</span><span class="o">.</span><span class="na">luxun</span><span class="o">.</span><span class="na">quickstart</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.leansoft.luxun.producer.IPartitioner</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">CustomPartitioner</span> <span class="kd">implements</span> <span class="n">IPartitioner</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="o">{</span>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">int</span> <span class="nf">partition</span><span class="o">(</span><span class="n">String</span> <span class="n">key</span><span class="o">,</span> <span class="kt">int</span> <span class="n">numBrokers</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="o">(</span><span class="n">key</span><span class="o">.</span><span class="na">length</span><span class="o">()</span> <span class="o">%</span> <span class="n">numBrokers</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>SimpleDemo.java </span><a href='https://github.com/bulldog2011/luxun/blob/master/src/test/java/com/leansoft/luxun/quickstart/SimpleDemo.java'>source </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'> <span class="nd">@Test</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">sendMessagesWithCustomPartitioner</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">Properties</span> <span class="n">props</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Properties</span><span class="o">();</span>
</span><span class='line'>      <span class="n">props</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;serializer.class&quot;</span><span class="o">,</span> <span class="n">StringEncoder</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
</span><span class='line'>      <span class="n">props</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;broker.list&quot;</span><span class="o">,</span> <span class="n">brokerList</span><span class="o">);</span>
</span><span class='line'>      <span class="n">props</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;partitioner.class&quot;</span><span class="o">,</span> <span class="n">CustomPartitioner</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">ProducerConfig</span> <span class="n">config</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ProducerConfig</span><span class="o">(</span><span class="n">props</span><span class="o">);</span>
</span><span class='line'>      <span class="n">Producer</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">producer</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Producer</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;(</span><span class="n">config</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="c1">// will be sent to broker 1 since (the length of key % num of brokers) = 0</span>
</span><span class='line'>      <span class="n">ProducerData</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">data1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ProducerData</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;(</span><span class="s">&quot;test-topic1&quot;</span><span class="o">,</span> <span class="s">&quot;key1&quot;</span><span class="o">,</span> <span class="s">&quot;test-message1&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">producer</span><span class="o">.</span><span class="na">send</span><span class="o">(</span><span class="n">data1</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="c1">// will be went to broker 2 since (the length of key % num of brokers) = 1</span>
</span><span class='line'>      <span class="n">ProducerData</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">data2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ProducerData</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;(</span><span class="s">&quot;test-topic2&quot;</span><span class="o">,</span> <span class="s">&quot;key11&quot;</span><span class="o">,</span> <span class="s">&quot;test-message2&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">producer</span><span class="o">.</span><span class="na">send</span><span class="o">(</span><span class="n">data2</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">producer</span><span class="o">.</span><span class="na">close</span><span class="o">();</span> <span class="c1">// finish with the producer</span>
</span><span class='line'>      
</span><span class='line'>      <span class="c1">// consume by index</span>
</span><span class='line'>      <span class="n">List</span><span class="o">&lt;</span><span class="n">MessageList</span><span class="o">&gt;</span> <span class="n">listOfMessageList</span> <span class="o">=</span> <span class="n">simpleConsumer1</span><span class="o">.</span><span class="na">consume</span><span class="o">(</span><span class="s">&quot;test-topic1&quot;</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">10000</span><span class="o">);</span>
</span><span class='line'>      <span class="n">assertTrue</span><span class="o">(</span><span class="n">listOfMessageList</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">==</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>      <span class="n">MessageList</span> <span class="n">messageList</span> <span class="o">=</span> <span class="n">listOfMessageList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>      <span class="n">assertTrue</span><span class="o">(</span><span class="n">messageList</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">==</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>      <span class="n">Message</span> <span class="n">message</span> <span class="o">=</span> <span class="n">messageList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>      <span class="n">assertEquals</span><span class="o">(</span><span class="s">&quot;test-message1&quot;</span><span class="o">,</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="n">message</span><span class="o">.</span><span class="na">getBytes</span><span class="o">()));</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">listOfMessageList</span> <span class="o">=</span> <span class="n">simpleConsumer2</span><span class="o">.</span><span class="na">consume</span><span class="o">(</span><span class="s">&quot;test-topic2&quot;</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">10000</span><span class="o">);</span>
</span><span class='line'>      <span class="n">assertTrue</span><span class="o">(</span><span class="n">listOfMessageList</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">==</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>      <span class="n">messageList</span> <span class="o">=</span> <span class="n">listOfMessageList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>      <span class="n">assertTrue</span><span class="o">(</span><span class="n">messageList</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">==</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>      <span class="n">message</span> <span class="o">=</span> <span class="n">messageList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>      <span class="n">assertEquals</span><span class="o">(</span><span class="s">&quot;test-message2&quot;</span><span class="o">,</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="n">message</span><span class="o">.</span><span class="na">getBytes</span><span class="o">()));</span>
</span><span class='line'>      
</span><span class='line'>      <span class="c1">// consume by fanoutId</span>
</span><span class='line'>      <span class="n">String</span> <span class="n">fanoutId</span> <span class="o">=</span> <span class="s">&quot;demo&quot;</span><span class="o">;</span>
</span><span class='line'>      <span class="n">listOfMessageList</span> <span class="o">=</span> <span class="n">simpleConsumer1</span><span class="o">.</span><span class="na">consume</span><span class="o">(</span><span class="s">&quot;test-topic1&quot;</span><span class="o">,</span> <span class="n">fanoutId</span><span class="o">,</span> <span class="mi">10000</span><span class="o">);</span>
</span><span class='line'>      <span class="n">assertTrue</span><span class="o">(</span><span class="n">listOfMessageList</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">==</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>      <span class="n">messageList</span> <span class="o">=</span> <span class="n">listOfMessageList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>      <span class="n">assertTrue</span><span class="o">(</span><span class="n">messageList</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">==</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>      <span class="n">message</span> <span class="o">=</span> <span class="n">messageList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>      <span class="n">assertEquals</span><span class="o">(</span><span class="s">&quot;test-message1&quot;</span><span class="o">,</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="n">message</span><span class="o">.</span><span class="na">getBytes</span><span class="o">()));</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">listOfMessageList</span> <span class="o">=</span> <span class="n">simpleConsumer2</span><span class="o">.</span><span class="na">consume</span><span class="o">(</span><span class="s">&quot;test-topic2&quot;</span><span class="o">,</span> <span class="n">fanoutId</span><span class="o">,</span> <span class="mi">10000</span><span class="o">);</span>
</span><span class='line'>      <span class="n">assertTrue</span><span class="o">(</span><span class="n">listOfMessageList</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">==</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>      <span class="n">messageList</span> <span class="o">=</span> <span class="n">listOfMessageList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>      <span class="n">assertTrue</span><span class="o">(</span><span class="n">messageList</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">==</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>      <span class="n">message</span> <span class="o">=</span> <span class="n">messageList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>      <span class="n">assertEquals</span><span class="o">(</span><span class="s">&quot;test-message2&quot;</span><span class="o">,</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="n">message</span><span class="o">.</span><span class="na">getBytes</span><span class="o">()));</span>
</span><span class='line'>  <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Send messages with custom encoder</h4>

<figure class='code'><figcaption><span>LogEventEncoder.java </span><a href='https://github.com/bulldog2011/luxun/blob/master/src/test/java/com/leansoft/luxun/quickstart/LogEventEncoder.java'>source </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">leansoft</span><span class="o">.</span><span class="na">luxun</span><span class="o">.</span><span class="na">quickstart</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.leansoft.luxun.message.Message</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.leansoft.luxun.serializer.Encoder</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.leansoft.luxun.serializer.ThriftConverter</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">LogEventEncoder</span> <span class="kd">implements</span> <span class="n">Encoder</span><span class="o">&lt;</span><span class="n">LogEvent</span><span class="o">&gt;</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">Message</span> <span class="nf">toMessage</span><span class="o">(</span><span class="n">LogEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="kt">byte</span><span class="o">[]</span> <span class="n">binary</span> <span class="o">=</span> <span class="n">ThriftConverter</span><span class="o">.</span><span class="na">toBytes</span><span class="o">(</span><span class="n">event</span><span class="o">);</span>
</span><span class='line'>      <span class="k">return</span> <span class="k">new</span> <span class="nf">Message</span><span class="o">(</span><span class="n">binary</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>LogEventDecoder.java </span><a href='https://github.com/bulldog2011/luxun/blob/master/src/test/java/com/leansoft/luxun/quickstart/LogEventDecoder.java'>source </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">leansoft</span><span class="o">.</span><span class="na">luxun</span><span class="o">.</span><span class="na">quickstart</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.leansoft.luxun.message.Message</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.leansoft.luxun.serializer.Decoder</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.leansoft.luxun.serializer.ThriftConverter</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">LogEventDecoder</span> <span class="kd">implements</span> <span class="n">Decoder</span><span class="o">&lt;</span><span class="n">LogEvent</span><span class="o">&gt;</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">LogEvent</span> <span class="nf">toEvent</span><span class="o">(</span><span class="n">Message</span> <span class="n">message</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="kt">byte</span><span class="o">[]</span> <span class="n">binary</span> <span class="o">=</span> <span class="n">message</span><span class="o">.</span><span class="na">getBytes</span><span class="o">();</span>
</span><span class='line'>      <span class="k">return</span> <span class="o">(</span><span class="n">LogEvent</span><span class="o">)</span> <span class="n">ThriftConverter</span><span class="o">.</span><span class="na">toEvent</span><span class="o">(</span><span class="n">binary</span><span class="o">,</span> <span class="n">LogEvent</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>SimpleDemo.java </span><a href='https://github.com/bulldog2011/luxun/blob/master/src/test/java/com/leansoft/luxun/quickstart/SimpleDemo.java'>source </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'> <span class="nd">@Test</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">sendMessageWithCustomEncoder</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">Properties</span> <span class="n">props</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Properties</span><span class="o">();</span>
</span><span class='line'>      <span class="n">props</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;serializer.class&quot;</span><span class="o">,</span> <span class="n">LogEventEncoder</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
</span><span class='line'>      <span class="n">props</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;broker.list&quot;</span><span class="o">,</span> <span class="n">broker1</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      
</span><span class='line'>      <span class="n">ProducerConfig</span> <span class="n">config</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ProducerConfig</span><span class="o">(</span><span class="n">props</span><span class="o">);</span>
</span><span class='line'>      <span class="n">Producer</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">LogEvent</span><span class="o">&gt;</span> <span class="n">producer</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Producer</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">LogEvent</span><span class="o">&gt;(</span><span class="n">config</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">LogEvent</span> <span class="n">logEvent</span> <span class="o">=</span> <span class="k">new</span> <span class="n">LogEvent</span><span class="o">();</span>
</span><span class='line'>      <span class="n">logEvent</span><span class="o">.</span><span class="na">createdTime</span> <span class="o">=</span> <span class="n">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
</span><span class='line'>      <span class="n">logEvent</span><span class="o">.</span><span class="na">hostId</span> <span class="o">=</span> <span class="s">&quot;127.0.0.1&quot;</span><span class="o">;</span>
</span><span class='line'>      <span class="n">logEvent</span><span class="o">.</span><span class="na">logLevel</span> <span class="o">=</span> <span class="n">LogLevel</span><span class="o">.</span><span class="na">INFO</span><span class="o">;</span>
</span><span class='line'>      <span class="n">logEvent</span><span class="o">.</span><span class="na">message</span> <span class="o">=</span> <span class="s">&quot;a test log message&quot;</span><span class="o">;</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">ProducerData</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">LogEvent</span><span class="o">&gt;</span> <span class="n">data</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ProducerData</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">LogEvent</span><span class="o">&gt;(</span><span class="s">&quot;log-topic&quot;</span><span class="o">,</span> <span class="n">logEvent</span><span class="o">);</span>
</span><span class='line'>      <span class="n">producer</span><span class="o">.</span><span class="na">send</span><span class="o">(</span><span class="n">data</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">producer</span><span class="o">.</span><span class="na">close</span><span class="o">();</span> <span class="c1">// finish with the producer</span>
</span><span class='line'>      
</span><span class='line'>      <span class="c1">// consume by index</span>
</span><span class='line'>      <span class="n">LogEventDecoder</span> <span class="n">decoder</span> <span class="o">=</span> <span class="k">new</span> <span class="n">LogEventDecoder</span><span class="o">();</span>
</span><span class='line'>      <span class="n">List</span><span class="o">&lt;</span><span class="n">MessageList</span><span class="o">&gt;</span> <span class="n">listOfMessageList</span> <span class="o">=</span> <span class="n">simpleConsumer1</span><span class="o">.</span><span class="na">consume</span><span class="o">(</span><span class="s">&quot;log-topic&quot;</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">10000</span><span class="o">);</span>
</span><span class='line'>      <span class="n">assertTrue</span><span class="o">(</span><span class="n">listOfMessageList</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">==</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>      <span class="n">MessageList</span> <span class="n">messageList</span> <span class="o">=</span> <span class="n">listOfMessageList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>      <span class="n">assertTrue</span><span class="o">(</span><span class="n">messageList</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">==</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>      <span class="n">Message</span> <span class="n">message</span> <span class="o">=</span> <span class="n">messageList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>      <span class="n">assertEquals</span><span class="o">(</span><span class="n">logEvent</span><span class="o">,</span> <span class="n">decoder</span><span class="o">.</span><span class="na">toEvent</span><span class="o">(</span><span class="n">message</span><span class="o">));</span>
</span><span class='line'>      
</span><span class='line'>      <span class="c1">// consume by fanout id</span>
</span><span class='line'>      <span class="n">String</span> <span class="n">fanoutId</span> <span class="o">=</span> <span class="s">&quot;demo&quot;</span><span class="o">;</span>
</span><span class='line'>      <span class="n">listOfMessageList</span> <span class="o">=</span> <span class="n">simpleConsumer1</span><span class="o">.</span><span class="na">consume</span><span class="o">(</span><span class="s">&quot;log-topic&quot;</span><span class="o">,</span> <span class="n">fanoutId</span><span class="o">,</span> <span class="mi">10000</span><span class="o">);</span>
</span><span class='line'>      <span class="n">assertTrue</span><span class="o">(</span><span class="n">listOfMessageList</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">==</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>      <span class="n">messageList</span> <span class="o">=</span> <span class="n">listOfMessageList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>      <span class="n">assertTrue</span><span class="o">(</span><span class="n">messageList</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">==</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>      <span class="n">message</span> <span class="o">=</span> <span class="n">messageList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>      <span class="n">assertEquals</span><span class="o">(</span><span class="n">logEvent</span><span class="o">,</span> <span class="n">decoder</span><span class="o">.</span><span class="na">toEvent</span><span class="o">(</span><span class="n">message</span><span class="o">));</span>
</span><span class='line'>  <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Consume messages with different fanout id</h4>

<figure class='code'><figcaption><span>SimpleDemo.java </span><a href='https://github.com/bulldog2011/luxun/blob/master/src/test/java/com/leansoft/luxun/quickstart/SimpleDemo.java'>source </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'> <span class="nd">@Test</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">consumeMessageWithDifferentFanoutId</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">Properties</span> <span class="n">props</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Properties</span><span class="o">();</span>
</span><span class='line'>      <span class="n">props</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;serializer.class&quot;</span><span class="o">,</span> <span class="n">StringEncoder</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
</span><span class='line'>      <span class="n">props</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;broker.list&quot;</span><span class="o">,</span> <span class="n">broker1</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">ProducerConfig</span> <span class="n">config</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ProducerConfig</span><span class="o">(</span><span class="n">props</span><span class="o">);</span>
</span><span class='line'>      <span class="n">Producer</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">producer</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Producer</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;(</span><span class="n">config</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">100</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">ProducerData</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">data</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ProducerData</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;(</span><span class="s">&quot;test-topic&quot;</span><span class="o">,</span> <span class="s">&quot;test-message&quot;</span> <span class="o">+</span> <span class="n">i</span><span class="o">);</span>
</span><span class='line'>          <span class="n">producer</span><span class="o">.</span><span class="na">send</span><span class="o">(</span><span class="n">data</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">producer</span><span class="o">.</span><span class="na">close</span><span class="o">();</span> <span class="c1">// finish with the producer</span>
</span><span class='line'>      
</span><span class='line'>      <span class="c1">// consume by different fanout id independently</span>
</span><span class='line'>      <span class="n">String</span> <span class="n">fanoutId</span> <span class="o">=</span> <span class="s">&quot;group-a&quot;</span><span class="o">;</span>
</span><span class='line'>      <span class="n">List</span><span class="o">&lt;</span><span class="n">MessageList</span><span class="o">&gt;</span> <span class="n">listOfMessageList</span> <span class="o">=</span> <span class="n">simpleConsumer1</span><span class="o">.</span><span class="na">consume</span><span class="o">(</span><span class="s">&quot;test-topic&quot;</span><span class="o">,</span> <span class="n">fanoutId</span><span class="o">,</span> <span class="mi">10000</span><span class="o">);</span>
</span><span class='line'>      <span class="n">assertTrue</span><span class="o">(</span><span class="n">listOfMessageList</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">==</span> <span class="mi">100</span><span class="o">);</span>
</span><span class='line'>      <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">100</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">MessageList</span> <span class="n">messageList</span> <span class="o">=</span> <span class="n">listOfMessageList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
</span><span class='line'>          <span class="n">assertTrue</span><span class="o">(</span><span class="n">messageList</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">==</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>          <span class="n">Message</span> <span class="n">message</span> <span class="o">=</span> <span class="n">messageList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>          <span class="n">assertEquals</span><span class="o">(</span><span class="s">&quot;test-message&quot;</span> <span class="o">+</span> <span class="n">i</span><span class="o">,</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="n">message</span><span class="o">.</span><span class="na">getBytes</span><span class="o">()));</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">fanoutId</span> <span class="o">=</span> <span class="s">&quot;group-b&quot;</span><span class="o">;</span>
</span><span class='line'>      <span class="n">listOfMessageList</span> <span class="o">=</span> <span class="n">simpleConsumer1</span><span class="o">.</span><span class="na">consume</span><span class="o">(</span><span class="s">&quot;test-topic&quot;</span><span class="o">,</span> <span class="n">fanoutId</span><span class="o">,</span> <span class="mi">10000</span><span class="o">);</span>
</span><span class='line'>      <span class="n">assertTrue</span><span class="o">(</span><span class="n">listOfMessageList</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">==</span> <span class="mi">100</span><span class="o">);</span>
</span><span class='line'>      <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">100</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">MessageList</span> <span class="n">messageList</span> <span class="o">=</span> <span class="n">listOfMessageList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
</span><span class='line'>          <span class="n">assertTrue</span><span class="o">(</span><span class="n">messageList</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">==</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>          <span class="n">Message</span> <span class="n">message</span> <span class="o">=</span> <span class="n">messageList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>          <span class="n">assertEquals</span><span class="o">(</span><span class="s">&quot;test-message&quot;</span> <span class="o">+</span> <span class="n">i</span><span class="o">,</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="n">message</span><span class="o">.</span><span class="na">getBytes</span><span class="o">()));</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">fanoutId</span> <span class="o">=</span> <span class="s">&quot;group-c&quot;</span><span class="o">;</span>
</span><span class='line'>      <span class="n">listOfMessageList</span> <span class="o">=</span> <span class="n">simpleConsumer1</span><span class="o">.</span><span class="na">consume</span><span class="o">(</span><span class="s">&quot;test-topic&quot;</span><span class="o">,</span> <span class="n">fanoutId</span><span class="o">,</span> <span class="mi">10000</span><span class="o">);</span>
</span><span class='line'>      <span class="n">assertTrue</span><span class="o">(</span><span class="n">listOfMessageList</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">==</span> <span class="mi">100</span><span class="o">);</span>
</span><span class='line'>      <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">100</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">MessageList</span> <span class="n">messageList</span> <span class="o">=</span> <span class="n">listOfMessageList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
</span><span class='line'>          <span class="n">assertTrue</span><span class="o">(</span><span class="n">messageList</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">==</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>          <span class="n">Message</span> <span class="n">message</span> <span class="o">=</span> <span class="n">messageList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>          <span class="n">assertEquals</span><span class="o">(</span><span class="s">&quot;test-message&quot;</span> <span class="o">+</span> <span class="n">i</span><span class="o">,</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="n">message</span><span class="o">.</span><span class="na">getBytes</span><span class="o">()));</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Step 6 : Study advanced demo</h2>

<p>You can find the source of an advanced demo <a href="https://github.com/bulldog2011/luxun/blob/master/src/test/java/com/leansoft/luxun/quickstart/AdvancedDemo.java">here</a>, this demo shows:</p>

<blockquote><ol>
<li>Multiple topics</li>
<li>Multiple threads concurrent producing and consuming</li>
<li>The use of <code>StreamFactory</code> to create advanced stream style consumers</li>
<li>Group consuming</li>
</ol>
</blockquote>

<p>Below is a figure vividly show the demo scenario:
<img class="center" src="http://bulldog2011.github.com/images/luxun/demo.png" width="600" height="800"></p>

<blockquote><ol>
<li>There are two brokers.</li>
<li>There are two topics, topic <code>star</code>(marked as green) and topic <code>moon</code>(marked as blue), in each broker.</li>
<li>Two topic <code>star</code> producer threads(marked as green) will produce topic <code>star</code> messages to two brokers.</li>
<li>Four topic <code>moon</code> producer threads(marked as blue) will produce topic <code>moon</code> messages to two brokers.</li>
<li>There are two consumer groups.</li>
<li>In consumer group A, there are two topic <code>star</code> consumer threads(marked as green) and one topic <code>moon</code> consumer thread(marked as blue).</li>
<li>In consume group B, there are four topic <code>star</code> consumer threads(marked as green) and two topic <code>moon</code> consumer threads(marked as blue).</li>
</ol>
</blockquote>

<p>Within same consumer group, message for a topic will be consumed by one and only one consumer, for example, in consumer group B, although there are four topic <code>star</code> consumers, every topic <code>star</code> message can only be consumed by exact one topic <code>star</code> consumer, this is just the <code>consume once</code> queue semantics.</p>

<p>Among different consumer groups, message for a topic will be consumed by each consumer group, for example, both <code>star</code> consumers in consumer group A and group B will get their respective topic <code>star</code> message copy, this is just the <code>fanout</code> queue semantics.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[pico and ebay trading api integration how to]]></title>
    <link href="http://bulldog2011.github.com/blog/2013/04/01/pico-and-ebay-trading-api-integration-how-to/"/>
    <updated>2013-04-01T20:18:00+08:00</updated>
    <id>http://bulldog2011.github.com/blog/2013/04/01/pico-and-ebay-trading-api-integration-how-to</id>
    <content type="html"><![CDATA[<p>I&#8217;ve written a series of tutorials showing to put wsdl driven development into practice on iOS platform using <a href="https://github.com/bulldog2011/pico">Pico</a> framework. In <a href="http://bulldog2011.github.com/blog/2013/03/29/pico-tutorial-3-hello-ebay-finding/">tutorial 3</a> and <a href="http://bulldog2011.github.com/blog/2013/03/30/pico-tutorial-4-hello-ebay-shopping/">tutorial 4</a> I showed how to integrate Pico with eBay Finding and Shopping API. This post is about Pico integration with <a href="https://www.x.com/developers/ebay/products/trading-api">eBay Trading API</a> - the most heavy-weight and feature rich API from eBay, I am not going to write another tutorial for eBay Trading API integration, since the flow is quite smiliar to that already elaborated in tutorial 3 and 4, instead, I will dump a few comments here to give you some guide in case you want to integrate eBay Trading API on iOS device using Pico framework.</p>

<!--more-->


<h3>1. eBay Trading WSDL Fix</h3>

<p>The <a href="http://developer.ebay.com/webservices/latest/ebaySvc.wsdl">eBay Trading WSDL</a> has issue to work with <a href="https://github.com/bulldog2011/mwsc">mwsc</a> code generator directly, following fix is needed before mwsc can correctly generate code from the wsdl:</p>

<blockquote><ol>
<li>Remove an any element declaration in ReviseInventoryStatusRequestType, since any has already been declarated in the AbstractRequestType(from which ReviseInventoryStatusRequestType extends).</li>
<li>Add following annotation in the schema definition(at the beginning):</li>
</ol>
</blockquote>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>   <span class="nt">&lt;xs:annotation&gt;</span>
</span><span class='line'>   <span class="nt">&lt;xs:appinfo&gt;</span>
</span><span class='line'>     <span class="nt">&lt;jaxb:globalBindings</span> <span class="na">typesafeEnumMaxMembers=</span><span class="s">&quot;1000&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>   <span class="nt">&lt;/xs:appinfo&gt;</span>
</span><span class='line'>   <span class="nt">&lt;/xs:annotation&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>This is because the numbe of members in some enum types in wsdl exceeds the maximum allowed by defult xjc/jaxb processor. Of couse, you also need to declare jaxb namespace and version in wsdl/schema definition. <a href="https://github.com/bulldog2011/PicoEBayTradingClient/tree/master/wsdl">Here</a> is a fixed eBay Trading wsdl(version 815), you can search <code>mwsc</code> to find out what I have fixed.</p>

<h3>2. Code Generation Command</h3>

<p>The command to generate eBay Trading proxy from wsdl is:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bin/mwsc -pico -prefix Trading_ -ebaytrading ebaySvc_815_fix.wsdl</span></code></pre></td></tr></table></div></figure>


<p>the <code>-ebaytrading</code> is a special option I added for eBay Trading API code generation only, for auto-generating per-call HTTP header setting, this is not a generic code generator option.</p>

<h3>3. eBay Trading WSDL pruning</h3>

<p>The eBay Trading WSDL is a super big wsdl, more than 4M in size, the generated code is also very big in size, leading to slow compilation in Xcode, while in most cases, your application only needs a few calls in eBay Trading API, fortunately, eBay provides a <a href="http://developer.ebay.com/DevZone/codebase/wsdlpruner/pruner.zip">pruner</a> tool which let you prune the bulky wsdl down to the operations that you want to use. <a href="https://github.com/bulldog2011/PicoEBayTradingClient/tree/master/Examples/HelloeBayTrading/wsdl">here</a> and <a href="https://github.com/bulldog2011/PicoEBayTradingClient/tree/master/Examples/eBayDemoApp/wsdl">here</a> are two wsdl I pruned for demo, the first one only supports <code>geteBayOfficialTime</code> call, and the second only supports <code>getWatchList</code> and <code>getMyeBayBuying</code> calls. You may prune the eBay Trading wsdl according to your real needs before code generation.</p>

<h3>4. Samples</h3>

<p>I&#8217;ve created two samples to demonstrate Pico integration with eBay Trading API, the <a href="https://github.com/bulldog2011/PicoEBayTradingClient/tree/master/Examples/HelloeBayTrading">first one</a> is a hello world like sample, just call eBay Trading <code>geteBayOfficalTime</code> API to show official time on eBay server; the <a href="https://github.com/bulldog2011/PicoEBayTradingClient/tree/master/Examples/eBayDemoApp">second one</a> is a composite sample which calls eBay Finding, Shopping and Trading APIs behind:</p>

<blockquote><ol>
<li>Search items on eBay by keywords by invoking eBay Finding <code>findItemsByKeywords</code> API.</li>
<li>Show detail of an item by invoking eBay Shopping <code>getSingleItem</code> API.</li>
<li>Add item to watch list by invoking eBay Trading <code>addToWatchList</code> API.</li>
<li>View watch list by invoking eBay Trading <code>getMyeBayBuying</code> API.</li>
</ol>
</blockquote>

<p>You may review and study these samples before you create your own Pico and eBay API based app.</p>

<p>To run first sample, you must fill in your <code>eBay AppId</code> and <code>eBay Auth Token</code> in the shared client class <code>EBayTradingServiceClient</code></p>

<p>To run second sample, you must fill in your <code>eBay AppId</code> in three shared client classes: <code>EBayFindingServiceClient</code>, <code>EBayShoppingServiceClient</code> and <code>EBayTradingServiceClient</code>, then fill in your <code>eBay Auth Token</code> in <code>EBayTradingServiceClient</code>, this just looks tedious and silly, I did so since this is just for demo, in real world app, I suggest you to centralize the credential setting in one place.</p>

<p><strong><em>Note</em></strong>, for demo, credentials like eBay AppId and AuthToken are hardcoded in the sample, in real-world application, for security consideration, you need to integrate with eBay <a href="http://developer.ebay.com/DevZone/XML/docs/WebHelp/wwhelp/wwhimpl/common/html/wwhelp.htm?context=eBay_XML_API&amp;file=GettingTokens-Getting_Tokens_for_Applications_with_Multiple_Users.html">Authentication &amp; Authorization</a> flow on your iOS device, and ensure the seurity of user credentials on device.</p>

<h3>5. Regrading Pico Integration</h3>

<p>Basically, the Pico integration with eBay Trading API is similar to Pico integartion with eBay Finding and Shopping API, one difference is eBay Trading API call needs to append a few request parameters(see details <a href="http://developer.ebay.com/DevZone/XML/docs/WebHelp/wwhelp/wwhimpl/common/html/wwhelp.htm?context=eBay_XML_API&amp;file=InvokingWebServices-.html">here</a>) as query string, plese refer to code <a href="https://github.com/bulldog2011/PicoEBayTradingClient/blob/master/Examples/HelloeBayTrading/HelloeBayTrading/EBayTradingServiceClient.m">here</a> to learn how to add request parameters as query sting on Pico client.</p>

<h3>6. Standalone Site for eBay Trading Proxy</h3>

<p>The eBay Trading Proxy has been extracted as a standalone project, hosted <a href="https://github.com/bulldog2011/PicoEBayTradingClient">here</a>, and the corresponding appledoc is hosted <a href="http://bulldog2011.github.com/PicoEBayTradingClient/">here</a>, the appledoc is a useful programming reference. By the way, the doc annotations in wsdl are not only generted into the proxy code, but into the appledoc, assisting your development.</p>

<h3>Final Word</h3>

<p>eBay Trading API is a powerful API, you can use it to build applications such as listing, selling and post-sales management applications, manage user information, and initiate the item purchase flow on eBay. See your next greap iOS app based on Pico and eBay Trading API.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pico Tutoiral 5 - Hello Amazon Product Advertising API]]></title>
    <link href="http://bulldog2011.github.com/blog/2013/03/31/pico-tutoiral-5-hello-amazon-product-advertising-api/"/>
    <updated>2013-03-31T10:09:00+08:00</updated>
    <id>http://bulldog2011.github.com/blog/2013/03/31/pico-tutoiral-5-hello-amazon-product-advertising-api</id>
    <content type="html"><![CDATA[<p>This is the fifth tutorial of Pico tutorial series, in this tutorial, I will show you how to integrate <a href="https://github.com/bulldog2011/pico">Pico</a> with <a href="https://affiliate-program.amazon.com/gp/advertising/api/detail/main.html">Amazon Product Advertising API</a>, if you are not familiar with this API, just have a quick review on its official site, basically, the Product Advertising API provides programmatic access to Amazon&#8217;s product selection and discovery functionality so that developers like you can advertise Amazon products to monetize your website. In this tutorial, I will show you how to customize binding for <a href="https://github.com/bulldog2011/mwsc">mwsc</a> code generation in case the wsdl does not follow convention, for example, the Amazon Product Advertising wsdl uses many anonymous inner types in its schema, without customized binding, the generated code will have many types with same names, leading to compile-time conflict. Also in this tutorial, I will show you how to add custom SOAP header which is required by the authentication of Amazon Product Advertising API.</p>

<!--more-->


<p><strong><em>NOTE</em></strong></p>

<p>Per Amazon:</p>

<blockquote><p>You will not, without our express prior written approval, use any Product Advertising Content on or in connection with any site or application designed or intended for use with a mobile phone or other handheld device.</p></blockquote>


<p>So please consult Amazon for permission before you can use its Product Advertising Content on any iOS devices.</p>

<p>The source of this tutorial is <a href="https://github.com/bulldog2011/pico/tree/master/Examples/AWSECommerce">here</a>.</p>

<!--more-->


<h2>Step 0 - Prerequisite</h2>

<p>I suppose you have already read previous Pico tutorials, at least 1 and 2, and basically you should know:</p>

<blockquote><ul>
<li>The wsdl driven development process supported by Pico.</li>
<li>How to reference Pico as a static library in your project.</li>
<li>Or How to reference Pico Source directly in your project.</li>
</ul>
</blockquote>

<h2>Step 1 - Generate Objective-C Proxy from WSDL</h2>

<p>The WSDL of Amazon Product Advertising API uses many <code>anonymous inner type</code> in its schema, this is regarded as an anti-pattern, <a href="http://www.ibm.com/developerworks/webservices/library/ws-avoid-anonymous-types/?ca=drs-">here</a> is an article on IBM developerWorks which explains what is <code>anonymous inner type</code> and why it shoud be avoided.</p>

<p>By default, the <a href="https://github.com/bulldog2011/mwsc">mwsc</a> code generator will have no problem to generate proxy from the WSDL of Amazon Product Advertising API, but there will be many types with same names, leading to compile-time conflict. JAX-WS/JAXB(upon which mwsc is built) can resolve the <code>anonymous inner type</code> issue, by using custom binding, I have provided the custom binding file for you, see its definition below:</p>

<figure class='code'><figcaption><span>jaxws-bindings.xml </span><a href='https://github.com/bulldog2011/pico/blob/master/Examples/AWSECommerce/CustomBinding/jaxws-bindings.xml'>source </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="o">&lt;</span><span class="nl">jaxws:</span><span class="n">bindings</span> <span class="nl">xmlns:</span><span class="n">xs</span><span class="o">=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema&quot;</span>
</span><span class='line'>                                <span class="nl">xmlns:</span><span class="n">wsdl</span><span class="o">=</span><span class="s">&quot;http://schemas.xmlsoap.org/wsdl/&quot;</span>
</span><span class='line'>                                <span class="nl">xmlns:</span><span class="n">jaxws</span><span class="o">=</span><span class="s">&quot;http://java.sun.com/xml/ns/jaxws&quot;</span>
</span><span class='line'>                                <span class="nl">xmlns:</span><span class="n">jaxb</span><span class="o">=</span><span class="s">&quot;http://java.sun.com/xml/ns/jaxb&quot;</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="nl">jaxws:</span><span class="n">bindings</span>
</span><span class='line'>              <span class="n">node</span><span class="o">=</span><span class="s">&quot;wsdl:definitions/wsdl:types/xs:schema[@targetNamespace=&#39;http://webservices.amazon.com/AWSECommerceService/2011-08-01&#39;]&quot;</span><span class="o">&gt;</span>
</span><span class='line'>          <span class="o">&lt;</span><span class="nl">jaxb:</span><span class="n">bindings</span> <span class="n">node</span><span class="o">=</span><span class="s">&quot;//xs:complexType[@name=&#39;CartAddRequest&#39;]/xs:sequence/xs:element[@name=&#39;Items&#39;]/xs:complexType&quot;</span><span class="o">&gt;</span>
</span><span class='line'>              <span class="o">&lt;</span><span class="nl">jaxb:</span><span class="n">class</span> <span class="n">name</span><span class="o">=</span><span class="s">&quot;CartAddItems&quot;</span><span class="o">/&gt;</span>
</span><span class='line'>          <span class="o">&lt;/</span><span class="nl">jaxb:</span><span class="n">bindings</span><span class="o">&gt;</span>
</span><span class='line'>          <span class="o">&lt;</span><span class="nl">jaxb:</span><span class="n">bindings</span> <span class="n">node</span><span class="o">=</span><span class="s">&quot;//xs:complexType[@name=&#39;CartAddRequest&#39;]/xs:sequence/xs:element[@name=&#39;Items&#39;]/xs:complexType/xs:sequence/xs:element[@name=&#39;Item&#39;]/xs:complexType&quot;</span><span class="o">&gt;</span>
</span><span class='line'>              <span class="o">&lt;</span><span class="nl">jaxb:</span><span class="n">class</span> <span class="n">name</span><span class="o">=</span><span class="s">&quot;CartAddItem&quot;</span><span class="o">/&gt;</span>
</span><span class='line'>          <span class="o">&lt;/</span><span class="nl">jaxb:</span><span class="n">bindings</span><span class="o">&gt;</span>
</span><span class='line'>          <span class="o">&lt;</span><span class="nl">jaxb:</span><span class="n">bindings</span> <span class="n">node</span><span class="o">=</span><span class="s">&quot;//xs:complexType[@name=&#39;CartCreateRequest&#39;]/xs:sequence/xs:element[@name=&#39;Items&#39;]/xs:complexType&quot;</span><span class="o">&gt;</span>
</span><span class='line'>              <span class="o">&lt;</span><span class="nl">jaxb:</span><span class="n">class</span> <span class="n">name</span><span class="o">=</span><span class="s">&quot;CartCreateItems&quot;</span><span class="o">/&gt;</span>
</span><span class='line'>          <span class="o">&lt;/</span><span class="nl">jaxb:</span><span class="n">bindings</span><span class="o">&gt;</span>
</span><span class='line'>          <span class="o">&lt;</span><span class="nl">jaxb:</span><span class="n">bindings</span> <span class="n">node</span><span class="o">=</span><span class="s">&quot;//xs:complexType[@name=&#39;CartCreateRequest&#39;]/xs:sequence/xs:element[@name=&#39;Items&#39;]/xs:complexType/xs:sequence/xs:element[@name=&#39;Item&#39;]/xs:complexType&quot;</span><span class="o">&gt;</span>
</span><span class='line'>              <span class="o">&lt;</span><span class="nl">jaxb:</span><span class="n">class</span> <span class="n">name</span><span class="o">=</span><span class="s">&quot;CartCreateItem&quot;</span><span class="o">/&gt;</span>
</span><span class='line'>          <span class="o">&lt;/</span><span class="nl">jaxb:</span><span class="n">bindings</span><span class="o">&gt;</span>
</span><span class='line'>          <span class="o">&lt;</span><span class="nl">jaxb:</span><span class="n">bindings</span> <span class="n">node</span><span class="o">=</span><span class="s">&quot;//xs:complexType[@name=&#39;CartCreateRequest&#39;]/xs:sequence/xs:element[@name=&#39;Items&#39;]/xs:complexType/xs:sequence/xs:element[@name=&#39;Item&#39;]/xs:complexType/xs:sequence/xs:element[@name=&#39;MetaData&#39;]/xs:complexType&quot;</span><span class="o">&gt;</span>
</span><span class='line'>              <span class="o">&lt;</span><span class="nl">jaxb:</span><span class="n">class</span> <span class="n">name</span><span class="o">=</span><span class="s">&quot;ItemMetaData&quot;</span><span class="o">/&gt;</span>
</span><span class='line'>          <span class="o">&lt;/</span><span class="nl">jaxb:</span><span class="n">bindings</span><span class="o">&gt;</span>
</span><span class='line'>          <span class="o">&lt;</span><span class="nl">jaxb:</span><span class="n">bindings</span> <span class="n">node</span><span class="o">=</span><span class="s">&quot;//xs:complexType[@name=&#39;CartModifyRequest&#39;]/xs:sequence/xs:element[@name=&#39;Items&#39;]/xs:complexType&quot;</span><span class="o">&gt;</span>
</span><span class='line'>              <span class="o">&lt;</span><span class="nl">jaxb:</span><span class="n">class</span> <span class="n">name</span><span class="o">=</span><span class="s">&quot;CartModifyItems&quot;</span><span class="o">/&gt;</span>
</span><span class='line'>          <span class="o">&lt;/</span><span class="nl">jaxb:</span><span class="n">bindings</span><span class="o">&gt;</span>
</span><span class='line'>          <span class="o">&lt;</span><span class="nl">jaxb:</span><span class="n">bindings</span> <span class="n">node</span><span class="o">=</span><span class="s">&quot;//xs:complexType[@name=&#39;CartModifyRequest&#39;]/xs:sequence/xs:element[@name=&#39;Items&#39;]/xs:complexType/xs:sequence/xs:element[@name=&#39;Item&#39;]/xs:complexType&quot;</span><span class="o">&gt;</span>
</span><span class='line'>              <span class="o">&lt;</span><span class="nl">jaxb:</span><span class="n">class</span> <span class="n">name</span><span class="o">=</span><span class="s">&quot;CartModifyItem&quot;</span><span class="o">/&gt;</span>
</span><span class='line'>          <span class="o">&lt;/</span><span class="nl">jaxb:</span><span class="n">bindings</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="o">&lt;/</span><span class="nl">jaxws:</span><span class="n">bindings</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="nl">jaxws:</span><span class="n">bindings</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>I won&#8217;t elaborate on the details of custom binding here, if you are interested, please refer to doc <a href="http://jax-ws.java.net/nonav/customizations/http.java.sun.com.xml.n/element/bindings.html">here</a> and <a href="http://docs.oracle.com/cd/E17802_01/webservices/webservices/docs/2.0/tutorial/doc/JAXBUsing4.html">here</a>. Basically, we need to change the naming of some <code>anonymous inner type</code> to avoid conflict, for example, to change <code>Item</code> in <code>CartAddRequest</code> to <code>CartAddItem</code>, in order to avoid conflict with other <code>Item</code> defined in other places.</p>

<p>Now download <a href="https://github.com/bulldog2011/mwsc">mwsc</a>, etract it into a local folder, copy the custom binding file into the same folder, create a folder called <code>generated</code> in the same folder, then run following command in terminal to generate the proxy:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bin/mwsc -pico -d generated -b jaxws-bindings.xml  http://webservices.amazon.com/AWSECommerceService/AWSECommerceService.wsdl</span></code></pre></td></tr></table></div></figure>


<p>Depends on the network speed, you may need to wait a few moments to let the code generator download the wsdl and generate code, you may also download the wsdl to local and run the code generator with a local wsdl.</p>

<p>The target proxy will be generated in the <code>generated</code> folder you created.</p>

<h2>Step 2 - Create New iOS Project, Add Pico Library and Generated Proxy into Your Project</h2>

<p>Create a new simple iOS single view application named &#8220;HelloAWSECommerce&#8221;, don&#8217;t choose ARC since Pico does not support ARC yet.</p>

<p>In this tutorial, we will reference Pico as a static library, suppose you have downloaded Pico source project from github site, then:</p>

<blockquote><ol>
<li>Drag the Pico xcodeproj into your project,</li>
<li>In the Build Phases of the target,  add <code>libPico.a</code> and <code>libxml2.dylib</code> to &#8220;Link Binary With Libraries&#8221; section.</li>
<li>In the Build Setting of the target, add [your path to Pico source] to &#8220;User Header Search Paths&#8221; setting, choose &#8220;recursive&#8221; seach path.</li>
</ol>
</blockquote>

<p>Build the project to ensure that it can build successfully.</p>

<p>Now drag the proxy generated in step 1 into the project,  choose &#8220;Copy items to destination group&#8217;s folder&#8221; and &#8220;add to targets&#8221; when prompted.</p>

<p>Build the project again to ensure that it can build successfully. <strong><em>Note</em></strong>, you may get a few compiler warnings, say some property setter does not follow cocoa naming convertion, that&#8217;s ok, just ignore them.</p>

<p>The code generation will generate both SOAP and XML based interfaces from the WSDL of Amazon Product Advertising for us,
since we will use SOAP based interface in this tutorial, you may now review the generated Amazon ECommerce service(aka Amazon Product Advertising API) SOAP interface(in the generated <code>client</code> folder) to learn what kinds of functions are provided by Amazon ECommerce service, and what kinds of parameters are needed to call the serivce, the interface is posted below:</p>

<figure class='code'><figcaption><span>AWSECommerceServicePortType_SOAPClient.h </span><a href='https://github.com/bulldog2011/pico/blob/master/Examples/AWSECommerce/AWSECommerce/awsecommerceservice/_2011_08_01/client/AWSECommerceServicePortType_SOAPClient.h'>source </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">// Generated by wsdl compiler for ios/objective-c</span>
</span><span class='line'><span class="c1">// DO NOT CHANGE!</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="cp">#import &lt;Foundation/Foundation.h&gt;</span>
</span><span class='line'><span class="cp">#import &quot;PicoSOAPClient.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;CartAdd.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;ItemLookupResponse.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;CartClearResponse.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;CartClear.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;CartModify.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;CartCreateResponse.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;CartModifyResponse.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;ItemLookup.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;ItemSearchResponse.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;BrowseNodeLookup.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;CartGet.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;CartAddResponse.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;ItemSearch.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;SimilarityLookup.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;CartGetResponse.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;CartCreate.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;SimilarityLookupResponse.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;BrowseNodeLookupResponse.h&quot;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> This class is the SOAP client to the AWSECommerceServicePortType Web Service.</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="k">@interface</span> <span class="nc">AWSECommerceServicePortType_SOAPClient</span> : <span class="nc">PicoSOAPClient</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> public method</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="o">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nl">itemSearch:</span><span class="p">(</span><span class="n">ItemSearch</span> <span class="o">*</span><span class="p">)</span> <span class="n">requestObject</span>
</span><span class='line'>      <span class="nl">success:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">ItemSearchResponse</span> <span class="o">*</span><span class="n">responseObject</span><span class="p">))</span><span class="n">success</span>
</span><span class='line'>      <span class="nl">failure:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">NSError</span> <span class="o">*</span><span class="n">error</span><span class="p">,</span> <span class="kt">id</span><span class="o">&lt;</span><span class="n">PicoBindable</span><span class="o">&gt;</span> <span class="n">soapFault</span><span class="p">))</span><span class="n">failure</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> public method</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">itemLookup:</span><span class="p">(</span><span class="n">ItemLookup</span> <span class="o">*</span><span class="p">)</span> <span class="n">requestObject</span>
</span><span class='line'>      <span class="nl">success:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">ItemLookupResponse</span> <span class="o">*</span><span class="n">responseObject</span><span class="p">))</span><span class="n">success</span>
</span><span class='line'>      <span class="nl">failure:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">NSError</span> <span class="o">*</span><span class="n">error</span><span class="p">,</span> <span class="kt">id</span><span class="o">&lt;</span><span class="n">PicoBindable</span><span class="o">&gt;</span> <span class="n">soapFault</span><span class="p">))</span><span class="n">failure</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> public method</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">browseNodeLookup:</span><span class="p">(</span><span class="n">BrowseNodeLookup</span> <span class="o">*</span><span class="p">)</span> <span class="n">requestObject</span>
</span><span class='line'>      <span class="nl">success:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">BrowseNodeLookupResponse</span> <span class="o">*</span><span class="n">responseObject</span><span class="p">))</span><span class="n">success</span>
</span><span class='line'>      <span class="nl">failure:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">NSError</span> <span class="o">*</span><span class="n">error</span><span class="p">,</span> <span class="kt">id</span><span class="o">&lt;</span><span class="n">PicoBindable</span><span class="o">&gt;</span> <span class="n">soapFault</span><span class="p">))</span><span class="n">failure</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> public method</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">similarityLookup:</span><span class="p">(</span><span class="n">SimilarityLookup</span> <span class="o">*</span><span class="p">)</span> <span class="n">requestObject</span>
</span><span class='line'>      <span class="nl">success:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">SimilarityLookupResponse</span> <span class="o">*</span><span class="n">responseObject</span><span class="p">))</span><span class="n">success</span>
</span><span class='line'>      <span class="nl">failure:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">NSError</span> <span class="o">*</span><span class="n">error</span><span class="p">,</span> <span class="kt">id</span><span class="o">&lt;</span><span class="n">PicoBindable</span><span class="o">&gt;</span> <span class="n">soapFault</span><span class="p">))</span><span class="n">failure</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> public method</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">cartGet:</span><span class="p">(</span><span class="n">CartGet</span> <span class="o">*</span><span class="p">)</span> <span class="n">requestObject</span>
</span><span class='line'>      <span class="nl">success:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">CartGetResponse</span> <span class="o">*</span><span class="n">responseObject</span><span class="p">))</span><span class="n">success</span>
</span><span class='line'>      <span class="nl">failure:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">NSError</span> <span class="o">*</span><span class="n">error</span><span class="p">,</span> <span class="kt">id</span><span class="o">&lt;</span><span class="n">PicoBindable</span><span class="o">&gt;</span> <span class="n">soapFault</span><span class="p">))</span><span class="n">failure</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> public method</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">cartCreate:</span><span class="p">(</span><span class="n">CartCreate</span> <span class="o">*</span><span class="p">)</span> <span class="n">requestObject</span>
</span><span class='line'>      <span class="nl">success:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">CartCreateResponse</span> <span class="o">*</span><span class="n">responseObject</span><span class="p">))</span><span class="n">success</span>
</span><span class='line'>      <span class="nl">failure:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">NSError</span> <span class="o">*</span><span class="n">error</span><span class="p">,</span> <span class="kt">id</span><span class="o">&lt;</span><span class="n">PicoBindable</span><span class="o">&gt;</span> <span class="n">soapFault</span><span class="p">))</span><span class="n">failure</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> public method</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">cartAdd:</span><span class="p">(</span><span class="n">CartAdd</span> <span class="o">*</span><span class="p">)</span> <span class="n">requestObject</span>
</span><span class='line'>      <span class="nl">success:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">CartAddResponse</span> <span class="o">*</span><span class="n">responseObject</span><span class="p">))</span><span class="n">success</span>
</span><span class='line'>      <span class="nl">failure:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">NSError</span> <span class="o">*</span><span class="n">error</span><span class="p">,</span> <span class="kt">id</span><span class="o">&lt;</span><span class="n">PicoBindable</span><span class="o">&gt;</span> <span class="n">soapFault</span><span class="p">))</span><span class="n">failure</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> public method</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">cartModify:</span><span class="p">(</span><span class="n">CartModify</span> <span class="o">*</span><span class="p">)</span> <span class="n">requestObject</span>
</span><span class='line'>      <span class="nl">success:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">CartModifyResponse</span> <span class="o">*</span><span class="n">responseObject</span><span class="p">))</span><span class="n">success</span>
</span><span class='line'>      <span class="nl">failure:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">NSError</span> <span class="o">*</span><span class="n">error</span><span class="p">,</span> <span class="kt">id</span><span class="o">&lt;</span><span class="n">PicoBindable</span><span class="o">&gt;</span> <span class="n">soapFault</span><span class="p">))</span><span class="n">failure</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> public method</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">cartClear:</span><span class="p">(</span><span class="n">CartClear</span> <span class="o">*</span><span class="p">)</span> <span class="n">requestObject</span>
</span><span class='line'>      <span class="nl">success:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">CartClearResponse</span> <span class="o">*</span><span class="n">responseObject</span><span class="p">))</span><span class="n">success</span>
</span><span class='line'>      <span class="nl">failure:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">NSError</span> <span class="o">*</span><span class="n">error</span><span class="p">,</span> <span class="kt">id</span><span class="o">&lt;</span><span class="n">PicoBindable</span><span class="o">&gt;</span> <span class="n">soapFault</span><span class="p">))</span><span class="n">failure</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<p>All the methods in the interface follow same calling paradigm - you call the service with required request object and register success callback(for success handling logic) and failure callback(for error handling logic) using Objective-C block.</p>

<h2>Step 3 - Implement Appliction Logic and UI, Call Proxy to Invoke Web Service as Needed.</h2>

<p>First, create a shared service client as below:</p>

<figure class='code'><figcaption><span>AWSECommerceServiceClient.h </span><a href='https://github.com/bulldog2011/pico/blob/master/Examples/AWSECommerce/AWSECommerce/AWSECommerceServiceClient.h'>source </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &lt;UIKit/UIKit.h&gt;</span>
</span><span class='line'><span class="cp">#import &quot;AWSECommerceServicePortType_SOAPClient.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">extern</span> <span class="n">NSString</span> <span class="o">*</span><span class="k">const</span> <span class="n">AWSAccessKeyId</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">AWSECommerceServiceClient</span> : <span class="nc">AWSECommerceServicePortType_SOAPClient</span>
</span><span class='line'>
</span><span class='line'><span class="k">+</span> <span class="p">(</span><span class="n">AWSECommerceServiceClient</span> <span class="o">*</span><span class="p">)</span><span class="nf">sharedClient</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">authenticateRequest:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">action</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>AWSECommerceServiceClient.m </span><a href='https://github.com/bulldog2011/pico/blob/master/Examples/AWSECommerce/AWSECommerce/AWSECommerceServiceClient.m'>source  </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &quot;AWSECommerceServiceClient.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;AmazonAuthUtils.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;PicoXMLElement.h&quot;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">AWSECommerceServiceClient</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> update url according to your local location, see a list of supported location at the end of the wsdl:</span>
</span><span class='line'><span class="cm"> http://webservices.amazon.com/AWSECommerceService/AWSECommerceService.wsdl</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="c1">//static NSString *const AWSECServiceURLString = @&quot;https://webservices.amazon.cn/onca/soap?Service=AWSECommerceService&quot;;</span>
</span><span class='line'><span class="k">static</span> <span class="n">NSString</span> <span class="o">*</span><span class="k">const</span> <span class="n">AWSECServiceURLString</span> <span class="o">=</span> <span class="s">@&quot;https://webservices.amazon.com/onca/soap?Service=AWSECommerceService&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="k">const</span> <span class="n">AWSAccessKeyId</span> <span class="o">=</span> <span class="s">@&quot;YOUR AWS ACCESS KEY&quot;</span><span class="p">;</span>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="k">const</span> <span class="n">AWSSecureKeyId</span> <span class="o">=</span> <span class="s">@&quot;YOUR AWS SECURE KEY&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">static</span> <span class="n">NSString</span> <span class="o">*</span><span class="k">const</span> <span class="n">AuthHeaderNS</span> <span class="o">=</span> <span class="s">@&quot;http://security.amazonaws.com/doc/2007-01-01/&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">+</span> <span class="p">(</span><span class="n">AWSECommerceServiceClient</span> <span class="o">*</span><span class="p">)</span><span class="nf">sharedClient</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">static</span> <span class="n">AWSECommerceServiceClient</span> <span class="o">*</span><span class="n">_sharedClient</span> <span class="o">=</span> <span class="nb">nil</span><span class="p">;</span>
</span><span class='line'>    <span class="k">static</span> <span class="n">dispatch_once_t</span> <span class="n">onceToken</span><span class="p">;</span>
</span><span class='line'>    <span class="n">dispatch_once</span><span class="p">(</span><span class="o">&amp;</span><span class="n">onceToken</span><span class="p">,</span> <span class="o">^</span><span class="p">{</span>
</span><span class='line'>        <span class="n">_sharedClient</span> <span class="o">=</span> <span class="p">[[</span><span class="n">AWSECommerceServiceClient</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithEndpointURL:</span><span class="p">[</span><span class="n">NSURL</span> <span class="nl">URLWithString:</span><span class="n">AWSECServiceURLString</span><span class="p">]];</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">_sharedClient</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> Authentication of SOAP request</span>
</span><span class='line'><span class="cm"> see details here: http://docs.aws.amazon.com/AWSECommerceService/latest/DG/NotUsingWSSecurity.html</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">authenticateRequest:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">action</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// build timestamp</span>
</span><span class='line'>    <span class="n">NSDateFormatter</span> <span class="o">*</span><span class="n">dataFormatter</span> <span class="o">=</span> <span class="p">[[[</span><span class="n">NSDateFormatter</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">]</span> <span class="n">autorelease</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">dataFormatter</span> <span class="nl">setDateFormat:</span><span class="s">@&quot;yyyy-MM-dd&#39;T&#39;HH:mm:ss&#39;Z&#39;&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">dataFormatter</span> <span class="nl">setTimeZone:</span><span class="p">[</span><span class="n">NSTimeZone</span> <span class="nl">timeZoneWithName:</span><span class="s">@&quot;UTC&quot;</span><span class="p">]];</span>
</span><span class='line'>    <span class="n">NSString</span> <span class="o">*</span><span class="n">timestamp</span> <span class="o">=</span> <span class="p">[</span><span class="n">dataFormatter</span> <span class="nl">stringFromDate:</span><span class="p">[</span><span class="n">NSDate</span> <span class="n">date</span><span class="p">]];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// build signature</span>
</span><span class='line'>    <span class="n">NSString</span> <span class="o">*</span><span class="n">signatureInput</span> <span class="o">=</span> <span class="p">[</span><span class="n">action</span> <span class="nl">stringByAppendingString:</span><span class="n">timestamp</span><span class="p">];</span>
</span><span class='line'>    <span class="n">NSString</span> <span class="o">*</span><span class="n">signature</span> <span class="o">=</span> <span class="p">[</span><span class="n">AmazonAuthUtils</span> <span class="nl">sha256HMac:</span><span class="p">[</span><span class="n">signatureInput</span> <span class="nl">dataUsingEncoding:</span><span class="n">NSUTF8StringEncoding</span><span class="p">]</span> <span class="nl">withKey:</span><span class="n">AWSSecureKeyId</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// add SOAP headers</span>
</span><span class='line'>    <span class="n">self</span><span class="p">.</span><span class="n">customSoapHeaders</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSMutableArray</span> <span class="n">array</span><span class="p">];</span>
</span><span class='line'>    <span class="n">PicoXMLElement</span> <span class="o">*</span><span class="n">accessKeyElement</span> <span class="o">=</span> <span class="p">[[[</span><span class="n">PicoXMLElement</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">]</span> <span class="n">autorelease</span><span class="p">];</span>
</span><span class='line'>    <span class="n">accessKeyElement</span><span class="p">.</span><span class="n">nsUri</span> <span class="o">=</span> <span class="n">AuthHeaderNS</span><span class="p">;</span>
</span><span class='line'>    <span class="n">accessKeyElement</span><span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="s">@&quot;AWSAccessKeyId&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="n">accessKeyElement</span><span class="p">.</span><span class="n">value</span> <span class="o">=</span> <span class="n">AWSAccessKeyId</span><span class="p">;</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">customSoapHeaders</span> <span class="nl">addObject:</span><span class="n">accessKeyElement</span><span class="p">];</span>
</span><span class='line'>    <span class="n">PicoXMLElement</span> <span class="o">*</span><span class="n">timestampElement</span> <span class="o">=</span> <span class="p">[[[</span><span class="n">PicoXMLElement</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">]</span> <span class="n">autorelease</span><span class="p">];</span>
</span><span class='line'>    <span class="n">timestampElement</span><span class="p">.</span><span class="n">nsUri</span> <span class="o">=</span> <span class="n">AuthHeaderNS</span><span class="p">;</span>
</span><span class='line'>    <span class="n">timestampElement</span><span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="s">@&quot;Timestamp&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="n">timestampElement</span><span class="p">.</span><span class="n">value</span> <span class="o">=</span> <span class="n">timestamp</span><span class="p">;</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">customSoapHeaders</span> <span class="nl">addObject:</span><span class="n">timestampElement</span><span class="p">];</span>
</span><span class='line'>    <span class="n">PicoXMLElement</span> <span class="o">*</span><span class="n">signatureElement</span> <span class="o">=</span> <span class="p">[[[</span><span class="n">PicoXMLElement</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">]</span> <span class="n">autorelease</span><span class="p">];</span>
</span><span class='line'>    <span class="n">signatureElement</span><span class="p">.</span><span class="n">nsUri</span> <span class="o">=</span> <span class="n">AuthHeaderNS</span><span class="p">;</span>
</span><span class='line'>    <span class="n">signatureElement</span><span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="s">@&quot;Signature&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="n">signatureElement</span><span class="p">.</span><span class="n">value</span> <span class="o">=</span> <span class="n">signature</span><span class="p">;</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">customSoapHeaders</span> <span class="nl">addObject:</span><span class="n">signatureElement</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Let me give more comments:</p>

<blockquote><ol>
<li>Amazon Product Advertising API requires per-call request authentication, see details <a href="http://docs.aws.amazon.com/AWSECommerceService/latest/DG/NotUsingWSSecurity.html">here</a>, the authentication logic is implemented in the <code>(void)authenticateRequest:(NSString *)action</code> method.</li>
<li>To make the authentication work, you need to fill in your <code>AWSAccessKeyId</code> and <code>AWSSecureKeyId</code> in the shared client, if you are a registered Amazon Product Advertising API developer, you can get these keys from your account on Amazon developer site.</li>
<li>The authentication info is added in the SOAP request as SOAP header, to add SOAP header, we use <code>PicoXMLElement</code>(XML helper class provided in Pico) to build header element, then add the header element one by one into the <code>customSoapHeader</code> property(which is of type <code>NSMuatableArray</code>) of the client, for example: <code>[self.customSoapHeaders addObject:signatureElement]</code>, at runtime, Pico will add these elements to the SOAP request header.</li>
<li>The authentication needs to be done on per-call basis, means everytime you call an Amazon ECommerce service, you need to authenticate the request before the service call, see sample later.</li>
<li>The authentication relies on an utility class called <code>AmazonAuthUtils</code>, copy them from <a href="https://github.com/bulldog2011/pico/blob/master/Examples/AWSECommerce/AWSECommerce/AmazonAuthUtils.h">here</a> and <a href="https://github.com/bulldog2011/pico/blob/master/Examples/AWSECommerce/AWSECommerce/AmazonAuthUtils.m">here</a>.</li>
</ol>
</blockquote>

<p>Now the UI part, we will search one book from Amazon by keywords, since this is a hello world like sample, we just need a UITextField for keyword input and UIButton to trigger Amazon search by invoking method <code>searchButtonPressed</code> which will indirectly call Amazon ECommerce <code>itemSearch</code> API through the proxy, fairly simple, see definition in header file <a href="https://github.com/bulldog2011/pico/blob/master/Examples/AWSECommerce/AWSECommerce/ViewController.h">ViewController.h</a> and instantiation in implementation file <a href="https://github.com/bulldog2011/pico/blob/master/Examples/AWSECommerce/AWSECommerce/ViewController.m">ViewController.m</a>.</p>

<p>Now implement the <code>searchButtonPressed</code> method by invoking service as below:</p>

<figure class='code'><figcaption><span>ViewController.m </span><a href='https://github.com/bulldog2011/pico/blob/master/Examples/AWSECommerce/AWSECommerce/ViewController.m'>source  </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &quot;ViewController.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;AWSECommerceServiceClient.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;CommonTypes.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;Toast+UIView.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;SOAP11Fault.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">searchButtonPressed:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">sender</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// Hide the keyboard.</span>
</span><span class='line'>    <span class="p">[</span><span class="n">_searchText</span> <span class="n">resignFirstResponder</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">_searchText</span><span class="p">.</span><span class="n">text</span><span class="p">.</span><span class="n">length</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// start progress activity</span>
</span><span class='line'>        <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="n">makeToastActivity</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// get shared client</span>
</span><span class='line'>        <span class="n">AWSECommerceServiceClient</span> <span class="o">*</span><span class="n">client</span> <span class="o">=</span> <span class="p">[</span><span class="n">AWSECommerceServiceClient</span> <span class="n">sharedClient</span><span class="p">];</span>
</span><span class='line'>        <span class="n">client</span><span class="p">.</span><span class="n">debug</span> <span class="o">=</span> <span class="n">YES</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// build request, see details here:</span>
</span><span class='line'>        <span class="n">ItemSearch</span> <span class="o">*</span><span class="n">request</span> <span class="o">=</span> <span class="p">[[[</span><span class="n">ItemSearch</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">]</span> <span class="n">autorelease</span><span class="p">];</span>
</span><span class='line'>        <span class="n">request</span><span class="p">.</span><span class="n">associateTag</span> <span class="o">=</span> <span class="s">@&quot;tag&quot;</span><span class="p">;</span> <span class="c1">// seems any tag is ok</span>
</span><span class='line'>        <span class="n">request</span><span class="p">.</span><span class="n">shared</span> <span class="o">=</span> <span class="p">[[[</span><span class="n">ItemSearchRequest</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">]</span> <span class="n">autorelease</span><span class="p">];</span>
</span><span class='line'>        <span class="n">request</span><span class="p">.</span><span class="n">shared</span><span class="p">.</span><span class="n">searchIndex</span> <span class="o">=</span> <span class="s">@&quot;Books&quot;</span><span class="p">;</span>
</span><span class='line'>        <span class="n">request</span><span class="p">.</span><span class="n">shared</span><span class="p">.</span><span class="n">responseGroup</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSMutableArray</span> <span class="nl">arrayWithObjects:</span><span class="s">@&quot;Images&quot;</span><span class="p">,</span> <span class="s">@&quot;Small&quot;</span><span class="p">,</span> <span class="nb">nil</span><span class="p">];</span>
</span><span class='line'>        <span class="n">ItemSearchRequest</span> <span class="o">*</span><span class="n">itemSearchRequest</span> <span class="o">=</span> <span class="p">[[[</span><span class="n">ItemSearchRequest</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">]</span> <span class="n">autorelease</span><span class="p">];</span>
</span><span class='line'>        <span class="n">itemSearchRequest</span><span class="p">.</span><span class="n">title</span> <span class="o">=</span> <span class="n">_searchText</span><span class="p">.</span><span class="n">text</span><span class="p">;</span>
</span><span class='line'>        <span class="n">request</span><span class="p">.</span><span class="n">request</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSMutableArray</span> <span class="nl">arrayWithObject:</span><span class="n">itemSearchRequest</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// authenticate the request</span>
</span><span class='line'>        <span class="c1">// http://docs.aws.amazon.com/AWSECommerceService/latest/DG/NotUsingWSSecurity.html</span>
</span><span class='line'>        <span class="p">[</span><span class="n">client</span> <span class="nl">authenticateRequest:</span><span class="s">@&quot;ItemSearch&quot;</span><span class="p">];</span>
</span><span class='line'>        <span class="p">[</span><span class="n">client</span> <span class="nl">itemSearch:</span><span class="n">request</span> <span class="nl">success:</span><span class="o">^</span><span class="p">(</span><span class="n">ItemSearchResponse</span> <span class="o">*</span><span class="n">responseObject</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="c1">// stop progress activity</span>
</span><span class='line'>            <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="n">hideToastActivity</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">// success handling logic</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="n">responseObject</span><span class="p">.</span><span class="n">items</span><span class="p">.</span><span class="n">count</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">Items</span> <span class="o">*</span><span class="n">items</span> <span class="o">=</span> <span class="p">[</span><span class="n">responseObject</span><span class="p">.</span><span class="n">items</span> <span class="nl">objectAtIndex:</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="n">items</span><span class="p">.</span><span class="n">item</span><span class="p">.</span><span class="n">count</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                    <span class="n">Item</span> <span class="o">*</span><span class="n">item</span> <span class="o">=</span> <span class="p">[</span><span class="n">items</span><span class="p">.</span><span class="n">item</span> <span class="nl">objectAtIndex:</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>                    <span class="c1">// start image downloading progress activity</span>
</span><span class='line'>                    <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="n">makeToastActivity</span><span class="p">];</span>
</span><span class='line'>                    <span class="c1">// get gallery image</span>
</span><span class='line'>                    <span class="n">NSURL</span> <span class="o">*</span><span class="n">imageURL</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSURL</span> <span class="nl">URLWithString:</span><span class="n">item</span><span class="p">.</span><span class="n">smallImage</span><span class="p">.</span><span class="n">url</span><span class="p">];</span>
</span><span class='line'>                    <span class="n">NSData</span> <span class="o">*</span><span class="n">imageData</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSData</span> <span class="nl">dataWithContentsOfURL:</span><span class="n">imageURL</span><span class="p">];</span>
</span><span class='line'>                    <span class="c1">// stop progress activity</span>
</span><span class='line'>                    <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="n">hideToastActivity</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>                    <span class="n">UIImage</span> <span class="o">*</span><span class="n">image</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIImage</span> <span class="nl">imageWithData:</span><span class="n">imageData</span><span class="p">];</span>
</span><span class='line'>                    <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">makeToast:</span><span class="n">item</span><span class="p">.</span><span class="n">itemAttributes</span><span class="p">.</span><span class="n">title</span> <span class="nl">duration:</span><span class="mf">3.0</span> <span class="nl">position:</span><span class="s">@&quot;center&quot;</span> <span class="nl">title:</span><span class="s">@&quot;Success&quot;</span> <span class="nl">image:</span><span class="n">image</span><span class="p">];</span>
</span><span class='line'>                <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>                    <span class="c1">// no result</span>
</span><span class='line'>                    <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">makeToast:</span><span class="s">@&quot;No result&quot;</span> <span class="nl">duration:</span><span class="mf">3.0</span> <span class="nl">position:</span><span class="s">@&quot;center&quot;</span><span class="p">];</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>                <span class="c1">// no result</span>
</span><span class='line'>                <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">makeToast:</span><span class="s">@&quot;No result&quot;</span> <span class="nl">duration:</span><span class="mf">3.0</span> <span class="nl">position:</span><span class="s">@&quot;center&quot;</span><span class="p">];</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="c1">// TODO</span>
</span><span class='line'>        <span class="p">}</span> <span class="nl">failure:</span><span class="o">^</span><span class="p">(</span><span class="n">NSError</span> <span class="o">*</span><span class="n">error</span><span class="p">,</span> <span class="kt">id</span><span class="o">&lt;</span><span class="n">PicoBindable</span><span class="o">&gt;</span> <span class="n">soapFault</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="c1">// stop progress activity</span>
</span><span class='line'>            <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="n">hideToastActivity</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">// error handling logic</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="n">error</span><span class="p">)</span> <span class="p">{</span> <span class="c1">// http or parsing error</span>
</span><span class='line'>                <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">makeToast:</span><span class="p">[</span><span class="n">error</span> <span class="n">localizedDescription</span><span class="p">]</span> <span class="nl">duration:</span><span class="mf">3.0</span> <span class="nl">position:</span><span class="s">@&quot;center&quot;</span> <span class="nl">title:</span><span class="s">@&quot;Error&quot;</span><span class="p">];</span>
</span><span class='line'>            <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">soapFault</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">SOAP11Fault</span> <span class="o">*</span><span class="n">soap11Fault</span> <span class="o">=</span> <span class="p">(</span><span class="n">SOAP11Fault</span> <span class="o">*</span><span class="p">)</span><span class="n">soapFault</span><span class="p">;</span>
</span><span class='line'>                <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">makeToast:</span><span class="n">soap11Fault</span><span class="p">.</span><span class="n">faultstring</span> <span class="nl">duration:</span><span class="mf">3.0</span> <span class="nl">position:</span><span class="s">@&quot;center&quot;</span> <span class="nl">title:</span><span class="s">@&quot;SOAP Fault&quot;</span><span class="p">];</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}];</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>More comments to the serivce call code:</p>

<blockquote><ol>
<li>I&#8217;ve added comments in the code so the whole service call flow should be easy to understand.</li>
<li>Before service call, the request must be authenticated by calling the <code>authenticateRequest</code> method, such as <code>[client authenticateRequest:@"ItemSearch"];</code>, <code>ItemSearch</code> is the target action or API name.</li>
<li>In the success handling logic, we show the title and the image of the returned item, for demo, the image is downloaded synchronously, but in practice, you should download image asynchronously in order not to block main UI.</li>
<li>In failure handling logic, we need to check both a <code>NSError</code>(indicating http or parsing error) and a <code>SOAPFault</code>(indicating server side returned error), then handle them accordingly.</li>
<li>Amazon ECommerce service supports response resident error(RRE), so even we get success response, we still need to check response for resident error, in the demo code above, I omitted response resident error checking for abbreviation, but in practice, you should check response resident error to make your app robust.</li>
<li>The generated code provides type hint as code comments, if you are confused with the type of a property, just consult the corresponding header file, for example, the <code>responseGroup</code> property of <code>ItemSearchRequest</code> type is of type <code>NSMuatableArray</code>, what&#8217;s the actual entry type? By checking code comments in the <code>ItemSearchRequest.h</code> file, you will find the entry type is <code>NSString</code>, like below:</li>
</ol>
</blockquote>

<figure class='code'><figcaption><span>ItemSearchRequest.h </span><a href='https://github.com/bulldog2011/pico/blob/master/Examples/AWSECommerce/AWSECommerce/awsecommerceservice/_2011_08_01/ItemSearchRequest.h'>source  </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm">(public property)</span>
</span><span class='line'><span class="cm">entry type : NSString, wrapper for primitive string</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span> <span class="n">retain</span><span class="p">)</span> <span class="n">NSMutableArray</span> <span class="o">*</span><span class="n">responseGroup</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>At last, please don&#8217;t forget to include the shared client and SOAP related header files, it&#8217;s a best practice to include the generated CommonTypes.h file which can free you from writing many import statements required by request building and response handling.</p>

<h2>Final Step - Run the Demo</h2>

<p>Let&#8217;s run the demo in iPhone simulator, see a screen shot below:</p>

<p><img class="center" src="http://bulldog2011.github.com/images/pico/tutorial05/screen_shot1.png" width="300" height="500"></p>

<p>and the debug output:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>2013-03-31 12:33:14.912 HelloAWSECommerce[2604:c07] Sending request to : https://webservices.amazon.com/onca/soap?Service=AWSECommerceService
</span><span class='line'>2013-03-31 12:33:14.913 HelloAWSECommerce[2604:c07] Request message:
</span><span class='line'>2013-03-31 12:33:14.913 HelloAWSECommerce[2604:c07] &lt;?xml version="1.0" encoding="UTF-8" ?>
</span><span class='line'>&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://webservices.amazon.com/AWSECommerceService/2011-08-01">
</span><span class='line'>  &lt;soapenv:Header xmlns:ns0="http://security.amazonaws.com/doc/2007-01-01/">
</span><span class='line'>      &lt;ns0:AWSAccessKeyId>***************&lt;/ns0:AWSAccessKeyId>
</span><span class='line'>      &lt;ns0:Timestamp>2013-03-31T04:33:14Z&lt;/ns0:Timestamp>
</span><span class='line'>      &lt;ns0:Signature>***************&lt;/ns0:Signature>
</span><span class='line'>  &lt;/soapenv:Header>
</span><span class='line'>  &lt;soapenv:Body>
</span><span class='line'>      &lt;ItemSearch>
</span><span class='line'>          &lt;Request>
</span><span class='line'>              &lt;Title>Ios programming&lt;/Title>
</span><span class='line'>          &lt;/Request>
</span><span class='line'>          &lt;Shared>
</span><span class='line'>              &lt;ResponseGroup>Images&lt;/ResponseGroup>
</span><span class='line'>              &lt;ResponseGroup>Small&lt;/ResponseGroup>
</span><span class='line'>              &lt;SearchIndex>Books&lt;/SearchIndex>
</span><span class='line'>          &lt;/Shared>
</span><span class='line'>          &lt;AssociateTag>tag&lt;/AssociateTag>
</span><span class='line'>      &lt;/ItemSearch>
</span><span class='line'>  &lt;/soapenv:Body>
</span><span class='line'>&lt;/soapenv:Envelope>
</span><span class='line'>2013-03-31 12:33:14.913 HelloAWSECommerce[2604:c07] Request HTTP Headers : 
</span><span class='line'>{
</span><span class='line'>    Accept = "text/xml";
</span><span class='line'>    "Accept-Language" = "en, fr, de, ja, nl, it, es, pt, pt-PT, da, fi, nb, sv, ko, zh-Hans, zh-Hant, ru, pl, tr, uk, ar, hr, cs, el, he, ro, sk, th, id, ms, en-GB, ca, hu, vi, en-us;q=0.8";
</span><span class='line'>    "Content-Type" = "text/xml";
</span><span class='line'>    SOAPAction = "http://soap.amazon.com/ItemSearch";
</span><span class='line'>    "User-Agent" = "HelloAWSECommerce/1.0 (iPhone Simulator; iOS 6.0; Scale/1.00)";
</span><span class='line'>}
</span><span class='line'>2013-03-31 12:33:16.963 HelloAWSECommerce[2604:4533] Response HTTP status : 
</span><span class='line'>200
</span><span class='line'>2013-03-31 12:33:16.963 HelloAWSECommerce[2604:4533] Response HTTP headers : 
</span><span class='line'>{
</span><span class='line'>    "Content-Encoding" = gzip;
</span><span class='line'>    "Content-Type" = "text/xml;charset=UTF-8";
</span><span class='line'>    Date = "Sun, 31 Mar 2013 04:33:29 GMT";
</span><span class='line'>    Server = Server;
</span><span class='line'>    "Transfer-Encoding" = Identity;
</span><span class='line'>    Vary = "Accept-Encoding,User-Agent";
</span><span class='line'>    nnCoection = close;
</span><span class='line'>}
</span><span class='line'>2013-03-31 12:33:16.964 HelloAWSECommerce[2604:3e67] Response message : 
</span><span class='line'>2013-03-31 12:33:16.964 HelloAWSECommerce[2604:3e67] &lt;?xml version="1.0" ?>&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">&lt;soapenv:Body>&lt;ItemSearchResponse xmlns="http://webservices.amazon.com/AWSECommerceService/2011-08-01">&lt;OperationRequest>&lt;HTTPHeaders>&lt;Header Name="UserAgent" Value="HelloAWSECommerce/1.0 (iPhone Simulator; iOS 6.0; Scale/1.00)">&lt;/Header>&lt;/HTTPHeaders>&lt;RequestId>6d6556d8-ec6f-4d8b-8461-bc25398d1244&lt;/RequestId>&lt;Arguments>&lt;Argument Name="Service" Value="AWSECommerceService">&lt;/Argument>&lt;/Arguments>&lt;RequestProcessingTime>0.0923510000000000&lt;/RequestProcessingTime>&lt;/OperationRequest>&lt;Items>&lt;Request>&lt;IsValid>True&lt;/IsValid>&lt;ItemSearchRequest>&lt;ResponseGroup>Images&lt;/ResponseGroup>&lt;ResponseGroup>Small&lt;/ResponseGroup>&lt;SearchIndex>Books&lt;/SearchIndex>&lt;Title>Ios programming&lt;/Title>&lt;/ItemSearchRequest>&lt;/Request>&lt;TotalResults>113&lt;/TotalResults>&lt;TotalPages>12&lt;/TotalPages>&lt;MoreSearchResultsUrl>http://www.amazon.com/gp/redirect.html?camp=2025&amp;creative=386001&amp;location=http%3A%2F%2Fwww.amazon.com%2Fgp%2Fsearch%3Fkeywords%3DIos%2Bprogramming%26url%3Dsearch-alias%253Dstripbooks&amp;linkCode=sp1&amp;tag=tag&amp;SubscriptionId=AKIAIEKQPISXI6IPHDFQ&lt;/MoreSearchResultsUrl>&lt;Item>&lt;ASIN>0321821521&lt;/ASIN>&lt;DetailPageURL>http://www.amazon.com/iOS-Programming-Ranch-Edition-Guides/dp/0321821521%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D165953%26creativeASIN%3D0321821521&lt;/DetailPageURL>&lt;ItemLinks>&lt;ItemLink>&lt;Description>Technical Details&lt;/Description>&lt;URL>http://www.amazon.com/iOS-Programming-Ranch-Edition-Guides/dp/tech-data/0321821521%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0321821521&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Baby Registry&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/baby/add-item.html%3Fasin.0%3D0321821521%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0321821521&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Wedding Registry&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/wedding/add-item.html%3Fasin.0%3D0321821521%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0321821521&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Wishlist&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/wishlist/add-item.html%3Fasin.0%3D0321821521%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0321821521&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Tell A Friend&lt;/Description>&lt;URL>http://www.amazon.com/gp/pdp/taf/0321821521%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0321821521&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>All Customer Reviews&lt;/Description>&lt;URL>http://www.amazon.com/review/product/0321821521%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0321821521&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>All Offers&lt;/Description>&lt;URL>http://www.amazon.com/gp/offer-listing/0321821521%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0321821521&lt;/URL>&lt;/ItemLink>&lt;/ItemLinks>&lt;SmallImage>&lt;URL>http://ecx.images-amazon.com/images/I/41ybikkCyLL._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">52&lt;/Width>&lt;/SmallImage>&lt;MediumImage>&lt;URL>http://ecx.images-amazon.com/images/I/41ybikkCyLL._SL160_.jpg&lt;/URL>&lt;Height Units="pixels">160&lt;/Height>&lt;Width Units="pixels">112&lt;/Width>&lt;/MediumImage>&lt;LargeImage>&lt;URL>http://ecx.images-amazon.com/images/I/41ybikkCyLL.jpg&lt;/URL>&lt;Height Units="pixels">500&lt;/Height>&lt;Width Units="pixels">349&lt;/Width>&lt;/LargeImage>&lt;ImageSets>&lt;ImageSet Category="primary">&lt;SwatchImage>&lt;URL>http://ecx.images-amazon.com/images/I/41ybikkCyLL._SL30_.jpg&lt;/URL>&lt;Height Units="pixels">30&lt;/Height>&lt;Width Units="pixels">21&lt;/Width>&lt;/SwatchImage>&lt;SmallImage>&lt;URL>http://ecx.images-amazon.com/images/I/41ybikkCyLL._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">52&lt;/Width>&lt;/SmallImage>&lt;ThumbnailImage>&lt;URL>http://ecx.images-amazon.com/images/I/41ybikkCyLL._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">52&lt;/Width>&lt;/ThumbnailImage>&lt;TinyImage>&lt;URL>http://ecx.images-amazon.com/images/I/41ybikkCyLL._SL110_.jpg&lt;/URL>&lt;Height Units="pixels">110&lt;/Height>&lt;Width Units="pixels">77&lt;/Width>&lt;/TinyImage>&lt;MediumImage>&lt;URL>http://ecx.images-amazon.com/images/I/41ybikkCyLL._SL160_.jpg&lt;/URL>&lt;Height Units="pixels">160&lt;/Height>&lt;Width Units="pixels">112&lt;/Width>&lt;/MediumImage>&lt;LargeImage>&lt;URL>http://ecx.images-amazon.com/images/I/41ybikkCyLL.jpg&lt;/URL>&lt;Height Units="pixels">500&lt;/Height>&lt;Width Units="pixels">349&lt;/Width>&lt;/LargeImage>&lt;/ImageSet>&lt;/ImageSets>&lt;ItemAttributes>&lt;Author>Joe Conway&lt;/Author>&lt;Author>Aaron Hillegass&lt;/Author>&lt;Manufacturer>Big Nerd Ranch Guides&lt;/Manufacturer>&lt;ProductGroup>Book&lt;/ProductGroup>&lt;Title>iOS Programming: The Big Nerd Ranch Guide (3rd Edition) (Big Nerd Ranch Guides)&lt;/Title>&lt;/ItemAttributes>&lt;/Item>&lt;Item>&lt;ASIN>1449342752&lt;/ASIN>&lt;DetailPageURL>http://www.amazon.com/iOS-Programming-Cookbook-Vandad-Nahavandipoor/dp/1449342752%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D165953%26creativeASIN%3D1449342752&lt;/DetailPageURL>&lt;ItemLinks>&lt;ItemLink>&lt;Description>Technical Details&lt;/Description>&lt;URL>http://www.amazon.com/iOS-Programming-Cookbook-Vandad-Nahavandipoor/dp/tech-data/1449342752%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1449342752&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Baby Registry&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/baby/add-item.html%3Fasin.0%3D1449342752%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1449342752&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Wedding Registry&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/wedding/add-item.html%3Fasin.0%3D1449342752%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1449342752&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Wishlist&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/wishlist/add-item.html%3Fasin.0%3D1449342752%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1449342752&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Tell A Friend&lt;/Description>&lt;URL>http://www.amazon.com/gp/pdp/taf/1449342752%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1449342752&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>All Customer Reviews&lt;/Description>&lt;URL>http://www.amazon.com/review/product/1449342752%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1449342752&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>All Offers&lt;/Description>&lt;URL>http://www.amazon.com/gp/offer-listing/1449342752%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1449342752&lt;/URL>&lt;/ItemLink>&lt;/ItemLinks>&lt;SmallImage>&lt;URL>http://ecx.images-amazon.com/images/I/51esysk15lL._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">57&lt;/Width>&lt;/SmallImage>&lt;MediumImage>&lt;URL>http://ecx.images-amazon.com/images/I/51esysk15lL._SL160_.jpg&lt;/URL>&lt;Height Units="pixels">160&lt;/Height>&lt;Width Units="pixels">122&lt;/Width>&lt;/MediumImage>&lt;LargeImage>&lt;URL>http://ecx.images-amazon.com/images/I/51esysk15lL.jpg&lt;/URL>&lt;Height Units="pixels">500&lt;/Height>&lt;Width Units="pixels">381&lt;/Width>&lt;/LargeImage>&lt;ImageSets>&lt;ImageSet Category="primary">&lt;SwatchImage>&lt;URL>http://ecx.images-amazon.com/images/I/51esysk15lL._SL30_.jpg&lt;/URL>&lt;Height Units="pixels">30&lt;/Height>&lt;Width Units="pixels">23&lt;/Width>&lt;/SwatchImage>&lt;SmallImage>&lt;URL>http://ecx.images-amazon.com/images/I/51esysk15lL._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">57&lt;/Width>&lt;/SmallImage>&lt;ThumbnailImage>&lt;URL>http://ecx.images-amazon.com/images/I/51esysk15lL._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">57&lt;/Width>&lt;/ThumbnailImage>&lt;TinyImage>&lt;URL>http://ecx.images-amazon.com/images/I/51esysk15lL._SL110_.jpg&lt;/URL>&lt;Height Units="pixels">110&lt;/Height>&lt;Width Units="pixels">84&lt;/Width>&lt;/TinyImage>&lt;MediumImage>&lt;URL>http://ecx.images-amazon.com/images/I/51esysk15lL._SL160_.jpg&lt;/URL>&lt;Height Units="pixels">160&lt;/Height>&lt;Width Units="pixels">122&lt;/Width>&lt;/MediumImage>&lt;LargeImage>&lt;URL>http://ecx.images-amazon.com/images/I/51esysk15lL.jpg&lt;/URL>&lt;Height Units="pixels">500&lt;/Height>&lt;Width Units="pixels">381&lt;/Width>&lt;/LargeImage>&lt;/ImageSet>&lt;ImageSet Category="variant">&lt;SwatchImage>&lt;URL>http://ecx.images-amazon.com/images/I/51m-eUUQZkL._SL30_.jpg&lt;/URL>&lt;Height Units="pixels">30&lt;/Height>&lt;Width Units="pixels">23&lt;/Width>&lt;/SwatchImage>&lt;SmallImage>&lt;URL>http://ecx.images-amazon.com/images/I/51m-eUUQZkL._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">57&lt;/Width>&lt;/SmallImage>&lt;ThumbnailImage>&lt;URL>http://ecx.images-amazon.com/images/I/51m-eUUQZkL._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">57&lt;/Width>&lt;/ThumbnailImage>&lt;TinyImage>&lt;URL>http://ecx.images-amazon.com/images/I/51m-eUUQZkL._SL110_.jpg&lt;/URL>&lt;Height Units="pixels">110&lt;/Height>&lt;Width Units="pixels">84&lt;/Width>&lt;/TinyImage>&lt;MediumImage>&lt;URL>http://ecx.images-amazon.com/images/I/51m-eUUQZkL._SL160_.jpg&lt;/URL>&lt;Height Units="pixels">160&lt;/Height>&lt;Width Units="pixels">122&lt;/Width>&lt;/MediumImage>&lt;LargeImage>&lt;URL>http://ecx.images-amazon.com/images/I/51m-eUUQZkL.jpg&lt;/URL>&lt;Height Units="pixels">500&lt;/Height>&lt;Width Units="pixels">381&lt;/Width>&lt;/LargeImage>&lt;/ImageSet>&lt;/ImageSets>&lt;ItemAttributes>&lt;Author>Vandad Nahavandipoor&lt;/Author>&lt;Manufacturer>O'Reilly Media&lt;/Manufacturer>&lt;ProductGroup>Book&lt;/ProductGroup>&lt;Title>iOS 6 Programming Cookbook&lt;/Title>&lt;/ItemAttributes>&lt;/Item>&lt;Item>&lt;ASIN>1449365760&lt;/ASIN>&lt;DetailPageURL>http://www.amazon.com/Programming-iOS-6-Matt-Neuburg/dp/1449365760%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D165953%26creativeASIN%3D1449365760&lt;/DetailPageURL>&lt;ItemLinks>&lt;ItemLink>&lt;Description>Technical Details&lt;/Description>&lt;URL>http://www.amazon.com/Programming-iOS-6-Matt-Neuburg/dp/tech-data/1449365760%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1449365760&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Baby Registry&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/baby/add-item.html%3Fasin.0%3D1449365760%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1449365760&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Wedding Registry&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/wedding/add-item.html%3Fasin.0%3D1449365760%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1449365760&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Wishlist&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/wishlist/add-item.html%3Fasin.0%3D1449365760%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1449365760&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Tell A Friend&lt;/Description>&lt;URL>http://www.amazon.com/gp/pdp/taf/1449365760%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1449365760&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>All Customer Reviews&lt;/Description>&lt;URL>http://www.amazon.com/review/product/1449365760%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1449365760&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>All Offers&lt;/Description>&lt;URL>http://www.amazon.com/gp/offer-listing/1449365760%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1449365760&lt;/URL>&lt;/ItemLink>&lt;/ItemLinks>&lt;SmallImage>&lt;URL>http://ecx.images-amazon.com/images/I/51ZCvz9cG8L._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">57&lt;/Width>&lt;/SmallImage>&lt;MediumImage>&lt;URL>http://ecx.images-amazon.com/images/I/51ZCvz9cG8L._SL160_.jpg&lt;/URL>&lt;Height Units="pixels">160&lt;/Height>&lt;Width Units="pixels">122&lt;/Width>&lt;/MediumImage>&lt;LargeImage>&lt;URL>http://ecx.images-amazon.com/images/I/51ZCvz9cG8L.jpg&lt;/URL>&lt;Height Units="pixels">500&lt;/Height>&lt;Width Units="pixels">381&lt;/Width>&lt;/LargeImage>&lt;ImageSets>&lt;ImageSet Category="primary">&lt;SwatchImage>&lt;URL>http://ecx.images-amazon.com/images/I/51ZCvz9cG8L._SL30_.jpg&lt;/URL>&lt;Height Units="pixels">30&lt;/Height>&lt;Width Units="pixels">23&lt;/Width>&lt;/SwatchImage>&lt;SmallImage>&lt;URL>http://ecx.images-amazon.com/images/I/51ZCvz9cG8L._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">57&lt;/Width>&lt;/SmallImage>&lt;ThumbnailImage>&lt;URL>http://ecx.images-amazon.com/images/I/51ZCvz9cG8L._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">57&lt;/Width>&lt;/ThumbnailImage>&lt;TinyImage>&lt;URL>http://ecx.images-amazon.com/images/I/51ZCvz9cG8L._SL110_.jpg&lt;/URL>&lt;Height Units="pixels">110&lt;/Height>&lt;Width Units="pixels">84&lt;/Width>&lt;/TinyImage>&lt;MediumImage>&lt;URL>http://ecx.images-amazon.com/images/I/51ZCvz9cG8L._SL160_.jpg&lt;/URL>&lt;Height Units="pixels">160&lt;/Height>&lt;Width Units="pixels">122&lt;/Width>&lt;/MediumImage>&lt;LargeImage>&lt;URL>http://ecx.images-amazon.com/images/I/51ZCvz9cG8L.jpg&lt;/URL>&lt;Height Units="pixels">500&lt;/Height>&lt;Width Units="pixels">381&lt;/Width>&lt;/LargeImage>&lt;/ImageSet>&lt;/ImageSets>&lt;ItemAttributes>&lt;Author>Matt Neuburg&lt;/Author>&lt;Manufacturer>O'Reilly Media&lt;/Manufacturer>&lt;ProductGroup>Book&lt;/ProductGroup>&lt;Title>Programming iOS 6&lt;/Title>&lt;/ItemAttributes>&lt;/Item>&lt;Item>&lt;ASIN>1118449959&lt;/ASIN>&lt;DetailPageURL>http://www.amazon.com/iOS-Programming-Pushing-Limits-Application/dp/1118449959%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D165953%26creativeASIN%3D1118449959&lt;/DetailPageURL>&lt;ItemLinks>&lt;ItemLink>&lt;Description>Technical Details&lt;/Description>&lt;URL>http://www.amazon.com/iOS-Programming-Pushing-Limits-Application/dp/tech-data/1118449959%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1118449959&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Baby Registry&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/baby/add-item.html%3Fasin.0%3D1118449959%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1118449959&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Wedding Registry&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/wedding/add-item.html%3Fasin.0%3D1118449959%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1118449959&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Wishlist&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/wishlist/add-item.html%3Fasin.0%3D1118449959%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1118449959&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Tell A Friend&lt;/Description>&lt;URL>http://www.amazon.com/gp/pdp/taf/1118449959%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1118449959&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>All Customer Reviews&lt;/Description>&lt;URL>http://www.amazon.com/review/product/1118449959%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1118449959&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>All Offers&lt;/Description>&lt;URL>http://www.amazon.com/gp/offer-listing/1118449959%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1118449959&lt;/URL>&lt;/ItemLink>&lt;/ItemLinks>&lt;SmallImage>&lt;URL>http://ecx.images-amazon.com/images/I/51gEXI6QMZL._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">58&lt;/Width>&lt;/SmallImage>&lt;MediumImage>&lt;URL>http://ecx.images-amazon.com/images/I/51gEXI6QMZL._SL160_.jpg&lt;/URL>&lt;Height Units="pixels">160&lt;/Height>&lt;Width Units="pixels">124&lt;/Width>&lt;/MediumImage>&lt;LargeImage>&lt;URL>http://ecx.images-amazon.com/images/I/51gEXI6QMZL.jpg&lt;/URL>&lt;Height Units="pixels">500&lt;/Height>&lt;Width Units="pixels">388&lt;/Width>&lt;/LargeImage>&lt;ImageSets>&lt;ImageSet Category="primary">&lt;SwatchImage>&lt;URL>http://ecx.images-amazon.com/images/I/51gEXI6QMZL._SL30_.jpg&lt;/URL>&lt;Height Units="pixels">30&lt;/Height>&lt;Width Units="pixels">23&lt;/Width>&lt;/SwatchImage>&lt;SmallImage>&lt;URL>http://ecx.images-amazon.com/images/I/51gEXI6QMZL._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">58&lt;/Width>&lt;/SmallImage>&lt;ThumbnailImage>&lt;URL>http://ecx.images-amazon.com/images/I/51gEXI6QMZL._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">58&lt;/Width>&lt;/ThumbnailImage>&lt;TinyImage>&lt;URL>http://ecx.images-amazon.com/images/I/51gEXI6QMZL._SL110_.jpg&lt;/URL>&lt;Height Units="pixels">110&lt;/Height>&lt;Width Units="pixels">85&lt;/Width>&lt;/TinyImage>&lt;MediumImage>&lt;URL>http://ecx.images-amazon.com/images/I/51gEXI6QMZL._SL160_.jpg&lt;/URL>&lt;Height Units="pixels">160&lt;/Height>&lt;Width Units="pixels">124&lt;/Width>&lt;/MediumImage>&lt;LargeImage>&lt;URL>http://ecx.images-amazon.com/images/I/51gEXI6QMZL.jpg&lt;/URL>&lt;Height Units="pixels">500&lt;/Height>&lt;Width Units="pixels">388&lt;/Width>&lt;/LargeImage>&lt;/ImageSet>&lt;/ImageSets>&lt;ItemAttributes>&lt;Author>Rob Napier&lt;/Author>&lt;Author>Mugunth Kumar&lt;/Author>&lt;Manufacturer>Wiley&lt;/Manufacturer>&lt;ProductGroup>Book&lt;/ProductGroup>&lt;Title>iOS 6 Programming Pushing the Limits: Advanced Application Development for Apple iPhone, iPad and iPod Touch&lt;/Title>&lt;/ItemAttributes>&lt;/Item>&lt;Item>&lt;ASIN>0321741838&lt;/ASIN>&lt;DetailPageURL>http://www.amazon.com/Learning-OpenGL-iOS-Hands-Programming/dp/0321741838%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D165953%26creativeASIN%3D0321741838&lt;/DetailPageURL>&lt;ItemLinks>&lt;ItemLink>&lt;Description>Technical Details&lt;/Description>&lt;URL>http://www.amazon.com/Learning-OpenGL-iOS-Hands-Programming/dp/tech-data/0321741838%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0321741838&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Baby Registry&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/baby/add-item.html%3Fasin.0%3D0321741838%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0321741838&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Wedding Registry&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/wedding/add-item.html%3Fasin.0%3D0321741838%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0321741838&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Wishlist&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/wishlist/add-item.html%3Fasin.0%3D0321741838%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0321741838&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Tell A Friend&lt;/Description>&lt;URL>http://www.amazon.com/gp/pdp/taf/0321741838%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0321741838&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>All Customer Reviews&lt;/Description>&lt;URL>http://www.amazon.com/review/product/0321741838%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0321741838&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>All Offers&lt;/Description>&lt;URL>http://www.amazon.com/gp/offer-listing/0321741838%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0321741838&lt;/URL>&lt;/ItemLink>&lt;/ItemLinks>&lt;SmallImage>&lt;URL>http://ecx.images-amazon.com/images/I/51wqjU0VTSL._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">58&lt;/Width>&lt;/SmallImage>&lt;MediumImage>&lt;URL>http://ecx.images-amazon.com/images/I/51wqjU0VTSL._SL160_.jpg&lt;/URL>&lt;Height Units="pixels">160&lt;/Height>&lt;Width Units="pixels">124&lt;/Width>&lt;/MediumImage>&lt;LargeImage>&lt;URL>http://ecx.images-amazon.com/images/I/51wqjU0VTSL.jpg&lt;/URL>&lt;Height Units="pixels">500&lt;/Height>&lt;Width Units="pixels">388&lt;/Width>&lt;/LargeImage>&lt;ImageSets>&lt;ImageSet Category="primary">&lt;SwatchImage>&lt;URL>http://ecx.images-amazon.com/images/I/51wqjU0VTSL._SL30_.jpg&lt;/URL>&lt;Height Units="pixels">30&lt;/Height>&lt;Width Units="pixels">23&lt;/Width>&lt;/SwatchImage>&lt;SmallImage>&lt;URL>http://ecx.images-amazon.com/images/I/51wqjU0VTSL._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">58&lt;/Width>&lt;/SmallImage>&lt;ThumbnailImage>&lt;URL>http://ecx.images-amazon.com/images/I/51wqjU0VTSL._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">58&lt;/Width>&lt;/ThumbnailImage>&lt;TinyImage>&lt;URL>http://ecx.images-amazon.com/images/I/51wqjU0VTSL._SL110_.jpg&lt;/URL>&lt;Height Units="pixels">110&lt;/Height>&lt;Width Units="pixels">85&lt;/Width>&lt;/TinyImage>&lt;MediumImage>&lt;URL>http://ecx.images-amazon.com/images/I/51wqjU0VTSL._SL160_.jpg&lt;/URL>&lt;Height Units="pixels">160&lt;/Height>&lt;Width Units="pixels">124&lt;/Width>&lt;/MediumImage>&lt;LargeImage>&lt;URL>http://ecx.images-amazon.com/images/I/51wqjU0VTSL.jpg&lt;/URL>&lt;Height Units="pixels">500&lt;/Height>&lt;Width Units="pixels">388&lt;/Width>&lt;/LargeImage>&lt;/ImageSet>&lt;/ImageSets>&lt;ItemAttributes>&lt;Author>Erik M. Buck&lt;/Author>&lt;Manufacturer>Addison-Wesley Professional&lt;/Manufacturer>&lt;ProductGroup>Book&lt;/ProductGroup>&lt;Title>Learning OpenGL ES for iOS: A Hands-on Guide to Modern 3D Graphics Programming&lt;/Title>&lt;/ItemAttributes>&lt;/Item>&lt;Item>&lt;ASIN>0321636848&lt;/ASIN>&lt;DetailPageURL>http://www.amazon.com/Learning-Core-Audio-Hands-On-Programming/dp/0321636848%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D165953%26creativeASIN%3D0321636848&lt;/DetailPageURL>&lt;ItemLinks>&lt;ItemLink>&lt;Description>Technical Details&lt;/Description>&lt;URL>http://www.amazon.com/Learning-Core-Audio-Hands-On-Programming/dp/tech-data/0321636848%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0321636848&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Baby Registry&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/baby/add-item.html%3Fasin.0%3D0321636848%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0321636848&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Wedding Registry&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/wedding/add-item.html%3Fasin.0%3D0321636848%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0321636848&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Wishlist&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/wishlist/add-item.html%3Fasin.0%3D0321636848%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0321636848&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Tell A Friend&lt;/Description>&lt;URL>http://www.amazon.com/gp/pdp/taf/0321636848%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0321636848&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>All Customer Reviews&lt;/Description>&lt;URL>http://www.amazon.com/review/product/0321636848%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0321636848&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>All Offers&lt;/Description>&lt;URL>http://www.amazon.com/gp/offer-listing/0321636848%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0321636848&lt;/URL>&lt;/ItemLink>&lt;/ItemLinks>&lt;SmallImage>&lt;URL>http://ecx.images-amazon.com/images/I/51AzGxb1nNL._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">58&lt;/Width>&lt;/SmallImage>&lt;MediumImage>&lt;URL>http://ecx.images-amazon.com/images/I/51AzGxb1nNL._SL160_.jpg&lt;/URL>&lt;Height Units="pixels">160&lt;/Height>&lt;Width Units="pixels">124&lt;/Width>&lt;/MediumImage>&lt;LargeImage>&lt;URL>http://ecx.images-amazon.com/images/I/51AzGxb1nNL.jpg&lt;/URL>&lt;Height Units="pixels">500&lt;/Height>&lt;Width Units="pixels">388&lt;/Width>&lt;/LargeImage>&lt;ImageSets>&lt;ImageSet Category="primary">&lt;SwatchImage>&lt;URL>http://ecx.images-amazon.com/images/I/51AzGxb1nNL._SL30_.jpg&lt;/URL>&lt;Height Units="pixels">30&lt;/Height>&lt;Width Units="pixels">23&lt;/Width>&lt;/SwatchImage>&lt;SmallImage>&lt;URL>http://ecx.images-amazon.com/images/I/51AzGxb1nNL._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">58&lt;/Width>&lt;/SmallImage>&lt;ThumbnailImage>&lt;URL>http://ecx.images-amazon.com/images/I/51AzGxb1nNL._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">58&lt;/Width>&lt;/ThumbnailImage>&lt;TinyImage>&lt;URL>http://ecx.images-amazon.com/images/I/51AzGxb1nNL._SL110_.jpg&lt;/URL>&lt;Height Units="pixels">110&lt;/Height>&lt;Width Units="pixels">85&lt;/Width>&lt;/TinyImage>&lt;MediumImage>&lt;URL>http://ecx.images-amazon.com/images/I/51AzGxb1nNL._SL160_.jpg&lt;/URL>&lt;Height Units="pixels">160&lt;/Height>&lt;Width Units="pixels">124&lt;/Width>&lt;/MediumImage>&lt;LargeImage>&lt;URL>http://ecx.images-amazon.com/images/I/51AzGxb1nNL.jpg&lt;/URL>&lt;Height Units="pixels">500&lt;/Height>&lt;Width Units="pixels">388&lt;/Width>&lt;/LargeImage>&lt;/ImageSet>&lt;/ImageSets>&lt;ItemAttributes>&lt;Author>Chris Adamson&lt;/Author>&lt;Author>Kevin Avila&lt;/Author>&lt;Manufacturer>Addison-Wesley Professional&lt;/Manufacturer>&lt;ProductGroup>Book&lt;/ProductGroup>&lt;Title>Learning Core Audio: A Hands-On Guide to Audio Programming for Mac and iOS&lt;/Title>&lt;/ItemAttributes>&lt;/Item>&lt;Item>&lt;ASIN>1118362403&lt;/ASIN>&lt;DetailPageURL>http://www.amazon.com/Professional-iOS-Network-Programming-Connecting/dp/1118362403%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D165953%26creativeASIN%3D1118362403&lt;/DetailPageURL>&lt;ItemLinks>&lt;ItemLink>&lt;Description>Technical Details&lt;/Description>&lt;URL>http://www.amazon.com/Professional-iOS-Network-Programming-Connecting/dp/tech-data/1118362403%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1118362403&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Baby Registry&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/baby/add-item.html%3Fasin.0%3D1118362403%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1118362403&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Wedding Registry&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/wedding/add-item.html%3Fasin.0%3D1118362403%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1118362403&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Wishlist&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/wishlist/add-item.html%3Fasin.0%3D1118362403%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1118362403&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Tell A Friend&lt;/Description>&lt;URL>http://www.amazon.com/gp/pdp/taf/1118362403%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1118362403&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>All Customer Reviews&lt;/Description>&lt;URL>http://www.amazon.com/review/product/1118362403%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1118362403&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>All Offers&lt;/Description>&lt;URL>http://www.amazon.com/gp/offer-listing/1118362403%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1118362403&lt;/URL>&lt;/ItemLink>&lt;/ItemLinks>&lt;SmallImage>&lt;URL>http://ecx.images-amazon.com/images/I/519rZ2Pp9aL._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">59&lt;/Width>&lt;/SmallImage>&lt;MediumImage>&lt;URL>http://ecx.images-amazon.com/images/I/519rZ2Pp9aL._SL160_.jpg&lt;/URL>&lt;Height Units="pixels">160&lt;/Height>&lt;Width Units="pixels">126&lt;/Width>&lt;/MediumImage>&lt;LargeImage>&lt;URL>http://ecx.images-amazon.com/images/I/519rZ2Pp9aL.jpg&lt;/URL>&lt;Height Units="pixels">500&lt;/Height>&lt;Width Units="pixels">394&lt;/Width>&lt;/LargeImage>&lt;ImageSets>&lt;ImageSet Category="primary">&lt;SwatchImage>&lt;URL>http://ecx.images-amazon.com/images/I/519rZ2Pp9aL._SL30_.jpg&lt;/URL>&lt;Height Units="pixels">30&lt;/Height>&lt;Width Units="pixels">24&lt;/Width>&lt;/SwatchImage>&lt;SmallImage>&lt;URL>http://ecx.images-amazon.com/images/I/519rZ2Pp9aL._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">59&lt;/Width>&lt;/SmallImage>&lt;ThumbnailImage>&lt;URL>http://ecx.images-amazon.com/images/I/519rZ2Pp9aL._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">59&lt;/Width>&lt;/ThumbnailImage>&lt;TinyImage>&lt;URL>http://ecx.images-amazon.com/images/I/519rZ2Pp9aL._SL110_.jpg&lt;/URL>&lt;Height Units="pixels">110&lt;/Height>&lt;Width Units="pixels">87&lt;/Width>&lt;/TinyImage>&lt;MediumImage>&lt;URL>http://ecx.images-amazon.com/images/I/519rZ2Pp9aL._SL160_.jpg&lt;/URL>&lt;Height Units="pixels">160&lt;/Height>&lt;Width Units="pixels">126&lt;/Width>&lt;/MediumImage>&lt;LargeImage>&lt;URL>http://ecx.images-amazon.com/images/I/519rZ2Pp9aL.jpg&lt;/URL>&lt;Height Units="pixels">500&lt;/Height>&lt;Width Units="pixels">394&lt;/Width>&lt;/LargeImage>&lt;/ImageSet>&lt;/ImageSets>&lt;ItemAttributes>&lt;Author>Jack Cox&lt;/Author>&lt;Author>Nathan Jones&lt;/Author>&lt;Author>John Szumski&lt;/Author>&lt;Manufacturer>Wrox&lt;/Manufacturer>&lt;ProductGroup>Book&lt;/ProductGroup>&lt;Title>Professional iOS Network Programming: Connecting the Enterprise to the iPhone and iPad&lt;/Title>&lt;/ItemAttributes>&lt;/Item>&lt;Item>&lt;ASIN>1449359345&lt;/ASIN>&lt;DetailPageURL>http://www.amazon.com/Learning-iOS-Programming-Xcode-Store/dp/1449359345%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D165953%26creativeASIN%3D1449359345&lt;/DetailPageURL>&lt;ItemLinks>&lt;ItemLink>&lt;Description>Technical Details&lt;/Description>&lt;URL>http://www.amazon.com/Learning-iOS-Programming-Xcode-Store/dp/tech-data/1449359345%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1449359345&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Baby Registry&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/baby/add-item.html%3Fasin.0%3D1449359345%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1449359345&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Wedding Registry&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/wedding/add-item.html%3Fasin.0%3D1449359345%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1449359345&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Wishlist&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/wishlist/add-item.html%3Fasin.0%3D1449359345%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1449359345&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Tell A Friend&lt;/Description>&lt;URL>http://www.amazon.com/gp/pdp/taf/1449359345%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1449359345&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>All Customer Reviews&lt;/Description>&lt;URL>http://www.amazon.com/review/product/1449359345%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1449359345&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>All Offers&lt;/Description>&lt;URL>http://www.amazon.com/gp/offer-listing/1449359345%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D1449359345&lt;/URL>&lt;/ItemLink>&lt;/ItemLinks>&lt;SmallImage>&lt;URL>http://ecx.images-amazon.com/images/I/41N%2BYIc3wTL._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">57&lt;/Width>&lt;/SmallImage>&lt;MediumImage>&lt;URL>http://ecx.images-amazon.com/images/I/41N%2BYIc3wTL._SL160_.jpg&lt;/URL>&lt;Height Units="pixels">160&lt;/Height>&lt;Width Units="pixels">122&lt;/Width>&lt;/MediumImage>&lt;LargeImage>&lt;URL>http://ecx.images-amazon.com/images/I/41N%2BYIc3wTL.jpg&lt;/URL>&lt;Height Units="pixels">500&lt;/Height>&lt;Width Units="pixels">381&lt;/Width>&lt;/LargeImage>&lt;ImageSets>&lt;ImageSet Category="primary">&lt;SwatchImage>&lt;URL>http://ecx.images-amazon.com/images/I/41N%2BYIc3wTL._SL30_.jpg&lt;/URL>&lt;Height Units="pixels">30&lt;/Height>&lt;Width Units="pixels">23&lt;/Width>&lt;/SwatchImage>&lt;SmallImage>&lt;URL>http://ecx.images-amazon.com/images/I/41N%2BYIc3wTL._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">57&lt;/Width>&lt;/SmallImage>&lt;ThumbnailImage>&lt;URL>http://ecx.images-amazon.com/images/I/41N%2BYIc3wTL._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">57&lt;/Width>&lt;/ThumbnailImage>&lt;TinyImage>&lt;URL>http://ecx.images-amazon.com/images/I/41N%2BYIc3wTL._SL110_.jpg&lt;/URL>&lt;Height Units="pixels">110&lt;/Height>&lt;Width Units="pixels">84&lt;/Width>&lt;/TinyImage>&lt;MediumImage>&lt;URL>http://ecx.images-amazon.com/images/I/41N%2BYIc3wTL._SL160_.jpg&lt;/URL>&lt;Height Units="pixels">160&lt;/Height>&lt;Width Units="pixels">122&lt;/Width>&lt;/MediumImage>&lt;LargeImage>&lt;URL>http://ecx.images-amazon.com/images/I/41N%2BYIc3wTL.jpg&lt;/URL>&lt;Height Units="pixels">500&lt;/Height>&lt;Width Units="pixels">381&lt;/Width>&lt;/LargeImage>&lt;/ImageSet>&lt;/ImageSets>&lt;ItemAttributes>&lt;Author>Alasdair Allan&lt;/Author>&lt;Manufacturer>O'Reilly Media&lt;/Manufacturer>&lt;ProductGroup>Book&lt;/ProductGroup>&lt;Title>Learning iOS Programming: From Xcode to App Store&lt;/Title>&lt;/ItemAttributes>&lt;/Item>&lt;Item>&lt;ASIN>0321699424&lt;/ASIN>&lt;DetailPageURL>http://www.amazon.com/Learning-iOS-Game-Programming-Hands-On/dp/0321699424%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D165953%26creativeASIN%3D0321699424&lt;/DetailPageURL>&lt;ItemLinks>&lt;ItemLink>&lt;Description>Technical Details&lt;/Description>&lt;URL>http://www.amazon.com/Learning-iOS-Game-Programming-Hands-On/dp/tech-data/0321699424%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0321699424&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Baby Registry&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/baby/add-item.html%3Fasin.0%3D0321699424%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0321699424&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Wedding Registry&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/wedding/add-item.html%3Fasin.0%3D0321699424%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0321699424&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Wishlist&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/wishlist/add-item.html%3Fasin.0%3D0321699424%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0321699424&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Tell A Friend&lt;/Description>&lt;URL>http://www.amazon.com/gp/pdp/taf/0321699424%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0321699424&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>All Customer Reviews&lt;/Description>&lt;URL>http://www.amazon.com/review/product/0321699424%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0321699424&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>All Offers&lt;/Description>&lt;URL>http://www.amazon.com/gp/offer-listing/0321699424%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0321699424&lt;/URL>&lt;/ItemLink>&lt;/ItemLinks>&lt;SmallImage>&lt;URL>http://ecx.images-amazon.com/images/I/51cbd0Dp-7L._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">57&lt;/Width>&lt;/SmallImage>&lt;MediumImage>&lt;URL>http://ecx.images-amazon.com/images/I/51cbd0Dp-7L._SL160_.jpg&lt;/URL>&lt;Height Units="pixels">160&lt;/Height>&lt;Width Units="pixels">122&lt;/Width>&lt;/MediumImage>&lt;LargeImage>&lt;URL>http://ecx.images-amazon.com/images/I/51cbd0Dp-7L.jpg&lt;/URL>&lt;Height Units="pixels">500&lt;/Height>&lt;Width Units="pixels">381&lt;/Width>&lt;/LargeImage>&lt;ImageSets>&lt;ImageSet Category="primary">&lt;SwatchImage>&lt;URL>http://ecx.images-amazon.com/images/I/51cbd0Dp-7L._SL30_.jpg&lt;/URL>&lt;Height Units="pixels">30&lt;/Height>&lt;Width Units="pixels">23&lt;/Width>&lt;/SwatchImage>&lt;SmallImage>&lt;URL>http://ecx.images-amazon.com/images/I/51cbd0Dp-7L._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">57&lt;/Width>&lt;/SmallImage>&lt;ThumbnailImage>&lt;URL>http://ecx.images-amazon.com/images/I/51cbd0Dp-7L._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">57&lt;/Width>&lt;/ThumbnailImage>&lt;TinyImage>&lt;URL>http://ecx.images-amazon.com/images/I/51cbd0Dp-7L._SL110_.jpg&lt;/URL>&lt;Height Units="pixels">110&lt;/Height>&lt;Width Units="pixels">84&lt;/Width>&lt;/TinyImage>&lt;MediumImage>&lt;URL>http://ecx.images-amazon.com/images/I/51cbd0Dp-7L._SL160_.jpg&lt;/URL>&lt;Height Units="pixels">160&lt;/Height>&lt;Width Units="pixels">122&lt;/Width>&lt;/MediumImage>&lt;LargeImage>&lt;URL>http://ecx.images-amazon.com/images/I/51cbd0Dp-7L.jpg&lt;/URL>&lt;Height Units="pixels">500&lt;/Height>&lt;Width Units="pixels">381&lt;/Width>&lt;/LargeImage>&lt;/ImageSet>&lt;/ImageSets>&lt;ItemAttributes>&lt;Author>Michael Daley&lt;/Author>&lt;Manufacturer>Addison-Wesley Professional&lt;/Manufacturer>&lt;ProductGroup>Book&lt;/ProductGroup>&lt;Title>Learning iOS Game Programming: A Hands-On Guide to Building Your First iPhone Game&lt;/Title>&lt;/ItemAttributes>&lt;/Item>&lt;Item>&lt;ASIN>0321773772&lt;/ASIN>&lt;DetailPageURL>http://www.amazon.com/iOS-Programming-Ranch-Edition-Guides/dp/0321773772%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D165953%26creativeASIN%3D0321773772&lt;/DetailPageURL>&lt;ItemLinks>&lt;ItemLink>&lt;Description>Technical Details&lt;/Description>&lt;URL>http://www.amazon.com/iOS-Programming-Ranch-Edition-Guides/dp/tech-data/0321773772%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0321773772&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Baby Registry&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/baby/add-item.html%3Fasin.0%3D0321773772%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0321773772&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Wedding Registry&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/wedding/add-item.html%3Fasin.0%3D0321773772%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0321773772&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Add To Wishlist&lt;/Description>&lt;URL>http://www.amazon.com/gp/registry/wishlist/add-item.html%3Fasin.0%3D0321773772%26SubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0321773772&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>Tell A Friend&lt;/Description>&lt;URL>http://www.amazon.com/gp/pdp/taf/0321773772%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0321773772&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>All Customer Reviews&lt;/Description>&lt;URL>http://www.amazon.com/review/product/0321773772%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0321773772&lt;/URL>&lt;/ItemLink>&lt;ItemLink>&lt;Description>All Offers&lt;/Description>&lt;URL>http://www.amazon.com/gp/offer-listing/0321773772%3FSubscriptionId%3DAKIAIEKQPISXI6IPHDFQ%26tag%3Dtag%26linkCode%3Dsp1%26camp%3D2025%26creative%3D386001%26creativeASIN%3D0321773772&lt;/URL>&lt;/ItemLink>&lt;/ItemLinks>&lt;SmallImage>&lt;URL>http://ecx.images-amazon.com/images/I/412zhvqyIXL._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">52&lt;/Width>&lt;/SmallImage>&lt;MediumImage>&lt;URL>http://ecx.images-amazon.com/images/I/412zhvqyIXL._SL160_.jpg&lt;/URL>&lt;Height Units="pixels">160&lt;/Height>&lt;Width Units="pixels">110&lt;/Width>&lt;/MediumImage>&lt;LargeImage>&lt;URL>http://ecx.images-amazon.com/images/I/412zhvqyIXL.jpg&lt;/URL>&lt;Height Units="pixels">500&lt;/Height>&lt;Width Units="pixels">345&lt;/Width>&lt;/LargeImage>&lt;ImageSets>&lt;ImageSet Category="primary">&lt;SwatchImage>&lt;URL>http://ecx.images-amazon.com/images/I/412zhvqyIXL._SL30_.jpg&lt;/URL>&lt;Height Units="pixels">30&lt;/Height>&lt;Width Units="pixels">21&lt;/Width>&lt;/SwatchImage>&lt;SmallImage>&lt;URL>http://ecx.images-amazon.com/images/I/412zhvqyIXL._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">52&lt;/Width>&lt;/SmallImage>&lt;ThumbnailImage>&lt;URL>http://ecx.images-amazon.com/images/I/412zhvqyIXL._SL75_.jpg&lt;/URL>&lt;Height Units="pixels">75&lt;/Height>&lt;Width Units="pixels">52&lt;/Width>&lt;/ThumbnailImage>&lt;TinyImage>&lt;URL>http://ecx.images-amazon.com/images/I/412zhvqyIXL._SL110_.jpg&lt;/URL>&lt;Height Units="pixels">110&lt;/Height>&lt;Width Units="pixels">76&lt;/Width>&lt;/TinyImage>&lt;MediumImage>&lt;URL>http://ecx.images-amazon.com/images/I/412zhvqyIXL._SL160_.jpg&lt;/URL>&lt;Height Units="pixels">160&lt;/Height>&lt;Width Units="pixels">110&lt;/Width>&lt;/MediumImage>&lt;LargeImage>&lt;URL>http://ecx.images-amazon.com/images/I/412zhvqyIXL.jpg&lt;/URL>&lt;Height Units="pixels">500&lt;/Height>&lt;Width Units="pixels">345&lt;/Width>&lt;/LargeImage>&lt;/ImageSet>&lt;/ImageSets>&lt;ItemAttributes>&lt;Author>Joe Conway&lt;/Author>&lt;Author>Aaron Hillegass&lt;/Author>&lt;Manufacturer>Big Nerd Ranch Guides&lt;/Manufacturer>&lt;ProductGroup>Book&lt;/ProductGroup>&lt;Title>iOS Programming: The Big Nerd Ranch Guide (2nd Edition) (Big Nerd Ranch Guides)&lt;/Title>&lt;/ItemAttributes>&lt;/Item>&lt;/Items>&lt;/ItemSearchResponse>&lt;/soapenv:Body>&lt;/soapenv:Envelope></span></code></pre></td></tr></table></div></figure>


<p>If you forget to fill in your AWS Access Key and Secure Key in the shared client, then you will get error like below:</p>

<p><img class="center" src="http://bulldog2011.github.com/images/pico/tutorial05/screen_shot2.png" width="300" height="500"></p>

<p>This is just a bare minimum Amazon ECommerce service based application, for a demo with more functions, please see the AWSECDemoApp sample in the <code>Examples</code> folder of Pico source, AWSECDemoApp calls following APIs in one app:</p>

<blockquote><ol>
<li><strong><em>itemSearch</em></strong> for book search</li>
<li><strong><em>cartCreate</em></strong> to add chosen book into shopping cart</li>
</ol>
</blockquote>

<p>Below is a few screen shots:</p>

<p>Search:
<img class="center" src="http://bulldog2011.github.com/images/pico/tutorial05/screen_shot3.png" width="300" height="500"></p>

<p>Details:
<img class="center" src="http://bulldog2011.github.com/images/pico/tutorial05/screen_shot4.png" width="300" height="500"></p>

<p>Add To Cart:
<img class="center" src="http://bulldog2011.github.com/images/pico/tutorial05/screen_shot5.png" width="300" height="500"></p>

<p>Now it&#8217;s your turn to create iOS applications based on Amazon ECommerce web service, see your next great service based app.</p>

<h3>Update 1</h3>

<p>The Amazon Product Advertising API Proxy has been extracted as a standalone project, hosted <a href="https://github.com/bulldog2011/PicoAWSECommerceServiceClient">here</a>, and the corresponding appledoc is hosted <a href="http://bulldog2011.github.com/PicoAWSECommerceServiceClient/">here</a>, the appledoc is a useful programming reference. By the way, the doc annotations in wsdl are not only generted into the proxy code, but into the appledoc, assisting your development.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pico Tutorial 4 - Hello eBay Shopping]]></title>
    <link href="http://bulldog2011.github.com/blog/2013/03/30/pico-tutorial-4-hello-ebay-shopping/"/>
    <updated>2013-03-30T10:06:00+08:00</updated>
    <id>http://bulldog2011.github.com/blog/2013/03/30/pico-tutorial-4-hello-ebay-shopping</id>
    <content type="html"><![CDATA[<p>This is the fourth tutorial of Pico tutorial series, in this tutorial, I will show you how to integrate <a href="https://github.com/bulldog2011/pico">Pico</a> with <a href="https://www.x.com/developers/ebay/products/shopping-api">eBay Shopping Web Service</a>, if you are not familar with this service, just have a quick reivew on its official site, basically, eBay Shopping service allows you to search for eBay items, products and reviews, user info, and popular items and searches. In previous tutorials, I showed you how to integrate Pico with SOAP based services, while in this tutorial, I will show you how to interate Pico with XML based service, the eBay Shopping service just support XML message format.</p>

<p>The source of this tutorial is <a href="https://github.com/bulldog2011/pico/tree/master/Examples/eBayShopping">here</a>.</p>

<!--more-->


<h2>Step 0 - Prerequisite</h2>

<p>I suppose you have already read previous Pico tutorials, at least 1 and 2, and basically you should know:</p>

<blockquote><ul>
<li>The wsdl driven development process supported by Pico.</li>
<li>How to reference Pico as a static library in your project.</li>
<li>Or How to reference Pico Source directly in your project.</li>
</ul>
</blockquote>

<h2>Step 1 - Generate Objective-C Proxy from WSDL</h2>

<p>Download <a href="https://github.com/bulldog2011/mwsc">mwsc</a> and run following command in terminal to generate the proxy:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bin/mwsc -pico -d generated -prefix Shopping_ -ebayshopping http://developer.ebay.com/webservices/latest/ShoppingService.wsdl</span></code></pre></td></tr></table></div></figure>


<p>Depends on the network speed, you may need to wait a few moments to let the code generator download the wsdl and generate code, you may also download the wsdl and run the code generator with a local wsdl.</p>

<p>A few comments about the codegen options:</p>

<blockquote><ul>
<li>The code generator will throw many warnings, say that the wsdl violates some schema rule, just ignore them, it&#8217;s ok as long as the final code is generated correctly.</li>
<li>I have added a prefix <code>Shopping_</code> as codegen option, such that all interfaces/types generated will be prefixed with <code>Shopping_</code>. Adding prefix to Objective-C types is a recommended best practice to avoid possible type name conflict with code generated from other services, for example, eBay has a couple of services, and they share a few commons types, without prefixing, you may get conflict if you use two or more eBay services in one application.</li>
<li>I have added a special <code>-ebayshopping</code> codegen option, this is because eBay Shopping service needs a per-call operation name HTTP header(eBay Finding service also needs a similar but different header), I added this special flag in the code generator to let it generate the header for me, since I don&#8217;t want to add this header everytime I call an eBay Shopping service, so this is just a special flag for eBay Shopping services and for demo only, or a hidden feature, not a generic codegen option.</li>
</ul>
</blockquote>

<h2>Step 2 - Create New iOS Project, Add Pico Library and Generated Proxy into Your Project</h2>

<p>Create a new simple iOS single view application named &#8220;HelloeBayShopping&#8221;, don&#8217;t choose ARC since Pico does not support ARC yet.</p>

<p>In this tutorial, we will reference Pico as a static library, suppose you have downloaded Pico source project from github site, then:</p>

<blockquote><ol>
<li>Drag the Pico xcodeproj into your project,</li>
<li>In the Build Phases of the target,  add <code>libPico.a</code> and <code>libxml2.dylib</code> to &#8220;Link Binary With Libraries&#8221; section.</li>
<li>In the Build Setting of the target, add [your path to Pico source] to &#8220;User Header Search Paths&#8221; setting, choose &#8220;recursive&#8221; seach path.</li>
</ol>
</blockquote>

<p>Build the project to ensure that it can build successfully.</p>

<p>Now drag the proxy generated in step 1 into the project,  choose &#8220;Copy items to destination group&#8217;s folder&#8221; and &#8220;add to targets&#8221; when prompted.</p>

<p>Build the project again to ensure that it can build successfully.</p>

<p>The code generation will genenrate both SOAP and XML based interfaces from eBay Shopping wsdl for us,
since we will use XML based interface in this tutorial, you may now review the generated eBay Shopping service XML interface to learn what kinds of functions are provided by eBay Shopping service, and what kinds of parameters are needed to call the serivce, the interface is posted below:</p>

<figure class='code'><figcaption><span>ShoppingInterface_XMLClient.h </span><a href='https://github.com/bulldog2011/pico/blob/master/Examples/eBayShopping/eBayShopping/Proxy/client/ShoppingInterface_XMLClient.h'>source </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">// Generated by wsdl compiler for ios/objective-c</span>
</span><span class='line'><span class="c1">// DO NOT CHANGE!</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="cp">#import &lt;Foundation/Foundation.h&gt;</span>
</span><span class='line'><span class="cp">#import &quot;PicoXMLClient.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;Shopping_GetCategoryInfoResponseType.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;Shopping_GetSingleItemResponseType.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;Shopping_GetMultipleItemsResponseType.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;Shopping_FindProductsRequestType.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;Shopping_GetMultipleItemsRequestType.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;Shopping_FindReviewsAndGuidesResponseType.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;Shopping_FindHalfProductsRequestType.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;Shopping_FindPopularSearchesResponseType.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;Shopping_FindProductsResponseType.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;Shopping_GetCategoryInfoRequestType.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;Shopping_GetUserProfileRequestType.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;Shopping_GeteBayTimeResponseType.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;Shopping_GetShippingCostsRequestType.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;Shopping_GetItemStatusResponseType.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;Shopping_GetUserProfileResponseType.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;Shopping_FindHalfProductsResponseType.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;Shopping_GetItemStatusRequestType.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;Shopping_FindPopularSearchesRequestType.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;Shopping_GetShippingCostsResponseType.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;Shopping_FindReviewsAndGuidesRequestType.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;Shopping_FindPopularItemsResponseType.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;Shopping_GetSingleItemRequestType.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;Shopping_GeteBayTimeRequestType.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;Shopping_FindPopularItemsRequestType.h&quot;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> This class is the XML client to the ShoppingInterface Web Service.</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="k">@interface</span> <span class="nc">ShoppingInterface_XMLClient</span> : <span class="nc">PicoXMLClient</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> public method</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="o">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nl">findHalfProducts:</span><span class="p">(</span><span class="n">Shopping_FindHalfProductsRequestType</span> <span class="o">*</span><span class="p">)</span> <span class="n">requestObject</span>
</span><span class='line'>      <span class="nl">success:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">Shopping_FindHalfProductsResponseType</span> <span class="o">*</span><span class="n">responseObject</span><span class="p">))</span><span class="n">success</span>
</span><span class='line'>      <span class="nl">failure:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">NSError</span> <span class="o">*</span><span class="n">error</span><span class="p">))</span><span class="n">failure</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> public method</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">findPopularItems:</span><span class="p">(</span><span class="n">Shopping_FindPopularItemsRequestType</span> <span class="o">*</span><span class="p">)</span> <span class="n">requestObject</span>
</span><span class='line'>      <span class="nl">success:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">Shopping_FindPopularItemsResponseType</span> <span class="o">*</span><span class="n">responseObject</span><span class="p">))</span><span class="n">success</span>
</span><span class='line'>      <span class="nl">failure:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">NSError</span> <span class="o">*</span><span class="n">error</span><span class="p">))</span><span class="n">failure</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> public method</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">findPopularSearches:</span><span class="p">(</span><span class="n">Shopping_FindPopularSearchesRequestType</span> <span class="o">*</span><span class="p">)</span> <span class="n">requestObject</span>
</span><span class='line'>      <span class="nl">success:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">Shopping_FindPopularSearchesResponseType</span> <span class="o">*</span><span class="n">responseObject</span><span class="p">))</span><span class="n">success</span>
</span><span class='line'>      <span class="nl">failure:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">NSError</span> <span class="o">*</span><span class="n">error</span><span class="p">))</span><span class="n">failure</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> public method</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">findProducts:</span><span class="p">(</span><span class="n">Shopping_FindProductsRequestType</span> <span class="o">*</span><span class="p">)</span> <span class="n">requestObject</span>
</span><span class='line'>      <span class="nl">success:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">Shopping_FindProductsResponseType</span> <span class="o">*</span><span class="n">responseObject</span><span class="p">))</span><span class="n">success</span>
</span><span class='line'>      <span class="nl">failure:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">NSError</span> <span class="o">*</span><span class="n">error</span><span class="p">))</span><span class="n">failure</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> public method</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">findReviewsAndGuides:</span><span class="p">(</span><span class="n">Shopping_FindReviewsAndGuidesRequestType</span> <span class="o">*</span><span class="p">)</span> <span class="n">requestObject</span>
</span><span class='line'>      <span class="nl">success:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">Shopping_FindReviewsAndGuidesResponseType</span> <span class="o">*</span><span class="n">responseObject</span><span class="p">))</span><span class="n">success</span>
</span><span class='line'>      <span class="nl">failure:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">NSError</span> <span class="o">*</span><span class="n">error</span><span class="p">))</span><span class="n">failure</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> public method</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">getCategoryInfo:</span><span class="p">(</span><span class="n">Shopping_GetCategoryInfoRequestType</span> <span class="o">*</span><span class="p">)</span> <span class="n">requestObject</span>
</span><span class='line'>      <span class="nl">success:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">Shopping_GetCategoryInfoResponseType</span> <span class="o">*</span><span class="n">responseObject</span><span class="p">))</span><span class="n">success</span>
</span><span class='line'>      <span class="nl">failure:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">NSError</span> <span class="o">*</span><span class="n">error</span><span class="p">))</span><span class="n">failure</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> public method</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">getItemStatus:</span><span class="p">(</span><span class="n">Shopping_GetItemStatusRequestType</span> <span class="o">*</span><span class="p">)</span> <span class="n">requestObject</span>
</span><span class='line'>      <span class="nl">success:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">Shopping_GetItemStatusResponseType</span> <span class="o">*</span><span class="n">responseObject</span><span class="p">))</span><span class="n">success</span>
</span><span class='line'>      <span class="nl">failure:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">NSError</span> <span class="o">*</span><span class="n">error</span><span class="p">))</span><span class="n">failure</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> public method</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">getMultipleItems:</span><span class="p">(</span><span class="n">Shopping_GetMultipleItemsRequestType</span> <span class="o">*</span><span class="p">)</span> <span class="n">requestObject</span>
</span><span class='line'>      <span class="nl">success:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">Shopping_GetMultipleItemsResponseType</span> <span class="o">*</span><span class="n">responseObject</span><span class="p">))</span><span class="n">success</span>
</span><span class='line'>      <span class="nl">failure:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">NSError</span> <span class="o">*</span><span class="n">error</span><span class="p">))</span><span class="n">failure</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> public method</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">getShippingCosts:</span><span class="p">(</span><span class="n">Shopping_GetShippingCostsRequestType</span> <span class="o">*</span><span class="p">)</span> <span class="n">requestObject</span>
</span><span class='line'>      <span class="nl">success:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">Shopping_GetShippingCostsResponseType</span> <span class="o">*</span><span class="n">responseObject</span><span class="p">))</span><span class="n">success</span>
</span><span class='line'>      <span class="nl">failure:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">NSError</span> <span class="o">*</span><span class="n">error</span><span class="p">))</span><span class="n">failure</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> public method</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">getSingleItem:</span><span class="p">(</span><span class="n">Shopping_GetSingleItemRequestType</span> <span class="o">*</span><span class="p">)</span> <span class="n">requestObject</span>
</span><span class='line'>      <span class="nl">success:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">Shopping_GetSingleItemResponseType</span> <span class="o">*</span><span class="n">responseObject</span><span class="p">))</span><span class="n">success</span>
</span><span class='line'>      <span class="nl">failure:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">NSError</span> <span class="o">*</span><span class="n">error</span><span class="p">))</span><span class="n">failure</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> public method</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">getUserProfile:</span><span class="p">(</span><span class="n">Shopping_GetUserProfileRequestType</span> <span class="o">*</span><span class="p">)</span> <span class="n">requestObject</span>
</span><span class='line'>      <span class="nl">success:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">Shopping_GetUserProfileResponseType</span> <span class="o">*</span><span class="n">responseObject</span><span class="p">))</span><span class="n">success</span>
</span><span class='line'>      <span class="nl">failure:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">NSError</span> <span class="o">*</span><span class="n">error</span><span class="p">))</span><span class="n">failure</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> public method</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">geteBayTime:</span><span class="p">(</span><span class="n">Shopping_GeteBayTimeRequestType</span> <span class="o">*</span><span class="p">)</span> <span class="n">requestObject</span>
</span><span class='line'>      <span class="nl">success:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">Shopping_GeteBayTimeResponseType</span> <span class="o">*</span><span class="n">responseObject</span><span class="p">))</span><span class="n">success</span>
</span><span class='line'>      <span class="nl">failure:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">NSError</span> <span class="o">*</span><span class="n">error</span><span class="p">))</span><span class="n">failure</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<p>All the methods in the interface follow same calling paradigm - you call the service with required request object and register success callback(for success handling logic) and failure callback(for error handling logic) using Objective-C block.</p>

<p>You may also compare the XML interface with the SOAP interface, they are almost similar, except that SOAP interface will give you an additional SOAPFault object in the failure callback, this is obvious, since XML based service has no concept of SOAPFault, usually, the error is returned as response resident error(RRE) in the XML response message.</p>

<h2>Step 3 - Implement Appliction Logic and UI, Call Proxy to Invoke Web Service as Needed.</h2>

<p>First, create a shared service client as below:</p>

<figure class='code'><figcaption><span>ShoppingInterface_XMLClient.h </span><a href='https://github.com/bulldog2011/pico/blob/master/Examples/eBayShopping/eBayShopping/EBayShoppingServiceClient.h'>source </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &quot;ShoppingInterface_XMLClient.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">EBayShoppingServiceClient</span> : <span class="nc">ShoppingInterface_XMLClient</span>
</span><span class='line'>
</span><span class='line'><span class="k">+</span> <span class="p">(</span><span class="n">EBayShoppingServiceClient</span> <span class="o">*</span><span class="p">)</span><span class="nf">sharedClient</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong><em>Note</em></strong>, unlike shared clients created in previous tutorials, the <code>EBayShoppingServiceClient</code> extends <code>ShoppingInterface_XMLClient</code>, which means we are using XML service interface supported by Pico.</p>

<figure class='code'><figcaption><span>ShoppingInterface_XMLClient.m </span><a href='https://github.com/bulldog2011/pico/blob/master/Examples/eBayShopping/eBayShopping/EBayShoppingServiceClient.m'>source  </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &quot;EBayShoppingServiceClient.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">static</span> <span class="n">NSString</span> <span class="o">*</span><span class="k">const</span> <span class="n">eBayAppId</span> <span class="o">=</span> <span class="s">@&quot;YOUR APPID HERE&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// production</span>
</span><span class='line'><span class="k">static</span> <span class="n">NSString</span> <span class="o">*</span><span class="k">const</span> <span class="n">eBayShoppingServiceURLString</span> <span class="o">=</span> <span class="s">@&quot;http://open.api.ebay.com/shopping?&quot;</span><span class="p">;</span>
</span><span class='line'><span class="c1">// sandbox</span>
</span><span class='line'><span class="c1">//static NSString *const eBayShoppingServiceURLString = @&quot;http://open.api.sandbox.ebay.com/shopping&quot;;</span>
</span><span class='line'>
</span><span class='line'><span class="k">static</span> <span class="n">NSString</span> <span class="o">*</span><span class="k">const</span> <span class="n">targetAPIVersion</span> <span class="o">=</span> <span class="s">@&quot;809&quot;</span><span class="p">;</span>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> for site id list, see http://developer.ebay.com/DevZone/shopping/docs/CallRef/types/SiteCodeType.html</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="k">static</span> <span class="n">NSString</span> <span class="o">*</span><span class="k">const</span> <span class="n">targetSiteId</span> <span class="o">=</span> <span class="s">@&quot;0&quot;</span><span class="p">;</span> <span class="c1">// 0 for US</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">EBayShoppingServiceClient</span>
</span><span class='line'>
</span><span class='line'><span class="k">+</span> <span class="p">(</span><span class="n">EBayShoppingServiceClient</span> <span class="o">*</span><span class="p">)</span><span class="nf">sharedClient</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">static</span> <span class="n">EBayShoppingServiceClient</span> <span class="o">*</span><span class="n">_sharedClient</span> <span class="o">=</span> <span class="nb">nil</span><span class="p">;</span>
</span><span class='line'>    <span class="k">static</span> <span class="n">dispatch_once_t</span> <span class="n">onceToken</span><span class="p">;</span>
</span><span class='line'>    <span class="n">dispatch_once</span><span class="p">(</span><span class="o">&amp;</span><span class="n">onceToken</span><span class="p">,</span> <span class="o">^</span><span class="p">{</span>
</span><span class='line'>        <span class="n">_sharedClient</span> <span class="o">=</span> <span class="p">[[</span><span class="n">EBayShoppingServiceClient</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithEndpointURL:</span><span class="p">[</span><span class="n">NSURL</span> <span class="nl">URLWithString:</span><span class="n">eBayShoppingServiceURLString</span><span class="p">]];</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">_sharedClient</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nf">initWithEndpointURL:</span><span class="p">(</span><span class="n">NSURL</span> <span class="o">*</span><span class="p">)</span><span class="nv">URL</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">self</span> <span class="o">=</span> <span class="p">[</span><span class="n">super</span> <span class="nl">initWithEndpointURL:</span><span class="n">URL</span><span class="p">];</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">self</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="nb">nil</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="n">super</span> <span class="nl">setDefaultHeader:</span><span class="s">@&quot;X-EBAY-API-APP-ID&quot;</span> <span class="nl">value:</span><span class="n">eBayAppId</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">super</span> <span class="nl">setDefaultHeader:</span><span class="s">@&quot;X-EBAY-API-REQUEST-ENCODING&quot;</span> <span class="nl">value:</span><span class="s">@&quot;XML&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">super</span> <span class="nl">setDefaultHeader:</span><span class="s">@&quot;X-EBAY-API-VERSION&quot;</span> <span class="nl">value:</span><span class="n">targetAPIVersion</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">super</span> <span class="nl">setDefaultHeader:</span><span class="s">@&quot;X-EBAY-API-SITE-ID&quot;</span><span class="nl">value:</span><span class="n">targetSiteId</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">self</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Like eBay Finding service, the eBay Shopping service needs a few HTTP headers set to work, let me give more comments:</p>

<blockquote><ol>
<li>eBay Shopping service needs to set a few HTTP headers to work, for a list of required headers, please refer to doc <a href="http://developer.ebay.com/DevZone/shopping/docs/Concepts/ShoppingAPI_FormatOverview.html">here</a>.</li>
<li>One mandatory header for eBay Shopping service is <code>eBayAppId</code>, you need to register on eBay developer site as an eBay developer then get this id, before your can run this demo, you must fill in your own eBayAppId in the shared client.</li>
<li>Another mandatory header for eBay Shopping service is <code>targetAPIVersion</code>, aka the API version you want to use, usually, you use the latest one, at the time of this writing, the latest version is <code>809</code>, you may update this according to your real needs.</li>
<li>We also set <code>X-EBAY-API-REQUEST-ENCODING</code> to <code>XML</code>, indicating we want to call XML service supported by eBay Shopping service.</li>
</ol>
</blockquote>

<p>Now the UI part, we will find one popular item from eBay by keywords, since this is a hello world like sample, we just need a UITextField for keyword input and UIButton to trigger eBay search by invoking method <code>searchButtonPressed</code> which will indirectly call eBay Shopping <code>findPopularItems</code> API through the proxy, fairly simple, see definition in header file <a href="https://github.com/bulldog2011/pico/blob/master/Examples/eBayShopping/eBayShopping/ViewController.h">ViewController.h</a> and instantiation in implementation file <a href="https://github.com/bulldog2011/pico/blob/master/Examples/eBayShopping/eBayShopping/ViewController.m">ViewController.m</a>.</p>

<p>Now implement the <code>searchButtonPressed</code> method by invoking service as below:</p>

<figure class='code'><figcaption><span>ViewController.m </span><a href='https://github.com/bulldog2011/pico/blob/master/Examples/eBayShopping/eBayShopping/ViewController.m'>source  </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &quot;ViewController.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;Shopping_CommonTypes.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;EBayShoppingServiceClient.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;Toast+UIView.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">searchButtonPressed:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">sender</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// Hide the keyboard.</span>
</span><span class='line'>    <span class="p">[</span><span class="n">_searchText</span> <span class="n">resignFirstResponder</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">_searchText</span><span class="p">.</span><span class="n">text</span><span class="p">.</span><span class="n">length</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// start progress activity</span>
</span><span class='line'>        <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="n">makeToastActivity</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Get shared service client</span>
</span><span class='line'>        <span class="n">EBayShoppingServiceClient</span> <span class="o">*</span><span class="n">shoppingClient</span> <span class="o">=</span> <span class="p">[</span><span class="n">EBayShoppingServiceClient</span> <span class="n">sharedClient</span><span class="p">];</span>
</span><span class='line'>        <span class="n">shoppingClient</span><span class="p">.</span><span class="n">debug</span> <span class="o">=</span> <span class="n">YES</span><span class="p">;</span> <span class="c1">// enable request/response message logging</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Build request object</span>
</span><span class='line'>        <span class="n">Shopping_FindPopularItemsRequestType</span> <span class="o">*</span><span class="n">request</span> <span class="o">=</span> <span class="p">[[[</span><span class="n">Shopping_FindPopularItemsRequestType</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">]</span> <span class="n">autorelease</span><span class="p">];</span>
</span><span class='line'>        <span class="n">request</span><span class="p">.</span><span class="n">queryKeywords</span> <span class="o">=</span> <span class="n">_searchText</span><span class="p">.</span><span class="n">text</span><span class="p">;</span>
</span><span class='line'>        <span class="c1">// only need one item for demo</span>
</span><span class='line'>        <span class="n">request</span><span class="p">.</span><span class="n">maxEntries</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSNumber</span> <span class="nl">numberWithInt:</span><span class="mi">1</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// make API call and register callbacks</span>
</span><span class='line'>        <span class="p">[</span><span class="n">shoppingClient</span> <span class="nl">findPopularItems:</span><span class="n">request</span> <span class="nl">success:</span><span class="o">^</span><span class="p">(</span><span class="n">Shopping_FindPopularItemsResponseType</span> <span class="o">*</span><span class="n">responseObject</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">// stop progress activity</span>
</span><span class='line'>            <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="n">hideToastActivity</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">if</span> <span class="p">([</span><span class="n">Shopping_AckCodeType_SUCCESS</span> <span class="nl">isEqualToString:</span><span class="n">responseObject</span><span class="p">.</span><span class="n">ack</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="n">responseObject</span><span class="p">.</span><span class="n">itemArray</span><span class="p">.</span><span class="n">item</span><span class="p">.</span><span class="n">count</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                    <span class="c1">// show the title of the first found item</span>
</span><span class='line'>                    <span class="n">Shopping_SimpleItemType</span> <span class="o">*</span><span class="n">item</span> <span class="o">=</span> <span class="p">[</span><span class="n">responseObject</span><span class="p">.</span><span class="n">itemArray</span><span class="p">.</span><span class="n">item</span> <span class="nl">objectAtIndex:</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>                    <span class="c1">// start image downloading progress activity</span>
</span><span class='line'>                    <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="n">makeToastActivity</span><span class="p">];</span>
</span><span class='line'>                    <span class="c1">// get gallery image</span>
</span><span class='line'>                    <span class="n">NSURL</span> <span class="o">*</span><span class="n">imageURL</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSURL</span> <span class="nl">URLWithString:</span><span class="n">item</span><span class="p">.</span><span class="n">galleryURL</span><span class="p">];</span>
</span><span class='line'>                    <span class="n">NSData</span> <span class="o">*</span><span class="n">imageData</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSData</span> <span class="nl">dataWithContentsOfURL:</span><span class="n">imageURL</span><span class="p">];</span>
</span><span class='line'>                    <span class="c1">// stop progress activity</span>
</span><span class='line'>                    <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="n">hideToastActivity</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>                    <span class="n">UIImage</span> <span class="o">*</span><span class="n">image</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIImage</span> <span class="nl">imageWithData:</span><span class="n">imageData</span><span class="p">];</span>
</span><span class='line'>                    <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">makeToast:</span><span class="n">item</span><span class="p">.</span><span class="n">title</span> <span class="nl">duration:</span><span class="mf">3.0</span> <span class="nl">position:</span><span class="s">@&quot;center&quot;</span> <span class="nl">title:</span><span class="s">@&quot;Success&quot;</span> <span class="nl">image:</span><span class="n">image</span><span class="p">];</span>
</span><span class='line'>                <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>                    <span class="c1">// no result</span>
</span><span class='line'>                    <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">makeToast:</span><span class="s">@&quot;No result&quot;</span> <span class="nl">duration:</span><span class="mf">3.0</span> <span class="nl">position:</span><span class="s">@&quot;center&quot;</span><span class="p">];</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span> <span class="c1">// response resident error</span>
</span><span class='line'>                <span class="n">Shopping_ErrorType</span> <span class="o">*</span><span class="n">error</span> <span class="o">=</span> <span class="p">[</span><span class="n">responseObject</span><span class="p">.</span><span class="n">errors</span> <span class="nl">objectAtIndex:</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>                <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">makeToast:</span><span class="n">error</span><span class="p">.</span><span class="n">shortMessage</span> <span class="nl">duration:</span><span class="mf">3.0</span> <span class="nl">position:</span><span class="s">@&quot;center&quot;</span> <span class="nl">title:</span><span class="s">@&quot;Error&quot;</span><span class="p">];</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span> <span class="nl">failure:</span><span class="o">^</span><span class="p">(</span><span class="n">NSError</span> <span class="o">*</span><span class="n">error</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>            <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">makeToast:</span><span class="p">[</span><span class="n">error</span> <span class="n">localizedDescription</span><span class="p">]</span> <span class="nl">duration:</span><span class="mf">3.0</span> <span class="nl">position:</span><span class="s">@&quot;center&quot;</span> <span class="nl">title:</span><span class="s">@&quot;Error&quot;</span><span class="p">];</span>
</span><span class='line'>        <span class="p">}];</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>More comments to the serivce call code:</p>

<blockquote><ol>
<li>I&#8217;ve added comments in the code so the whole service call flow should be easy to understand.</li>
<li>We used the eBay Shopping <code>findPopularItems</code> call, which takes a keyword as input, and will return a list of matched popular items on eBay, for demo, we just need one item to display, so we set <code>maxEntries</code> to 1.</li>
<li>In the success handling logic, we show the title and the image of the returned item, for demo, the image is downloaded synchronously, but in practice, you should download image asynchronously in order not to block main UI.</li>
<li>eBay Shopping service supports response resident error(RRE), so even we get a success response, we still need to check the response for resident error and handle it accordingly.</li>
<li>We used a thrid party library called &#8220;Toast&#8221; for producing toast like message, this is just for the convenience of demo, not necessary in your real project.</li>
<li>The <code>maxEntries</code> property of <code>Shopping_FindPopularItemsRequestType</code> is of type <code>NSNumber</code>,  you may get confused what kind of number should be put in maxEntries, short, int or long? please just consult the source of  <code>Shopping_FindPopularItemsRequestType.h</code>, it provides type hint as code comments, see [NSNumber type hint] below. Indeed, every type generated from wsdl has sufficient type hint to assist your development. Xsd annotations in wsdl/schema are also generated into corresponding interfaces/types, further facilitating your development.</li>
<li>Similarly, in response handling, the <code>item</code> property of <code>Shopping_SimpleItemArrayType</code> is of type <code>NSMutableArray</code>, you may get confused what is the actual entry type? please just consult the source of <code>Shopping_SimpleItemArrayType.h</code> for type hint, see [NSMuatableArray entry type hint] below.</li>
<li>Xsd enumeration is mapped to Objective-C <code>NSString</code> in Pico framework, for example, the <code>ack</code> property of <code>Shopping_FindPopularItemsResponseType</code> is of type <code>NSString</code>, in wsdl, it&#8217;s an xsd enumeration of type <code>AckCodeType</code>, the type hint in <code>Shopping_AbstractResponseType.h</code>(from which <code>Shopping_FindPopularItemsResponseType.h</code> extends) will tell you where to find the enum constants allowed by <code>ack</code> property, in this case, the allowed enum constants are in <code>Shopping_AckCodeType.h</code>, see [Enum type hint below] :</li>
</ol>
</blockquote>

<p>NSNumber type hint:</p>

<figure class='code'><figcaption><span>Shopping_FindPopularItemsRequestType.h </span><a href='https://github.com/bulldog2011/pico/blob/master/Examples/eBayShopping/eBayShopping/Proxy/Shopping_FindPopularItemsRequestType.h'>source  </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm">Specifies the maximum number of entries to return in a single call.</span>
</span><span class='line'><span class="cm">type : NSNumber, wrapper for primitive int</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span> <span class="n">retain</span><span class="p">)</span> <span class="n">NSNumber</span> <span class="o">*</span><span class="n">maxEntries</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>NSMutableArray entry type hint:</p>

<figure class='code'><figcaption><span>Shopping_SimpleItemArrayType.h </span><a href='https://github.com/bulldog2011/pico/blob/master/Examples/eBayShopping/eBayShopping/Proxy/Shopping_SimpleItemArrayType.h'>source  </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm">Contains data for an item listing.</span>
</span><span class='line'><span class="cm">entry type : class Shopping_SimpleItemType</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span> <span class="n">retain</span><span class="p">)</span> <span class="n">NSMutableArray</span> <span class="o">*</span><span class="n">item</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Enum type hint:</p>

<figure class='code'><figcaption><span>Shopping_AbstractResponseType.h </span><a href='https://github.com/bulldog2011/pico/blob/master/Examples/eBayShopping/eBayShopping/Proxy/Shopping_AbstractResponseType.h'>source  </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'> <span class="cm">/**</span>
</span><span class='line'><span class="cm">  </span>
</span><span class='line'><span class="cm">  Indicates whether the call was successfully processed by eBay.</span>
</span><span class='line'><span class="cm">  </span>
</span><span class='line'><span class="cm">  </span>
</span><span class='line'><span class="cm">  type: string constant in Shopping_AckCodeType.h</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'>  <span class="k">@property</span> <span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span> <span class="n">retain</span><span class="p">)</span> <span class="n">NSString</span> <span class="o">*</span><span class="n">ack</span><span class="p">;</span>
</span><span class='line'>  
</span></code></pre></td></tr></table></div></figure>


<p>Please don&#8217;t forget to include the shared client header file, it&#8217;s a best practice to include the generated Shopping_CommonTypes.h file which can free you from writing many import statements required by request building and response handling.</p>

<h2>Final Step - Run the Demo</h2>

<p>Let&#8217;s run the demo in iPhone simulator, see a sceen shot below:</p>

<p><img class="center" src="http://bulldog2011.github.com/images/pico/tutorial04/screen_shot1.png" width="300" height="500"></p>

<p>and the debug output:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>2013-03-30 11:50:48.084 HelloeBayShopping[3746:c07] Sending request to : http://open.api.ebay.com/shopping?
</span><span class='line'>2013-03-30 11:50:48.086 HelloeBayShopping[3746:c07] Request message:
</span><span class='line'>2013-03-30 11:50:48.086 HelloeBayShopping[3746:c07] &lt;?xml version="1.0" encoding="UTF-8" ?>
</span><span class='line'>&lt;FindPopularItemsRequest xmlns="urn:ebay:apis:eBLBaseComponents">
</span><span class='line'>  &lt;QueryKeywords>Ipad mini&lt;/QueryKeywords>
</span><span class='line'>  &lt;MaxEntries>1&lt;/MaxEntries>
</span><span class='line'>&lt;/FindPopularItemsRequest>
</span><span class='line'>2013-03-30 11:50:48.086 HelloeBayShopping[3746:c07] Request HTTP Headers : 
</span><span class='line'>{
</span><span class='line'>    Accept = "text/xml";
</span><span class='line'>    "Accept-Language" = "en, fr, de, ja, nl, it, es, pt, pt-PT, da, fi, nb, sv, ko, zh-Hans, zh-Hant, ru, pl, tr, uk, ar, hr, cs, el, he, ro, sk, th, id, ms, en-GB, ca, hu, vi, en-us;q=0.8";
</span><span class='line'>    "Content-Type" = "text/xml";
</span><span class='line'>    "User-Agent" = "HelloeBayShopping/1.0 (iPhone Simulator; iOS 6.0; Scale/1.00)";
</span><span class='line'>    "X-EBAY-API-APP-ID" = **************;
</span><span class='line'>    "X-EBAY-API-CALL-NAME" = FindPopularItems;
</span><span class='line'>    "X-EBAY-API-REQUEST-ENCODING" = XML;
</span><span class='line'>    "X-EBAY-API-SITE-ID" = 0;
</span><span class='line'>    "X-EBAY-API-VERSION" = 809;
</span><span class='line'>}
</span><span class='line'>2013-03-30 11:50:49.057 HelloeBayShopping[3746:1a03] Response HTTP headers : 
</span><span class='line'>{
</span><span class='line'>    "Cache-Control" = "no-cache";
</span><span class='line'>    Connection = "keep-alive";
</span><span class='line'>    "Content-Type" = "text/xml;charset=utf-8";
</span><span class='line'>    Date = "Sat, 30 Mar 2013 03:50:59 GMT";
</span><span class='line'>    Expires = "Sat, 25 Dec 1999 00:00:00 GMT";
</span><span class='line'>    "Last-Modified" = "Sat, 30 Mar 2013 03:51:00 GMT";
</span><span class='line'>    Pragma = "no-cache";
</span><span class='line'>    Server = "Apache-Coyote/1.1";
</span><span class='line'>    "Transfer-Encoding" = Identity;
</span><span class='line'>    "X-EBAY-API-BUILD-TAG" = "E817_CORE_APILW2_15902151_R1";
</span><span class='line'>    "X-EBAY-API-POOL-NAME" = "___cDRidW9rdDdlaHFg";
</span><span class='line'>    "X-EBAY-API-SERVER-NAME" = "___dWtgMWQ3MmYrNTE1YygyNSg+Nys3MDUrNDM5PTY/Mw==";
</span><span class='line'>    "X-EBAY-ESB-GUID" = "urn:uuid:A94C3221C939E291D6329443603678959471486594422";
</span><span class='line'>}
</span><span class='line'>2013-03-30 11:50:49.057 HelloeBayShopping[3746:4303] Response message : 
</span><span class='line'>2013-03-30 11:50:49.057 HelloeBayShopping[3746:4303] &lt;?xml version="1.0" encoding="UTF-8"?>
</span><span class='line'>
</span><span class='line'>  &lt;FindPopularItemsResponse xmlns="urn:ebay:apis:eBLBaseComponents">
</span><span class='line'>   &lt;Timestamp>2013-03-30T03:51:00.322Z&lt;/Timestamp>
</span><span class='line'>   &lt;Ack>Success&lt;/Ack>
</span><span class='line'>   &lt;Build>E817_CORE_APILW2_15902151_R1&lt;/Build>
</span><span class='line'>   &lt;Version>817&lt;/Version>
</span><span class='line'>   &lt;ItemArray>
</span><span class='line'>    &lt;Item>
</span><span class='line'>     &lt;ItemID>350692808075&lt;/ItemID>
</span><span class='line'>     &lt;EndTime>2013-04-15T17:23:27.000Z&lt;/EndTime>
</span><span class='line'>     &lt;ViewItemURLForNaturalSearch>http://www.ebay.com/itm/Apple-iPad-Mini-NEW-360-Degree-Rotating-PU-Leather-Case-Cover-w-Swivel-Stand-/350692808075&lt;/ViewItemURLForNaturalSearch>
</span><span class='line'>     &lt;ListingType>StoresFixedPrice&lt;/ListingType>
</span><span class='line'>     &lt;GalleryURL>http://thumbs4.ebaystatic.com/pict/3506928080758080_4.jpg&lt;/GalleryURL>
</span><span class='line'>     &lt;PrimaryCategoryID>176973&lt;/PrimaryCategoryID>
</span><span class='line'>     &lt;PrimaryCategoryName>Computers/Tablets &amp; Networking:iPad/Tablet/eBook Accessories:Cases, Covers, Keyboard Folios&lt;/PrimaryCategoryName>
</span><span class='line'>     &lt;BidCount>9529&lt;/BidCount>
</span><span class='line'>     &lt;ConvertedCurrentPrice currencyID="USD">7.75&lt;/ConvertedCurrentPrice>
</span><span class='line'>     &lt;ListingStatus>Active&lt;/ListingStatus>
</span><span class='line'>     &lt;TimeLeft>P16DT13H32M27S&lt;/TimeLeft>
</span><span class='line'>     &lt;Title>For Apple iPad Mini NEW 360 Degree Rotating PU Leather Case Cover w Swivel Stand&lt;/Title>
</span><span class='line'>     &lt;ShippingCostSummary>
</span><span class='line'>      &lt;ShippingServiceCost currencyID="USD">0.0&lt;/ShippingServiceCost>
</span><span class='line'>      &lt;ShippingType>Flat&lt;/ShippingType>
</span><span class='line'>      &lt;ListedShippingServiceCost currencyID="USD">0.0&lt;/ListedShippingServiceCost>
</span><span class='line'>     &lt;/ShippingCostSummary>
</span><span class='line'>     &lt;WatchCount>1681&lt;/WatchCount>
</span><span class='line'>    &lt;/Item>
</span><span class='line'>   &lt;/ItemArray>
</span><span class='line'>  &lt;/FindPopularItemsResponse></span></code></pre></td></tr></table></div></figure>


<p>let&#8217;s also try a error case, for example, if you forget to fill in your <code>eBayAppId</code> in the shared client, then you will get:
<img class="center" src="http://bulldog2011.github.com/images/pico/tutorial04/screen_shot2.png" width="300" height="500"></p>

<p>This is just a bare minimum eBay Shopping service based application, for a demo with more functions, please see the eBayDemoApp sample in the <code>Examples</code> folder of Pico source, eBayDemoApp is a composite app which calls two eBay services behind, this app searches eBay by calling eBay Finding service, shows a list of matched items on UI, when an item is clicked, it will show item details by calling eBay Shopping service, see a screen shot below.</p>

<p><img class="center" src="http://bulldog2011.github.com/images/pico/tutorial04/screen_shot3.png" width="300" height="500"></p>

<p>Now it&#8217;s your turn to create iOS applications based on eBay Shopping and eBay Finding web services, see your next great service based app.</p>

<h3>Update 1</h3>

<p>The eBay Shopping Service Proxy has been extracted as a standalone project, hosted <a href="https://github.com/bulldog2011/PicoEBayShoppingClient">here</a>, and the corresponding appledoc is hosted <a href="http://bulldog2011.github.com/PicoEBayShoppingClient/">here</a>, the appledoc is a useful programming reference. By the way, the doc annotations in wsdl are not only generated into the proxy code, but into the appledoc, assisting your development.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pico Tutorial 3 - Hello eBay Finding]]></title>
    <link href="http://bulldog2011.github.com/blog/2013/03/29/pico-tutorial-3-hello-ebay-finding/"/>
    <updated>2013-03-29T10:25:00+08:00</updated>
    <id>http://bulldog2011.github.com/blog/2013/03/29/pico-tutorial-3-hello-ebay-finding</id>
    <content type="html"><![CDATA[<p>This is the third tutorial of Pico tutorial series, in <a href="http://bulldog2011.github.com/blog/2013/03/27/pico-tutorial-a-stockquote-sample/">first</a> and <a href="http://bulldog2011.github.io/blog/2013/03/29/pico-tutorial-3-hello-ebay-finding/">second</a> tutorials, I showed you how to use Pico with simple web serivces like <a href="StockQuote](http://www.webservicex.net/ws/WSDetails.aspx?CATID=2&amp;WSID=9">StockQuote</a> and <a href="http://www.webservicex.net/ws/WSDetails.aspx?CATID=2&amp;WSID=10">CurrencyConverter</a>. These services are quite simple, only support one or two calls, and the request/response structures are fairly simple, supporting these simple services only can&#8217;t show the full power of Pico, so in this and later tutorials, I will show you how to use Pico with industrial grade services, let&#8217;s start with <a href="http://developer.ebay.com/DevZone/finding/CallRef/index.html">eBay Finding service</a>, please reivew its official site if you are not familiar with this service, bastially, it lets you search items on eBay. eBay Finding service supports SOAP 1.2, so I will also show you how to configure Pico to support SOAP 1.2 protocol, also I will show how to set service required HTTP headers on Pico client.</p>

<p>The source of this tutorial is <a href="https://github.com/bulldog2011/pico/tree/master/Examples/eBayFinding">here</a></p>

<!--more-->


<h2>Step 0 - Prerequisite</h2>

<p>I suppose you have already read Pico tutorial 1 and 2, and basically you should know:</p>

<blockquote><ul>
<li>The wsdl driven development process supported by Pico.</li>
<li>How to reference Pico as a static library in your project.</li>
<li>Or How to reference Pico Source directly in your project.</li>
</ul>
</blockquote>

<h2>Step 1 - Generate Objective-C Proxy from WSDL</h2>

<p>Download <a href="https://github.com/bulldog2011/mwsc">mwsc</a> and run following command in terminal to generate the proxy:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bin/mwsc -pico -d generated -prefix Finding_ -ebaysoa http://developer.ebay.com/webservices/Finding/latest/FindingService.wsdl</span></code></pre></td></tr></table></div></figure>


<p>Depends on the network speed, you may need to wait a few moments to let the code generator download the wsdl and generate code, you may also download the wsdl and run the code generator with a local wsdl.</p>

<p>A few comments about the codegen options:</p>

<blockquote><ul>
<li>I have added a prefix <code>Finding_</code> as codegen option, such that all interfaces/types generated will be prefixed. Adding prefix to Objective-C types is a recommended best practice to avoid possible type name conflict with code generated from other services, for example, eBay has a couple of SOA services, and they share a few commons types, without prefixing, you may get conflict if you use two or more eBay SOA services in one application.</li>
<li>I have added a special <code>-ebaysoa</code> codegen option, this is because eBay Finding service needs a per-call operation name HTTP header, I added this special flag in the code generator to let it generate the header for me, since I don&#8217;t want to add this header everytime I call an eBay Finding service, so this is just a special flag for eBay SOA services and for demo, or a hidden feature, not a generic codegen option.</li>
</ul>
</blockquote>

<h2>Step 2 - Create New iOS Project, Add Pico Library and Generated Proxy into Your Project</h2>

<p>Create a new simple iOS single view application named &#8220;HelloeBayFinding&#8221;, don&#8217;t choose ARC since Pico does not support ARC yet.</p>

<p>In this tutorial, we will reference Pico as a static library, suppose you have downloaded Pico source project from github site, then:</p>

<blockquote><ol>
<li>Drag the Pico xcodeproj into your project,</li>
<li>In the Build Phases of the target,  add <code>libPico.a</code> and <code>libxml2.dylib</code> to &#8220;Link Binary With Libraries&#8221; section.</li>
<li>In the Build Setting of the target, add [your path to Pico source] to &#8220;User Header Search Paths&#8221; setting, choose &#8220;recursive&#8221; seach path.</li>
</ol>
</blockquote>

<p>Build the project to ensure that it can build successfully.</p>

<p>Now drag the proxy generated in step 1 into the project,  choose &#8220;Copy items to destination group&#8217;s folder&#8221; and &#8220;add to targets&#8221; when prompted.</p>

<p>Build the project again to ensure that it can build successfully.</p>

<p>You may now review the eBay Finding service SOAP interface generated from wsdl, to learn what kinds of functions are provided by eBay Finding service, and what kinds of parameters are needed to call the serivce, the interface is posted below:</p>

<figure class='code'><figcaption><span>FindingServicePortType_SOAPClient.h </span><a href='https://github.com/bulldog2011/pico/blob/master/Examples/eBayFinding/eBayFinding/Proxy/client/FindingServicePortType_SOAPClient.h'>source </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">// Generated by wsdl compiler for ios/objective-c</span>
</span><span class='line'><span class="c1">// DO NOT CHANGE!</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="cp">#import &lt;Foundation/Foundation.h&gt;</span>
</span><span class='line'><span class="cp">#import &quot;PicoSOAPClient.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;Finding_GetVersionResponse.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;Finding_FindItemsAdvancedRequest.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;Finding_FindItemsAdvancedResponse.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;Finding_FindItemsForFavoriteSearchResponse.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;Finding_FindCompletedItemsRequest.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;Finding_GetSearchKeywordsRecommendationResponse.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;Finding_FindCompletedItemsResponse.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;Finding_FindItemsByImageResponse.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;Finding_FindItemsByProductRequest.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;Finding_FindItemsByImageRequest.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;Finding_FindItemsByKeywordsRequest.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;Finding_FindItemsByProductResponse.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;Finding_FindItemsIneBayStoresRequest.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;Finding_FindItemsByCategoryRequest.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;Finding_GetHistogramsRequest.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;Finding_GetSearchKeywordsRecommendationRequest.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;Finding_FindItemsIneBayStoresResponse.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;Finding_GetVersionRequest.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;Finding_FindItemsByCategoryResponse.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;Finding_FindItemsByKeywordsResponse.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;Finding_FindItemsForFavoriteSearchRequest.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;Finding_GetHistogramsResponse.h&quot;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> This class is the SOAP client to the FindingServicePortType Web Service.</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="k">@interface</span> <span class="nc">FindingServicePortType_SOAPClient</span> : <span class="nc">PicoSOAPClient</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> public method</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="o">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nl">getSearchKeywordsRecommendation:</span><span class="p">(</span><span class="n">Finding_GetSearchKeywordsRecommendationRequest</span> <span class="o">*</span><span class="p">)</span> <span class="n">requestObject</span>
</span><span class='line'>      <span class="nl">success:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">Finding_GetSearchKeywordsRecommendationResponse</span> <span class="o">*</span><span class="n">responseObject</span><span class="p">))</span><span class="n">success</span>
</span><span class='line'>      <span class="nl">failure:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">NSError</span> <span class="o">*</span><span class="n">error</span><span class="p">,</span> <span class="kt">id</span><span class="o">&lt;</span><span class="n">PicoBindable</span><span class="o">&gt;</span> <span class="n">soapFault</span><span class="p">))</span><span class="n">failure</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> public method</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">findItemsByKeywords:</span><span class="p">(</span><span class="n">Finding_FindItemsByKeywordsRequest</span> <span class="o">*</span><span class="p">)</span> <span class="n">requestObject</span>
</span><span class='line'>      <span class="nl">success:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">Finding_FindItemsByKeywordsResponse</span> <span class="o">*</span><span class="n">responseObject</span><span class="p">))</span><span class="n">success</span>
</span><span class='line'>      <span class="nl">failure:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">NSError</span> <span class="o">*</span><span class="n">error</span><span class="p">,</span> <span class="kt">id</span><span class="o">&lt;</span><span class="n">PicoBindable</span><span class="o">&gt;</span> <span class="n">soapFault</span><span class="p">))</span><span class="n">failure</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> public method</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">findItemsByCategory:</span><span class="p">(</span><span class="n">Finding_FindItemsByCategoryRequest</span> <span class="o">*</span><span class="p">)</span> <span class="n">requestObject</span>
</span><span class='line'>      <span class="nl">success:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">Finding_FindItemsByCategoryResponse</span> <span class="o">*</span><span class="n">responseObject</span><span class="p">))</span><span class="n">success</span>
</span><span class='line'>      <span class="nl">failure:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">NSError</span> <span class="o">*</span><span class="n">error</span><span class="p">,</span> <span class="kt">id</span><span class="o">&lt;</span><span class="n">PicoBindable</span><span class="o">&gt;</span> <span class="n">soapFault</span><span class="p">))</span><span class="n">failure</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> public method</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">findItemsAdvanced:</span><span class="p">(</span><span class="n">Finding_FindItemsAdvancedRequest</span> <span class="o">*</span><span class="p">)</span> <span class="n">requestObject</span>
</span><span class='line'>      <span class="nl">success:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">Finding_FindItemsAdvancedResponse</span> <span class="o">*</span><span class="n">responseObject</span><span class="p">))</span><span class="n">success</span>
</span><span class='line'>      <span class="nl">failure:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">NSError</span> <span class="o">*</span><span class="n">error</span><span class="p">,</span> <span class="kt">id</span><span class="o">&lt;</span><span class="n">PicoBindable</span><span class="o">&gt;</span> <span class="n">soapFault</span><span class="p">))</span><span class="n">failure</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> public method</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">findItemsByProduct:</span><span class="p">(</span><span class="n">Finding_FindItemsByProductRequest</span> <span class="o">*</span><span class="p">)</span> <span class="n">requestObject</span>
</span><span class='line'>      <span class="nl">success:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">Finding_FindItemsByProductResponse</span> <span class="o">*</span><span class="n">responseObject</span><span class="p">))</span><span class="n">success</span>
</span><span class='line'>      <span class="nl">failure:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">NSError</span> <span class="o">*</span><span class="n">error</span><span class="p">,</span> <span class="kt">id</span><span class="o">&lt;</span><span class="n">PicoBindable</span><span class="o">&gt;</span> <span class="n">soapFault</span><span class="p">))</span><span class="n">failure</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> public method</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">findItemsIneBayStores:</span><span class="p">(</span><span class="n">Finding_FindItemsIneBayStoresRequest</span> <span class="o">*</span><span class="p">)</span> <span class="n">requestObject</span>
</span><span class='line'>      <span class="nl">success:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">Finding_FindItemsIneBayStoresResponse</span> <span class="o">*</span><span class="n">responseObject</span><span class="p">))</span><span class="n">success</span>
</span><span class='line'>      <span class="nl">failure:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">NSError</span> <span class="o">*</span><span class="n">error</span><span class="p">,</span> <span class="kt">id</span><span class="o">&lt;</span><span class="n">PicoBindable</span><span class="o">&gt;</span> <span class="n">soapFault</span><span class="p">))</span><span class="n">failure</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> public method</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">findItemsByImage:</span><span class="p">(</span><span class="n">Finding_FindItemsByImageRequest</span> <span class="o">*</span><span class="p">)</span> <span class="n">requestObject</span>
</span><span class='line'>      <span class="nl">success:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">Finding_FindItemsByImageResponse</span> <span class="o">*</span><span class="n">responseObject</span><span class="p">))</span><span class="n">success</span>
</span><span class='line'>      <span class="nl">failure:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">NSError</span> <span class="o">*</span><span class="n">error</span><span class="p">,</span> <span class="kt">id</span><span class="o">&lt;</span><span class="n">PicoBindable</span><span class="o">&gt;</span> <span class="n">soapFault</span><span class="p">))</span><span class="n">failure</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> public method</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">getHistograms:</span><span class="p">(</span><span class="n">Finding_GetHistogramsRequest</span> <span class="o">*</span><span class="p">)</span> <span class="n">requestObject</span>
</span><span class='line'>      <span class="nl">success:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">Finding_GetHistogramsResponse</span> <span class="o">*</span><span class="n">responseObject</span><span class="p">))</span><span class="n">success</span>
</span><span class='line'>      <span class="nl">failure:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">NSError</span> <span class="o">*</span><span class="n">error</span><span class="p">,</span> <span class="kt">id</span><span class="o">&lt;</span><span class="n">PicoBindable</span><span class="o">&gt;</span> <span class="n">soapFault</span><span class="p">))</span><span class="n">failure</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> public method</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">findCompletedItems:</span><span class="p">(</span><span class="n">Finding_FindCompletedItemsRequest</span> <span class="o">*</span><span class="p">)</span> <span class="n">requestObject</span>
</span><span class='line'>      <span class="nl">success:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">Finding_FindCompletedItemsResponse</span> <span class="o">*</span><span class="n">responseObject</span><span class="p">))</span><span class="n">success</span>
</span><span class='line'>      <span class="nl">failure:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">NSError</span> <span class="o">*</span><span class="n">error</span><span class="p">,</span> <span class="kt">id</span><span class="o">&lt;</span><span class="n">PicoBindable</span><span class="o">&gt;</span> <span class="n">soapFault</span><span class="p">))</span><span class="n">failure</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> public method</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">getVersion:</span><span class="p">(</span><span class="n">Finding_GetVersionRequest</span> <span class="o">*</span><span class="p">)</span> <span class="n">requestObject</span>
</span><span class='line'>      <span class="nl">success:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">Finding_GetVersionResponse</span> <span class="o">*</span><span class="n">responseObject</span><span class="p">))</span><span class="n">success</span>
</span><span class='line'>      <span class="nl">failure:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">NSError</span> <span class="o">*</span><span class="n">error</span><span class="p">,</span> <span class="kt">id</span><span class="o">&lt;</span><span class="n">PicoBindable</span><span class="o">&gt;</span> <span class="n">soapFault</span><span class="p">))</span><span class="n">failure</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> public method</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">findItemsForFavoriteSearch:</span><span class="p">(</span><span class="n">Finding_FindItemsForFavoriteSearchRequest</span> <span class="o">*</span><span class="p">)</span> <span class="n">requestObject</span>
</span><span class='line'>      <span class="nl">success:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">Finding_FindItemsForFavoriteSearchResponse</span> <span class="o">*</span><span class="n">responseObject</span><span class="p">))</span><span class="n">success</span>
</span><span class='line'>      <span class="nl">failure:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">NSError</span> <span class="o">*</span><span class="n">error</span><span class="p">,</span> <span class="kt">id</span><span class="o">&lt;</span><span class="n">PicoBindable</span><span class="o">&gt;</span> <span class="n">soapFault</span><span class="p">))</span><span class="n">failure</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<p>All the methods in the interface follow same calling paradigm - you call the service with required request object and register success callback(for success handling logic) and failure callback(for error handling logic) using Objective-C block.</p>

<h2>Step 3 - Implement Appliction Logic and UI, Call Proxy to Invoke Web Service as Needed.</h2>

<p>First, create a shared service client as below:</p>

<figure class='code'><figcaption><span>EBayFindingServiceClient.h </span><a href='https://github.com/bulldog2011/pico/blob/master/Examples/eBayFinding/eBayFinding/EBayFindingServiceClient.h'>source </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &quot;FindingServicePortType_SOAPClient.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">EBayFindingServiceClient</span> : <span class="nc">FindingServicePortType_SOAPClient</span>
</span><span class='line'>
</span><span class='line'><span class="k">+</span> <span class="p">(</span><span class="n">EBayFindingServiceClient</span> <span class="o">*</span><span class="p">)</span><span class="nf">sharedClient</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>EBayFindingServiceClient.m </span><a href='https://github.com/bulldog2011/pico/blob/master/Examples/eBayFinding/eBayFinding/EBayFindingServiceClient.m'>source  </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &quot;EBayFindingServiceClient.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">static</span> <span class="n">NSString</span> <span class="o">*</span><span class="k">const</span> <span class="n">eBayAppId</span> <span class="o">=</span> <span class="s">@&quot;YOUR APPID HERE&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// production</span>
</span><span class='line'><span class="k">static</span> <span class="n">NSString</span> <span class="o">*</span><span class="k">const</span> <span class="n">eBayFindingServiceURLString</span> <span class="o">=</span> <span class="s">@&quot;http://svcs.ebay.com/services/search/FindingService/v1&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// sandbox</span>
</span><span class='line'><span class="c1">//static NSString *const eBayFindingServiceURLString = @&quot;http://svcs.sandbox.ebay.com/services/search/FindingService/v1&quot;;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">EBayFindingServiceClient</span>
</span><span class='line'>
</span><span class='line'><span class="k">+</span> <span class="p">(</span><span class="n">EBayFindingServiceClient</span> <span class="o">*</span><span class="p">)</span><span class="nf">sharedClient</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">static</span> <span class="n">EBayFindingServiceClient</span> <span class="o">*</span><span class="n">_sharedClient</span> <span class="o">=</span> <span class="nb">nil</span><span class="p">;</span>
</span><span class='line'>    <span class="k">static</span> <span class="n">dispatch_once_t</span> <span class="n">onceToken</span><span class="p">;</span>
</span><span class='line'>    <span class="n">dispatch_once</span><span class="p">(</span><span class="o">&amp;</span><span class="n">onceToken</span><span class="p">,</span> <span class="o">^</span><span class="p">{</span>
</span><span class='line'>        <span class="n">_sharedClient</span> <span class="o">=</span> <span class="p">[[</span><span class="n">EBayFindingServiceClient</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithEndpointURL:</span><span class="p">[</span><span class="n">NSURL</span> <span class="nl">URLWithString:</span><span class="n">eBayFindingServiceURLString</span><span class="p">]];</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">_sharedClient</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nf">initWithEndpointURL:</span><span class="p">(</span><span class="n">NSURL</span> <span class="o">*</span><span class="p">)</span><span class="nv">URL</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">self</span> <span class="o">=</span> <span class="p">[</span><span class="n">super</span> <span class="nl">initWithEndpointURL:</span><span class="n">URL</span><span class="p">];</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">self</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="nb">nil</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">self</span><span class="p">.</span><span class="n">soapVersion</span> <span class="o">=</span> <span class="n">SOAP12</span><span class="p">;</span> <span class="c1">// eBay finding service supports SOAP 12</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span> <span class="nl">setDefaultHeader:</span><span class="s">@&quot;Accept&quot;</span> <span class="nl">value:</span><span class="s">@&quot;application/soap+xml&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span> <span class="nl">setDefaultHeader:</span><span class="s">@&quot;Content-Type&quot;</span> <span class="nl">value:</span><span class="s">@&quot;application/soap+xml&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="n">super</span> <span class="nl">setDefaultHeader:</span><span class="s">@&quot;X-EBAY-SOA-SECURITY-APPNAME&quot;</span> <span class="nl">value:</span><span class="n">eBayAppId</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">super</span> <span class="nl">setDefaultHeader:</span><span class="s">@&quot;X-EBAY-SOA-MESSAGE-PROTOCOL&quot;</span> <span class="nl">value:</span><span class="s">@&quot;SOAP12&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">super</span> <span class="nl">setDefaultHeader:</span><span class="s">@&quot;X-EBAY-SOA-REQUEST-DATA-FORMAT&quot;</span> <span class="nl">value:</span><span class="s">@&quot;SOAP&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">self</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<p>The shared client for eBay Finding service is a little more complex than the simple serivce client in tutorial 1 and 2, this is because that eBay Finding service needs a few HTTP headers set to work, let me give more comments:</p>

<blockquote><ol>
<li>eBay Finding service support SOAP12, so we set the client to use <code>SOAP12</code> protocol, this is not necessary since eBay Finding service also supports SOAP11(which is Pico default), we use SOAP12 here just for demo and to show the capability of Pico.</li>
<li>eBay Finding service needs to set a few HTTP headers to work, for a list of required headers, please refer to doc <a href="http://developer.ebay.com/DevZone/finding/Concepts/MakingACall.html">here</a>.</li>
<li>One mandatory header for eBay Finding service is <code>eBayAppId</code>, you need to register on eBay developer site as an eBay developer then get this id, before your can run this demo, you must fill in your own eBayAppId in the shared client.</li>
</ol>
</blockquote>

<p>Now the UI part, for this hello world like sample, we just need a UITextField for keyword input and UIButton to trigger eBay search by invoking method <code>searchButtonPressed</code> which will indirectly call eBay Finding service through the proxy, fairly simple, see definition in header file <a href="https://github.com/bulldog2011/pico/blob/master/Examples/eBayFinding/eBayFinding/ViewController.h">ViewController.h</a> and instantiation in implementation file <a href="https://github.com/bulldog2011/pico/blob/master/Examples/eBayFinding/eBayFinding/ViewController.m">ViewController.m</a>.</p>

<p>Now implement the <code>searchButtonPressed</code> method by invoking service as below:</p>

<figure class='code'><figcaption><span>ViewController.m </span><a href='https://github.com/bulldog2011/pico/blob/master/Examples/eBayFinding/eBayFinding/ViewController.m'>source  </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &quot;ViewController.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;EBayFindingServiceClient.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;Finding_CommonTypes.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;SOAP12Fault.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;SOAP12Faultreason.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;SOAP12Detail.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;SOAP12Reasontext.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#import &quot;Toast+UIView.h&quot;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">searchButtonPressed:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">sender</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// Hide the keyboard.</span>
</span><span class='line'>    <span class="p">[</span><span class="n">_searchText</span> <span class="n">resignFirstResponder</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">_searchText</span><span class="p">.</span><span class="n">text</span><span class="p">.</span><span class="n">length</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// start progress activity</span>
</span><span class='line'>        <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="n">makeToastActivity</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Get shared service client</span>
</span><span class='line'>        <span class="n">EBayFindingServiceClient</span> <span class="o">*</span><span class="n">findingClient</span> <span class="o">=</span> <span class="p">[</span><span class="n">EBayFindingServiceClient</span> <span class="n">sharedClient</span><span class="p">];</span>
</span><span class='line'>        <span class="n">findingClient</span><span class="p">.</span><span class="n">debug</span> <span class="o">=</span> <span class="n">YES</span><span class="p">;</span> <span class="c1">// enable request/response message logging</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Build request object</span>
</span><span class='line'>        <span class="n">Finding_FindItemsByKeywordsRequest</span> <span class="o">*</span><span class="n">request</span> <span class="o">=</span> <span class="p">[[[</span><span class="n">Finding_FindItemsByKeywordsRequest</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">]</span> <span class="n">autorelease</span><span class="p">];</span>
</span><span class='line'>        <span class="n">request</span><span class="p">.</span><span class="n">keywords</span> <span class="o">=</span> <span class="n">_searchText</span><span class="p">.</span><span class="n">text</span><span class="p">;</span>
</span><span class='line'>        <span class="c1">// only need one item for demo</span>
</span><span class='line'>        <span class="n">Finding_PaginationInput</span> <span class="o">*</span><span class="n">pagination</span> <span class="o">=</span> <span class="p">[[</span><span class="n">Finding_PaginationInput</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>        <span class="n">pagination</span><span class="p">.</span><span class="n">pageNumber</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSNumber</span> <span class="nl">numberWithInt:</span><span class="mi">1</span><span class="p">];</span>
</span><span class='line'>        <span class="n">pagination</span><span class="p">.</span><span class="n">entriesPerPage</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSNumber</span> <span class="nl">numberWithInt:</span><span class="mi">1</span><span class="p">];</span>
</span><span class='line'>        <span class="n">request</span><span class="p">.</span><span class="n">paginationInput</span> <span class="o">=</span> <span class="n">pagination</span><span class="p">;</span>
</span><span class='line'>        <span class="p">[</span><span class="n">pagination</span> <span class="n">release</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// make API call and register callbacks</span>
</span><span class='line'>        <span class="p">[</span><span class="n">findingClient</span> <span class="nl">findItemsByKeywords:</span><span class="n">request</span> <span class="nl">success:</span><span class="o">^</span><span class="p">(</span><span class="n">Finding_FindItemsByKeywordsResponse</span> <span class="o">*</span><span class="n">responseObject</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">// stop progress activity</span>
</span><span class='line'>            <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="n">hideToastActivity</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">if</span> <span class="p">([</span><span class="n">Finding_AckValue_SUCCESS</span> <span class="nl">isEqualToString:</span><span class="n">responseObject</span><span class="p">.</span><span class="n">ack</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="n">responseObject</span><span class="p">.</span><span class="n">searchResult</span><span class="p">.</span><span class="n">count</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                    <span class="c1">// show the title of the first found item</span>
</span><span class='line'>                    <span class="n">Finding_SearchItem</span> <span class="o">*</span><span class="n">item</span> <span class="o">=</span> <span class="p">[</span><span class="n">responseObject</span><span class="p">.</span><span class="n">searchResult</span><span class="p">.</span><span class="n">item</span> <span class="nl">objectAtIndex:</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>                    <span class="c1">// start image downloading progress activity</span>
</span><span class='line'>                    <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="n">makeToastActivity</span><span class="p">];</span>
</span><span class='line'>                    <span class="c1">// get gallery image</span>
</span><span class='line'>                    <span class="n">NSURL</span> <span class="o">*</span><span class="n">imageURL</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSURL</span> <span class="nl">URLWithString:</span><span class="n">item</span><span class="p">.</span><span class="n">galleryURL</span><span class="p">];</span>
</span><span class='line'>                    <span class="n">NSData</span> <span class="o">*</span><span class="n">imageData</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSData</span> <span class="nl">dataWithContentsOfURL:</span><span class="n">imageURL</span><span class="p">];</span>
</span><span class='line'>                    <span class="c1">// stop progress activity</span>
</span><span class='line'>                    <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="n">hideToastActivity</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>                    <span class="n">UIImage</span> <span class="o">*</span><span class="n">image</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIImage</span> <span class="nl">imageWithData:</span><span class="n">imageData</span><span class="p">];</span>
</span><span class='line'>                    <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">makeToast:</span><span class="n">item</span><span class="p">.</span><span class="n">title</span> <span class="nl">duration:</span><span class="mf">3.0</span> <span class="nl">position:</span><span class="s">@&quot;center&quot;</span> <span class="nl">title:</span><span class="s">@&quot;Success&quot;</span> <span class="nl">image:</span><span class="n">image</span><span class="p">];</span>
</span><span class='line'>                <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>                    <span class="c1">// no result</span>
</span><span class='line'>                    <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">makeToast:</span><span class="s">@&quot;No result&quot;</span> <span class="nl">duration:</span><span class="mf">3.0</span> <span class="nl">position:</span><span class="s">@&quot;center&quot;</span><span class="p">];</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span> <span class="c1">// response residenet error</span>
</span><span class='line'>                <span class="n">Finding_ErrorData</span> <span class="o">*</span><span class="n">errorData</span> <span class="o">=</span> <span class="p">[</span><span class="n">responseObject</span><span class="p">.</span><span class="n">errorMessage</span><span class="p">.</span><span class="n">error</span> <span class="nl">objectAtIndex:</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>                <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">makeToast:</span><span class="n">errorData</span><span class="p">.</span><span class="n">message</span> <span class="nl">duration:</span><span class="mf">3.0</span> <span class="nl">position:</span><span class="s">@&quot;center&quot;</span> <span class="nl">title:</span><span class="s">@&quot;Error&quot;</span><span class="p">];</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span> <span class="nl">failure:</span><span class="o">^</span><span class="p">(</span><span class="n">NSError</span> <span class="o">*</span><span class="n">error</span><span class="p">,</span> <span class="kt">id</span><span class="o">&lt;</span><span class="n">PicoBindable</span><span class="o">&gt;</span> <span class="n">soapFault</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">// stop progress activity</span>
</span><span class='line'>            <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="n">hideToastActivity</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="n">error</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">makeToast:</span><span class="p">[</span><span class="n">error</span> <span class="n">localizedDescription</span><span class="p">]</span> <span class="nl">duration:</span><span class="mf">3.0</span> <span class="nl">position:</span><span class="s">@&quot;center&quot;</span> <span class="nl">title:</span><span class="s">@&quot;Error&quot;</span><span class="p">];</span>
</span><span class='line'>            <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">soapFault</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">SOAP12Fault</span> <span class="o">*</span><span class="n">soap12Fault</span> <span class="o">=</span> <span class="p">(</span><span class="n">SOAP12Fault</span> <span class="o">*</span><span class="p">)</span><span class="n">soapFault</span><span class="p">;</span>
</span><span class='line'>                <span class="n">SOAP12Reasontext</span> <span class="o">*</span><span class="n">reasonText</span> <span class="o">=</span> <span class="p">[</span><span class="n">soap12Fault</span><span class="p">.</span><span class="n">reason</span><span class="p">.</span><span class="n">text</span> <span class="nl">objectAtIndex:</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>                <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">makeToast:</span><span class="n">reasonText</span><span class="p">.</span><span class="n">value</span> <span class="nl">duration:</span><span class="mf">3.0</span> <span class="nl">position:</span><span class="s">@&quot;center&quot;</span> <span class="nl">title:</span><span class="s">@&quot;SOAP Fault&quot;</span><span class="p">];</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}];</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>More comments to the serivce call code:</p>

<blockquote><ol>
<li>I&#8217;ve added comments in the code so the whole service call flow should be easy to understand.</li>
<li>We used the eBay Finding <code>FindItemsByKeywords</code> call, which takes a keyword as input, and will return a list of matched items, for demo, we just need one item to display, so we set entries per page to 1.</li>
<li>In the success handling logic, we show the title and the image of the returned item, for demo, the image is downloaded synchronously, but in practice, you should download image asynchronously in order not to block main UI.</li>
<li>Since we set the client to use SOAP12 protocol, in the error handling logic, we need to cast the soapFault variable to type <code>SOAP12Fault</code> and handle it accordingly.</li>
<li>eBay Finding service support response resident error(RRE), so even we get a success response, we still need to check the response for resident error and handle it accordingly.</li>
<li>We used a thrid party library called &#8220;Toast&#8221; for producing toast like message, this is just for the convenience of demo, not necessary in your real project.</li>
</ol>
</blockquote>

<p>Regarding type hint:</p>

<p>The <code>pageNumber</code> property of <code>Finding_PaginationInput</code> is of type <code>NSNumber</code>, you may get confused what kind of number should be put in PageNumber, short, int or long? Please just consult the source of <code>Finding_PaginationInput.h</code>, it provides type hint as code comments, see sample below. Indeed, every type generated from wsdl has sufficient type hint to assist your development. Xsd annotations in wsdl/schema are also generated into corresponding interfaces/types, further facilitating your development</p>

<figure class='code'><figcaption><span>Finding_PaginationInput.h </span><a href='https://github.com/bulldog2011/pico/blob/master/Examples/eBayFinding/eBayFinding/Proxy/Finding_PaginationInput.h'>source  </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm">Specifies which subset of data (or &quot;page&quot;) to return in the call</span>
</span><span class='line'><span class="cm">response. The number of data pages is determined by the total number of</span>
</span><span class='line'><span class="cm">items matching the request search criteria (returned in</span>
</span><span class='line'><span class="cm">paginationOutput.totalEntries) divided by the number of entries to</span>
</span><span class='line'><span class="cm">display in each response (entriesPerPage). You can return up to the first</span>
</span><span class='line'><span class="cm">100 pages of the result set by issuing multiple requests and specifying,</span>
</span><span class='line'><span class="cm">in sequence, the pages to return.</span>
</span><span class='line'><span class="cm">type : NSNumber, wrapper for primitive int</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span> <span class="n">retain</span><span class="p">)</span> <span class="n">NSNumber</span> <span class="o">*</span><span class="n">pageNumber</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>In response handling, the <code>item</code> property of <code>Finding_SearchResult</code> is of type <code>NSMutableArray</code>, you may get confused what is the actual entry type? please just consult the source of <code>Finding_SearchResult.h</code> for type hint, see sample below:</p>

<figure class='code'><figcaption><span>Finding_SearchResult.h </span><a href='https://github.com/bulldog2011/pico/blob/master/Examples/eBayFinding/eBayFinding/Proxy/Finding_SearchResult.h'>source  </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> </span>
</span><span class='line'><span class="cm"> Container for the data of a single item that matches the search criteria.</span>
</span><span class='line'><span class="cm"> </span>
</span><span class='line'><span class="cm"> </span>
</span><span class='line'><span class="cm"> entry type : class Finding_SearchItem</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span> <span class="n">retain</span><span class="p">)</span> <span class="n">NSMutableArray</span> <span class="o">*</span><span class="n">item</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Xsd enumeration is mapped to Objective-C <code>NSString</code> in Pico framework, for example, the <code>ack</code> property of <code>Finding_FindItemsByKeywordsResponse</code> is of type <code>NSString</code>, in wsdl, it&#8217;s an xsd enumeration of type <code>AckValue</code>, the type hint in <code>Finding_BaseServiceResponse.h</code>(from which <code>Finding_FindItemsByKeywordsResponse.h</code> extends) will tell you where to find the enum constants allowed by <code>ack</code> property, in this case, the allowed enum constants are in <code>Finding_AckValue.h</code>, see sample below :</p>

<figure class='code'><figcaption><span>Finding_BaseServiceResponse.h</span><a href='https://github.com/bulldog2011/pico/blob/master/Examples/eBayFinding/eBayFinding/Proxy/Finding_BaseServiceResponse.h'>source  </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> </span>
</span><span class='line'><span class="cm"> Indicates whether or not errors or warnings were generated during the</span>
</span><span class='line'><span class="cm"> processing of the request.</span>
</span><span class='line'><span class="cm"> </span>
</span><span class='line'><span class="cm"> </span>
</span><span class='line'><span class="cm"> type: string constant in Finding_AckValue.h</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span> <span class="n">retain</span><span class="p">)</span> <span class="n">NSString</span> <span class="o">*</span><span class="n">ack</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>At last, please don&#8217;t forget to include the shared client and SOAP12 related header files, it&#8217;s a best practice to include the generated Finding_CommonTypes.h file which can free you from writing many import statements required by request building and response handling.</p>

<h2>Final Step - Run the Demo</h2>

<p>This time let&#8217;s run the demo on a real iPod Touch 4 device with iOS 4.3.3, see a screen shot below:</p>

<p><img class="center" src="http://bulldog2011.github.com/images/pico/tutorial03/screen_shot1.png" width="300" height="500"></p>

<p>and the debug output:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>2013-03-29 12:21:53.963 HelloeBayFinding[180:607] Sending request to : http://svcs.ebay.com/services/search/FindingService/v1
</span><span class='line'>2013-03-29 12:21:53.979 HelloeBayFinding[180:607] Request message:
</span><span class='line'>2013-03-29 12:21:53.981 HelloeBayFinding[180:607] &lt;?xml version="1.0" encoding="UTF-8" ?>
</span><span class='line'>&lt;soapenv:Envelope xmlns:soapenv="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.ebay.com/marketplace/search/v1/services">
</span><span class='line'>  &lt;soapenv:Body>
</span><span class='line'>      &lt;findItemsByKeywordsRequest>
</span><span class='line'>          &lt;paginationInput>
</span><span class='line'>              &lt;pageNumber>1&lt;/pageNumber>
</span><span class='line'>              &lt;entriesPerPage>1&lt;/entriesPerPage>
</span><span class='line'>          &lt;/paginationInput>
</span><span class='line'>          &lt;keywords>iPad 3&lt;/keywords>
</span><span class='line'>      &lt;/findItemsByKeywordsRequest>
</span><span class='line'>  &lt;/soapenv:Body>
</span><span class='line'>&lt;/soapenv:Envelope>
</span><span class='line'>2013-03-29 12:21:53.989 HelloeBayFinding[180:607] Request HTTP Headers : 
</span><span class='line'>{
</span><span class='line'>    Accept = "application/soap+xml";
</span><span class='line'>    "Accept-Language" = "zh-Hans, en, fr, de, ja, nl, it, es, pt, pt-PT, da, fi, nb, sv, ko, zh-Hant, ru, pl, tr, uk, ar, hr, cs, el, he, ro, sk, th, id, ms, en-GB, ca, hu, vi, en-us;q=0.8";
</span><span class='line'>    "Content-Type" = "application/soap+xml";
</span><span class='line'>    "User-Agent" = "HelloeBayFinding/1.0 (iPod touch; iOS 4.3.3; Scale/2.00)";
</span><span class='line'>    "X-Ebay-Soa-Message-Protocol" = SOAP12;
</span><span class='line'>    "X-Ebay-Soa-Operation-Name" = findItemsByKeywords;
</span><span class='line'>    "X-Ebay-Soa-Request-Data-Format" = SOAP;
</span><span class='line'>    "X-Ebay-Soa-Security-Appname" = ************;
</span><span class='line'>}
</span><span class='line'>2013-03-29 12:21:55.446 HelloeBayFinding[180:1a03] Response HTTP status : 
</span><span class='line'>200
</span><span class='line'>2013-03-29 12:21:55.452 HelloeBayFinding[180:1a03] Response HTTP headers : 
</span><span class='line'>{
</span><span class='line'>    Connection = "keep-alive";
</span><span class='line'>    "Content-Encoding" = gzip;
</span><span class='line'>    "Content-Type" = "application/soap+xml;charset=UTF-8";
</span><span class='line'>    Date = "Fri, 29 Mar 2013 04:21:59 GMT";
</span><span class='line'>    Server = "Apache-Coyote/1.1";
</span><span class='line'>    "Transfer-Encoding" = Identity;
</span><span class='line'>    "X-Ebay-Esb-Endpointurl" = "/Root/ESBFunctions/Services/Ports/7002/profile/search/v1/FindingService/destination_default/address_synapse";
</span><span class='line'>    "X-Ebay-Esb-Guid" = "urn:uuid:E626354F8F2A3156CE1365170887318";
</span><span class='line'>    "X-Ebay-Soa-Locale-List" = "en-US_US";
</span><span class='line'>    "X-Ebay-Soa-Message-Protocol" = SOAP12;
</span><span class='line'>    "X-Ebay-Soa-Operation-Name" = findItemsByKeywords;
</span><span class='line'>    "X-Ebay-Soa-Request-Id" = "13db4617-6bd0-a0a2-2d44-7514ffcfbc4b!FindingService!10.10.34.212!v3apifindingcore[!FindItemServiceNextGen!10.10.34.212!v3apifindingcore[!MetadataDependencyService!10.86.122.59!v3mddscore[]]]";
</span><span class='line'>    "X-Ebay-Soa-Response-Data-Format" = XML;
</span><span class='line'>    "X-Ebay-Soa-Service-Metrics" = 266275234;
</span><span class='line'>    "X-Ebay-Soa-Service-Name" = "{http://www.ebay.com/marketplace/search/v1/services}FindingService";
</span><span class='line'>    "X-Ebay-Soa-Service-Version" = "1.12.0";
</span><span class='line'>}
</span><span class='line'>2013-03-29 12:21:55.460 HelloeBayFinding[180:650f] Response message : 
</span><span class='line'>2013-03-29 12:21:55.467 HelloeBayFinding[180:650f] &lt;?xml version='1.0' encoding='utf-8'?>&lt;soapenv:Envelope xmlns:soapenv="http://www.w3.org/2003/05/soap-envelope">&lt;soapenv:Header/>&lt;soapenv:Body>&lt;findItemsByKeywordsResponse xmlns="http://www.ebay.com/marketplace/search/v1/services">&lt;ack>Success&lt;/ack>&lt;version>1.12.0&lt;/version>&lt;timestamp>2013-03-29T04:21:59.429Z&lt;/timestamp>&lt;searchResult count="1">&lt;item>&lt;itemId>200910323546&lt;/itemId>&lt;title>Apple iPad 3rd Generation 16GB, Wi-Fi, 9.7in - White Grade B&lt;/title>&lt;globalId>EBAY-US&lt;/globalId>&lt;primaryCategory>&lt;categoryId>171485&lt;/categoryId>&lt;categoryName>iPads, Tablets &amp; eBook Readers&lt;/categoryName>&lt;/primaryCategory>&lt;galleryURL>http://thumbs3.ebaystatic.com/m/mdIP8tQ1uohjPjsWmhz9q8w/140.jpg&lt;/galleryURL>&lt;viewItemURL>http://www.ebay.com/itm/Apple-iPad-3rd-Generation-16GB-Wi-Fi-9-7in-White-Grade-B-/200910323546?pt=US_Tablets&lt;/viewItemURL>&lt;productId type="ReferenceID">109304845&lt;/productId>&lt;paymentMethod>CashOnPickup&lt;/paymentMethod>&lt;paymentMethod>PayPal&lt;/paymentMethod>&lt;autoPay>false&lt;/autoPay>&lt;postalCode>08753&lt;/postalCode>&lt;location>Toms River,NJ,USA&lt;/location>&lt;country>US&lt;/country>&lt;shippingInfo>&lt;shippingServiceCost currencyId="USD">0.0&lt;/shippingServiceCost>&lt;shippingType>Free&lt;/shippingType>&lt;shipToLocations>US&lt;/shipToLocations>&lt;expeditedShipping>false&lt;/expeditedShipping>&lt;oneDayShippingAvailable>false&lt;/oneDayShippingAvailable>&lt;handlingTime>1&lt;/handlingTime>&lt;/shippingInfo>&lt;sellingStatus>&lt;currentPrice currencyId="USD">402.99&lt;/currentPrice>&lt;convertedCurrentPrice currencyId="USD">402.99&lt;/convertedCurrentPrice>&lt;sellingState>Active&lt;/sellingState>&lt;timeLeft>P29DT10H4M7S&lt;/timeLeft>&lt;/sellingStatus>&lt;listingInfo>&lt;bestOfferEnabled>false&lt;/bestOfferEnabled>&lt;buyItNowAvailable>false&lt;/buyItNowAvailable>&lt;startTime>2013-03-28T14:21:06.000Z&lt;/startTime>&lt;endTime>2013-04-27T14:26:06.000Z&lt;/endTime>&lt;listingType>FixedPrice&lt;/listingType>&lt;gift>false&lt;/gift>&lt;/listingInfo>&lt;returnsAccepted>true&lt;/returnsAccepted>&lt;condition>&lt;conditionId>2500&lt;/conditionId>&lt;conditionDisplayName>Seller refurbished&lt;/conditionDisplayName>&lt;/condition>&lt;isMultiVariationListing>false&lt;/isMultiVariationListing>&lt;topRatedListing>true&lt;/topRatedListing>&lt;/item>&lt;/searchResult>&lt;paginationOutput>&lt;pageNumber>1&lt;/pageNumber>&lt;entriesPerPage>1&lt;/entriesPerPage>&lt;totalPages>113843&lt;/totalPages>&lt;totalEntries>113843&lt;/totalEntries>&lt;/paginationOutput>&lt;itemSearchURL>http://www.ebay.com/sch/i.html?_nkw=iPad+3&amp;_ddo=1&amp;_ipg=1&amp;_pgn=1&lt;/itemSearchURL>&lt;/findItemsByKeywordsResponse>&lt;/soapenv:Body>&lt;/soapenv:Envelope></span></code></pre></td></tr></table></div></figure>


<p>let&#8217;s also try a soap fault case, for example, if you forget to fill in your <code>eBayAppId</code> in the shared client, then you will get:
<img class="center" src="http://bulldog2011.github.com/images/pico/tutorial03/screen_shot2.png" width="300" height="500"></p>

<p>This is just a bare minimum eBay Finding service based application, for a demo with more functions, please see the eBayDemoApp sample in the <code>Examples</code> folder of Pico source, eBayDemoApp is a composite app which calls two eBay serivces behind, this app searches eBay by calling eBay Fining service, showes a list of matched items on UI, when an item is clicked, it will show item details by calling eBay Shopping service, see a screen shot below.</p>

<p><img class="center" src="http://bulldog2011.github.com/images/pico/tutorial03/screen_shot3.png" width="300" height="500"></p>

<p>Now it&#8217;s your turn to create iOS applications based on eBay Finding web service, see your next great service based app.</p>

<h3>Update 1</h3>

<p>The eBay Finding Service Proxy has been extracted as a standalone project, hosted <a href="https://github.com/bulldog2011/PicoEBayFindingClient">here</a>, and the corresponding appledoc is hosted <a href="http://bulldog2011.github.com/PicoEBayFindingClient/">here</a>, the appledoc is a useful programming reference. By the way, the doc annotations in wsdl are not only generted into the proxy code, but into the appledoc, assisting your development.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pico Tutorial 2 - a Currency Converter Sample]]></title>
    <link href="http://bulldog2011.github.com/blog/2013/03/28/pico-tutorial-2-a-currency-converter-sample/"/>
    <updated>2013-03-28T20:38:00+08:00</updated>
    <id>http://bulldog2011.github.com/blog/2013/03/28/pico-tutorial-2-a-currency-converter-sample</id>
    <content type="html"><![CDATA[<p>This is the second tutorial of Pico Tutorial series, in the <a href="http://bulldog2011.github.com/blog/2013/03/27/pico-tutorial-a-stockquote-sample/">first tutorial</a>, I showed how to use Pico with a service called <a href="http://www.webservicex.net/ws/WSDetails.aspx?CATID=2&amp;WSID=9">StockQuote</a> from webserivceX.NET. Today I will show you how to use Pico with another service called <a href="http://www.webservicex.net/ws/WSDetails.aspx?CATID=2&amp;WSID=10">CurrencyConverter</a>, also from webserviceX.NET, in first tutorial, I showed you how to reference Pico as a static library, in this tutorial, I will show you how to reference the Pico source in your project. By the way, since the wsdl driven development process in both tutorials are quite similar, I won&#8217;t repeat too much details in this tutorial, I suppose you have already read tutorial one and basically understand the wsdl driven development process supported by Pico.</p>

<p>The whole source of this tutorial is <a href="https://github.com/bulldog2011/pico/tree/master/Examples/CurrencyConverter">here</a>.</p>

<p>Let&#8217;s cut to the point:</p>

<!--more-->


<h2>Step 1 - Generate Objective-C Proxy from WSDL</h2>

<p>Download <a href="https://github.com/bulldog2011/mwsc">mwsc</a> and run following command in terminal to generate the proxy:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bin/mwsc -pico -d generated http://www.webservicex.net/CurrencyConvertor.asmx?WSDL</span></code></pre></td></tr></table></div></figure>


<p>A few comments to the generated code:</p>

<blockquote><ul>
<li>By default, the proxy code will be generated in the sub-folder corresponding to the target namespace of the wsdl.</li>
<li>There is a generated folder called <code>client</code>, the SOAP and XML proxy interface will be generated in this folder.</li>
<li>There is a generated folder called <code>common</code>, a common header file will be generated in this folder, the common header includes headers of all types generated from wsdl/schema, use this header file can free you from writing many import statements in your project when you build request or handle response needed by service call.</li>
</ul>
</blockquote>

<h2>Step 2 - Create New iOS Project, Add Pico Library and Generated Proxy into Your Project</h2>

<p>Create a new simple iOS single view application named &#8220;CurrencyConverter&#8221;, don&#8217;t choose ARC, download Pico source and drag the whole <code>PicoSource</code> folder into the project, choose &#8220;Copy items to destination group&#8217;s folder&#8221; and &#8220;add to targets&#8221; when prompted. Then do following settings to the project:</p>

<blockquote><ol>
<li>In Target Build Setting, add the <code>-ObjC</code> flag to your &#8220;Other Linker flags&#8221;.</li>
<li>In Target Build Setting, add <code>/usr/include/libxml2</code> to your &#8220;Header Search Paths&#8221;</li>
<li>In Target Build Phases, link binary with library <code>libxml2.dylib</code></li>
</ol>
</blockquote>

<p>Build the the project to ensure that it can build successfully.</p>

<p>Now drag the proxy generated in step 1 into the project,  choose &#8220;Copy items to destination group&#8217;s folder&#8221; and &#8220;add to targets&#8221; when prompted.</p>

<p>Build the the project again to ensure that it can build successfully.</p>

<p>The finished project should look like the screen shot below:</p>

<p><img class="center" src="http://bulldog2011.github.com/images/pico/tutorial02/screen_shot1.png" width="600" height="800"></p>

<h2>Step 3 - Implement Appliction Logic and UI, Call Proxy to Invoke Web Service as Needed.</h2>

<p>First, create a shared service client as below:</p>

<figure class='code'><figcaption><span>CurrencyConverterSerivceClient.h </span><a href='https://github.com/bulldog2011/pico/blob/master/Examples/CurrencyConverter/CurrencyConverter/CurrencyConverterSerivceClient.h'>source </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &quot;CurrencyConvertorSoap_SOAPClient.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">CurrencyConverterSerivceClient</span> : <span class="nc">CurrencyConvertorSoap_SOAPClient</span>
</span><span class='line'>
</span><span class='line'><span class="k">+</span> <span class="p">(</span><span class="n">CurrencyConverterSerivceClient</span> <span class="o">*</span><span class="p">)</span><span class="nf">sharedClient</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>CurrencyConverterSerivceClient.m </span><a href='https://github.com/bulldog2011/pico/blob/master/Examples/CurrencyConverter/CurrencyConverter/CurrencyConverterSerivceClient.m'>source  </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &quot;CurrencyConverterSerivceClient.h&quot;</span>
</span><span class='line'><span class="k">static</span> <span class="n">NSString</span> <span class="o">*</span><span class="k">const</span> <span class="n">currencyConverterServiceURLString</span> <span class="o">=</span> <span class="s">@&quot;http://www.webservicex.net/CurrencyConvertor.asmx&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">CurrencyConverterSerivceClient</span>
</span><span class='line'>
</span><span class='line'><span class="k">+</span> <span class="p">(</span><span class="n">CurrencyConverterSerivceClient</span> <span class="o">*</span><span class="p">)</span><span class="nf">sharedClient</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">static</span> <span class="n">CurrencyConverterSerivceClient</span> <span class="o">*</span><span class="n">_sharedClient</span> <span class="o">=</span> <span class="nb">nil</span><span class="p">;</span>
</span><span class='line'>    <span class="k">static</span> <span class="n">dispatch_once_t</span> <span class="n">onceToken</span><span class="p">;</span>
</span><span class='line'>    <span class="n">dispatch_once</span><span class="p">(</span><span class="o">&amp;</span><span class="n">onceToken</span><span class="p">,</span> <span class="o">^</span><span class="p">{</span>
</span><span class='line'>        <span class="n">_sharedClient</span> <span class="o">=</span> <span class="p">[[</span><span class="n">CurrencyConverterSerivceClient</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithEndpointURL:</span><span class="p">[</span><span class="n">NSURL</span> <span class="nl">URLWithString:</span><span class="n">currencyConverterServiceURLString</span><span class="p">]];</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">_sharedClient</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now open ViewController_iPhone.xib in interface builder, then add a few UI components like following screen shot:</p>

<p><img class="center" src="http://bulldog2011.github.com/images/pico/tutorial02/ui.png" width="300" height="500"></p>

<p>Add <code>IBOutlet</code> properties and <code>IBAction</code> method in <a href="https://github.com/bulldog2011/pico/blob/master/Examples/CurrencyConverter/CurrencyConverter/ViewController.h">ViewController.h</a>, then wire the properties and method with UI components accordingly, bascially, the application will convert the <code>From</code> currency to <code>To</code> currency and show conversion rate, when the <code>Convert</code> button is clicked(which will trigger <code>onConvertClicked</code> method internally).</p>

<p>Now implement the <code>onConvertClicked</code> method by invoking service as below:</p>

<figure class='code'><figcaption><span>ViewController.m </span><a href='https://github.com/bulldog2011/pico/blob/master/Examples/CurrencyConverter/CurrencyConverter/ViewController.m'>source  </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &quot;ViewController.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;CurrencyConverterSerivceClient.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;SOAP11Fault.h&quot;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="cp">#pragma mark - UI Event Handlers</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">IBAction</span><span class="p">)</span><span class="nf">onConvertClicked:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">sender</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">self</span><span class="p">.</span><span class="n">fromCurrencyTextField</span><span class="p">.</span><span class="n">text</span><span class="p">.</span><span class="n">length</span> <span class="o">||</span> <span class="o">!</span><span class="n">self</span><span class="p">.</span><span class="n">toCurrencyTextField</span><span class="p">.</span><span class="n">text</span><span class="p">.</span><span class="n">length</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">UIAlertView</span><span class="o">*</span> <span class="n">alert</span> <span class="o">=</span> <span class="p">[[</span><span class="n">UIAlertView</span> <span class="n">alloc</span><span class="p">]</span><span class="nl">initWithTitle:</span><span class="s">@&quot;Invalid Parameters&quot;</span> <span class="nl">message:</span><span class="s">@&quot;Please enter valid from and to currency types and try again&quot;</span> <span class="nl">delegate:</span><span class="n">self</span> <span class="nl">cancelButtonTitle:</span><span class="s">@&quot;OK&quot;</span> <span class="nl">otherButtonTitles:</span> <span class="nb">nil</span><span class="p">];</span>
</span><span class='line'>        <span class="p">[</span><span class="n">alert</span> <span class="n">show</span><span class="p">];</span>
</span><span class='line'>        <span class="k">return</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">activityIndicator</span> <span class="nl">setHidden:</span><span class="n">NO</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">activityIndicator</span> <span class="n">startAnimating</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Get shared client</span>
</span><span class='line'>    <span class="n">CurrencyConverterSerivceClient</span> <span class="o">*</span><span class="n">client</span> <span class="o">=</span> <span class="p">[</span><span class="n">CurrencyConverterSerivceClient</span> <span class="n">sharedClient</span><span class="p">];</span>
</span><span class='line'>    <span class="n">client</span><span class="p">.</span><span class="n">debug</span> <span class="o">=</span> <span class="n">YES</span><span class="p">;</span> <span class="c1">// enable message logging</span>
</span><span class='line'>    <span class="n">client</span><span class="p">.</span><span class="n">timeoutInverval</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span> <span class="c1">// http timeout in seconds</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// build request</span>
</span><span class='line'>    <span class="n">ConversionRate</span> <span class="o">*</span><span class="n">request</span> <span class="o">=</span> <span class="p">[[[</span><span class="n">ConversionRate</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">]</span> <span class="n">autorelease</span><span class="p">];</span>
</span><span class='line'>    <span class="n">request</span><span class="p">.</span><span class="n">fromCurrency</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">fromCurrencyTextField</span><span class="p">.</span><span class="n">text</span><span class="p">;</span>
</span><span class='line'>    <span class="n">request</span><span class="p">.</span><span class="n">toCurrency</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">toCurrencyTextField</span><span class="p">.</span><span class="n">text</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// make API call</span>
</span><span class='line'>    <span class="p">[</span><span class="n">client</span> <span class="nl">conversionRate:</span><span class="n">request</span> <span class="nl">success:</span><span class="o">^</span><span class="p">(</span><span class="n">ConversionRateResponse</span> <span class="o">*</span><span class="n">responseObject</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// success handling logic</span>
</span><span class='line'>        <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">activityIndicator</span> <span class="n">stopAnimating</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">UIAlertView</span><span class="o">*</span> <span class="n">alert</span> <span class="o">=</span> <span class="p">[[</span><span class="n">UIAlertView</span> <span class="n">alloc</span><span class="p">]</span><span class="nl">initWithTitle:</span><span class="s">@&quot;Success!&quot;</span> <span class="nl">message:</span><span class="p">[</span><span class="n">NSString</span> <span class="nl">stringWithFormat:</span><span class="s">@&quot;Currency Conversion Rate is %@&quot;</span><span class="p">,</span><span class="n">responseObject</span><span class="p">.</span><span class="n">conversionRateResult</span><span class="p">]</span> <span class="nl">delegate:</span><span class="n">self</span> <span class="nl">cancelButtonTitle:</span><span class="s">@&quot;OK&quot;</span> <span class="nl">otherButtonTitles:</span> <span class="nb">nil</span><span class="p">];</span>
</span><span class='line'>        <span class="p">[</span><span class="n">alert</span> <span class="n">show</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">}</span> <span class="nl">failure:</span><span class="o">^</span><span class="p">(</span><span class="n">NSError</span> <span class="o">*</span><span class="n">error</span><span class="p">,</span> <span class="kt">id</span><span class="o">&lt;</span><span class="n">PicoBindable</span><span class="o">&gt;</span> <span class="n">soapFault</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">activityIndicator</span> <span class="n">stopAnimating</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// error handling logic</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">error</span><span class="p">)</span> <span class="p">{</span> <span class="c1">// http or parsing error</span>
</span><span class='line'>            <span class="n">UIAlertView</span><span class="o">*</span> <span class="n">alert</span> <span class="o">=</span> <span class="p">[[</span><span class="n">UIAlertView</span> <span class="n">alloc</span><span class="p">]</span><span class="nl">initWithTitle:</span><span class="s">@&quot;Error&quot;</span> <span class="nl">message:</span><span class="n">error</span><span class="p">.</span><span class="n">localizedDescription</span> <span class="nl">delegate:</span><span class="n">self</span> <span class="nl">cancelButtonTitle:</span><span class="s">@&quot;OK&quot;</span> <span class="nl">otherButtonTitles:</span> <span class="nb">nil</span><span class="p">];</span>
</span><span class='line'>            <span class="p">[</span><span class="n">alert</span> <span class="n">show</span><span class="p">];</span>
</span><span class='line'>        <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">soapFault</span><span class="p">)</span> <span class="p">{</span> <span class="c1">// soap fault</span>
</span><span class='line'>            <span class="n">SOAP11Fault</span> <span class="o">*</span><span class="n">soap11Fault</span> <span class="o">=</span> <span class="p">(</span><span class="n">SOAP11Fault</span> <span class="o">*</span><span class="p">)</span><span class="n">soapFault</span><span class="p">;</span>
</span><span class='line'>            <span class="n">UIAlertView</span><span class="o">*</span> <span class="n">alert</span> <span class="o">=</span> <span class="p">[[</span><span class="n">UIAlertView</span> <span class="n">alloc</span><span class="p">]</span><span class="nl">initWithTitle:</span><span class="s">@&quot;SOAP Fault&quot;</span> <span class="nl">message:</span><span class="n">soap11Fault</span><span class="p">.</span><span class="n">faultstring</span> <span class="nl">delegate:</span><span class="n">self</span> <span class="nl">cancelButtonTitle:</span><span class="s">@&quot;OK&quot;</span> <span class="nl">otherButtonTitles:</span> <span class="nb">nil</span><span class="p">];</span>
</span><span class='line'>            <span class="p">[</span><span class="n">alert</span> <span class="n">show</span><span class="p">];</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}];</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Please don&#8217;t forget to include the shared CurrencyConverterSerivceClient.</p>

<h2>Final Step - Run the Demo</h2>

<p>See a screen shot below:</p>

<p><img class="center" src="http://bulldog2011.github.com/images/pico/tutorial02/screen_shot2.png" width="300" height="500"></p>

<p>And the debug output:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>2013-03-28 21:45:27.641 CurrencyConverter[2153:c07] Sending request to : http://www.webservicex.net/CurrencyConvertor.asmx
</span><span class='line'>2013-03-28 21:45:27.642 CurrencyConverter[2153:c07] Request message:
</span><span class='line'>2013-03-28 21:45:27.643 CurrencyConverter[2153:c07] &lt;?xml version="1.0" encoding="UTF-8" ?>
</span><span class='line'>&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.webserviceX.NET/">
</span><span class='line'>  &lt;soapenv:Body>
</span><span class='line'>      &lt;ConversionRate>
</span><span class='line'>          &lt;FromCurrency>USD&lt;/FromCurrency>
</span><span class='line'>          &lt;ToCurrency>CAD&lt;/ToCurrency>
</span><span class='line'>      &lt;/ConversionRate>
</span><span class='line'>  &lt;/soapenv:Body>
</span><span class='line'>&lt;/soapenv:Envelope>
</span><span class='line'>2013-03-28 21:45:27.643 CurrencyConverter[2153:c07] Request HTTP Headers : 
</span><span class='line'>{
</span><span class='line'>    Accept = "text/xml";
</span><span class='line'>    "Accept-Language" = "en, fr, de, ja, nl, it, es, pt, pt-PT, da, fi, nb, sv, ko, zh-Hans, zh-Hant, ru, pl, tr, uk, ar, hr, cs, el, he, ro, sk, th, id, ms, en-GB, ca, hu, vi, en-us;q=0.8";
</span><span class='line'>    "Content-Type" = "text/xml";
</span><span class='line'>    SOAPAction = "http://www.webserviceX.NET/ConversionRate";
</span><span class='line'>    "User-Agent" = "CurrencyConverter/1.0 (iPhone Simulator; iOS 6.0; Scale/1.00)";
</span><span class='line'>}
</span><span class='line'>2013-03-28 21:45:28.495 CurrencyConverter[2153:1b03] Response HTTP status : 
</span><span class='line'>200
</span><span class='line'>2013-03-28 21:45:28.495 CurrencyConverter[2153:1b03] Response HTTP headers : 
</span><span class='line'>{
</span><span class='line'>    "Cache-Control" = "private, max-age=0";
</span><span class='line'>    "Content-Encoding" = gzip;
</span><span class='line'>    "Content-Length" = 316;
</span><span class='line'>    "Content-Type" = "text/xml; charset=utf-8";
</span><span class='line'>    Date = "Thu, 28 Mar 2013 13:45:47 GMT";
</span><span class='line'>    Server = "Microsoft-IIS/7.0";
</span><span class='line'>    Vary = "Accept-Encoding";
</span><span class='line'>    "X-AspNet-Version" = "4.0.30319";
</span><span class='line'>    "X-Powered-By" = "ASP.NET";
</span><span class='line'>}
</span><span class='line'>2013-03-28 21:45:28.495 CurrencyConverter[2153:5503] Response message : 
</span><span class='line'>2013-03-28 21:45:28.495 CurrencyConverter[2153:5503] &lt;?xml version="1.0" encoding="utf-8"?>&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">&lt;soap:Body>&lt;ConversionRateResponse xmlns="http://www.webserviceX.NET/">&lt;ConversionRateResult>1.0167&lt;/ConversionRateResult>&lt;/ConversionRateResponse>&lt;/soap:Body>&lt;/soap:Envelope></span></code></pre></td></tr></table></div></figure>


<p>There are other similar demos in the <a href="https://github.com/bulldog2011/pico/tree/master/Examples">Examples</a> folder of Pico source, like the <a href="https://github.com/bulldog2011/pico/tree/master/Examples/BarCode">BarCode</a> demo which calls web service that will return base64 encoded barcode data and the <a href="https://github.com/bulldog2011/pico/tree/master/Examples/Weather">Weather</a> demo which shows the weather given a zip code, see screen shots below, I won&#8217;t create tutorials for all these simple demos, since they are quite similar. Next time, I plan to show you how to use Pico with industrial level web serivces, like Amazon and eBay web serivces, just stay tuned.</p>

<p>The screen shot of barcode demo:
<img class="center" src="http://bulldog2011.github.com/images/pico/tutorial02/screen_shot3.png" width="300" height="500"></p>

<p>The screen shot of weather demo:
<img class="center" src="http://bulldog2011.github.com/images/pico/tutorial02/screen_shot4.png" width="300" height="500"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pico Tutorial - a StockQuote sample]]></title>
    <link href="http://bulldog2011.github.com/blog/2013/03/27/pico-tutorial-a-stockquote-sample/"/>
    <updated>2013-03-27T20:07:00+08:00</updated>
    <id>http://bulldog2011.github.com/blog/2013/03/27/pico-tutorial-a-stockquote-sample</id>
    <content type="html"><![CDATA[<p>This is the first post of Pico Tutorial Series, in this post, I will show you how easy to use <a href="https://github.com/bulldog2011/pico">Pico framework</a> to put WSDL driven application development on iOS platform into practice. If this is the first time you get to know Pico, then after this tutorial, you will bascially understand what Pico can do for you, and the basic development process when using Pico to run WSDL driven development on iOS. If you want to see the big picture, plese read <a href="http://bulldog2011.github.com/blog/2013/03/25/wsdl-driven-development-on-ios-the-big-picture/">this post</a> first.</p>

<p>The whole source of this demo is <a href="https://github.com/bulldog2011/pico/tree/master/Examples/StockQuote">here</a>.</p>

<p>WSDL driven development using Pico framework has following steps:</p>

<blockquote><ol>
<li>Generate Objective-C proxy from WSDL</li>
<li>Create new iOS project, add Pico runtime and generated proxy into your project</li>
<li>Implement appliction logic and UI, call proxy to invoke web service as needed.</li>
</ol>
</blockquote>

<p>Let me cut to the point and show you each step using a simple while popular <a href="http://www.webservicex.net/ws/WSDetails.aspx?WSID=9&amp;CATID=2">StockQueue</a> web serivce from WebserviceX.NET.</p>

<!--more-->


<h2>Step 1 - Generate Objective-C Proxy from WSDL</h2>

<p>Pico has an accompanying code generator which can generate Objective-C proxy from wsdl, the tool is called <a href="https://github.com/bulldog2011/mwsc">mwsc</a>, please download the latest zip package <a href="https://github.com/bulldog2011/bulldog-repo/blob/master/repo/releases/com/leansoft/mwsc/0.5.0/mwsc-0.5.0-bin.zip">here</a> then extract it into your local folder.
<strong><em>Note</em></strong> : mwsc code generator needs Java 1.6 or above to run, so please ensure Java is installed on your MacOS, if not, please install it first.</p>

<p>The command line script <code>mwsc</code> is in the bin folder, please add executable right to it before you run it, you may optionally create a folder as your code generation target(for example, <code>generated</code>), otherwise, mwsc will generate code in current folder, now let&#8217;s generate code from wsdl by running flowing command in the terminal:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bin/mwsc -pico -d generated http://www.webservicex.net/stockquote.asmx?WSDL</span></code></pre></td></tr></table></div></figure>


<p>If everything works fine, you will see the code generator output <code>generating code…</code> and <code>done</code> at the end, the target proxy will be generated in the <code>generated</code> folder, the code generator may throw a few warnings, asking us to add extension options for some ports, since we won&#8217;t use those ports, just ignore them right now, it&#8217;s all right as long as the SOAP port is generated correctly.</p>

<h2>Step 2 - Create New iOS Project, Add Pico Library and Generated Proxy into Your Project</h2>

<p>For this demo, we just create a simple iOS single view application, please don&#8217;t choose ARC when you create the project, since Pico does not support ARC yet.</p>

<p>Now we need to import Pico library into the project first, there are two options, you can either include all Pico source into your project, or add Pico as a static library into your project, in this tutorial, I just show you the second option, if you want to include the whole Pico source, please see Pico github site for instructions.</p>

<p>Suppose you have downloaded Pico source project from github site, then:</p>

<blockquote><ol>
<li>Drag the Pico xcodeproj into your project,</li>
<li>In the Build Phases of the target,  add <code>libPico.a</code> and <code>libxml2.dylib</code> to &#8220;Link Binary With Libraries&#8221; section.</li>
<li>In the Build Setting of the target, add [your path to Pico source] to &#8220;User Header Search Paths&#8221; setting, choose &#8220;recursive&#8221; seach path.</li>
</ol>
</blockquote>

<p>Now create a group in your project called <code>Proxy</code>(or other meaningful name you choose), then drag the proxy generated in step 1 into this group, choose &#8220;Copy items to destination group&#8217;s folder&#8221; and &#8220;add to targets&#8221; when prompted.</p>

<p>Now since both Pico library and the StockQuote web service proxy have been added in the project, you can try to build the project, if no build error, job well done, you can continue to the next step, otherwise, please do some toubleshooting, or check the source of this tutourial(in the Examples folder of Pico).</p>

<p>Below is an Xcode screenshot after finishing this step(please save the screenshot to local to view if the web version is not large enough to view clearly):</p>

<p><img class="center" src="http://bulldog2011.github.com/images/pico/tutorial01/screen_shot1.png" width="600" height="800"></p>

<p>Note, in the demo project, I also added a third party library called Toast which can produce toast style message, this is just for the convenience of demo, it is not necessary for you to do so in your real project.</p>

<h2>Step 3 - Implement Appliction Logic and UI, Call Proxy to Invoke Web Service as Needed.</h2>

<p>Pico use <a href="https://github.com/AFNetworking/AFNetworking">AFNetworking</a> Http client for low level communication, as an AFNetworking best practice, it&#8217;s not necessary for you to initiate a new client everytime you call service, a singleton client instance is enough for the whole application, so before writing any applicaiton logic, let&#8217;s create a shared StockQuote service client for later use, see code below:</p>

<figure class='code'><figcaption><span>StockQuoteServiceClient.h </span><a href='https://github.com/bulldog2011/pico/blob/master/Examples/StockQuote/StockQuote/StockQuoteServiceClient.h'>source </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &quot;StockQuoteSoap_SOAPClient.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">StockQuoteServiceClient</span> : <span class="nc">StockQuoteSoap_SOAPClient</span>
</span><span class='line'>
</span><span class='line'><span class="k">+</span> <span class="p">(</span><span class="n">StockQuoteServiceClient</span> <span class="o">*</span><span class="p">)</span><span class="nf">sharedClient</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>StockQuoteServiceClient.m </span><a href='https://github.com/bulldog2011/pico/blob/master/Examples/StockQuote/StockQuote/StockQuoteServiceClient.m'>source  </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &quot;StockQuoteServiceClient.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">static</span> <span class="n">NSString</span> <span class="o">*</span><span class="k">const</span> <span class="n">stockQuoteServiceURLString</span> <span class="o">=</span> <span class="s">@&quot;http://www.webservicex.net/stockquote.asmx&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">StockQuoteServiceClient</span>
</span><span class='line'>
</span><span class='line'><span class="k">+</span> <span class="p">(</span><span class="n">StockQuoteServiceClient</span> <span class="o">*</span><span class="p">)</span><span class="nf">sharedClient</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">static</span> <span class="n">StockQuoteServiceClient</span> <span class="o">*</span><span class="n">_sharedClient</span> <span class="o">=</span> <span class="nb">nil</span><span class="p">;</span>
</span><span class='line'>    <span class="k">static</span> <span class="n">dispatch_once_t</span> <span class="n">onceToken</span><span class="p">;</span>
</span><span class='line'>    <span class="n">dispatch_once</span><span class="p">(</span><span class="o">&amp;</span><span class="n">onceToken</span><span class="p">,</span> <span class="o">^</span><span class="p">{</span>
</span><span class='line'>        <span class="n">_sharedClient</span> <span class="o">=</span> <span class="p">[[</span><span class="n">StockQuoteServiceClient</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithEndpointURL:</span><span class="p">[</span><span class="n">NSURL</span> <span class="nl">URLWithString:</span><span class="n">stockQuoteServiceURLString</span><span class="p">]];</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">_sharedClient</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<p>The code is quite self-explanatory, the <code>shareClient</code> static factory method just returns a StockQuoteServiceClient(which extends StockQuoteSoap_SOAPClient generated from wsdl, you can find StockQuoteSoap_SOAPClient in the <code>Proxy</code> group) instance with specified target service endpoint address, and there will be only one such client instance within the application.</p>

<p>Now time to the UI part, for this simple Demo, we only need an UITextField for company symbol input, an UIButton to triget getQuote service call and an UITextView for result dislay, quite simple, see definition in header file <a href="https://github.com/bulldog2011/pico/blob/master/Examples/StockQuote/StockQuote/ViewController.h">ViewController.h</a> and instantiation in implementation file <a href="https://github.com/bulldog2011/pico/blob/master/Examples/StockQuote/StockQuote/ViewController.m">ViewController.m</a>, in method <code>viewDidLoad</code>.</p>

<p>Now let&#8217;s implement application logic by calling the getQuote service, with the help of the StockQuote service proxy generated from WSDL, web service call through Pico is extremely simple, let&#8217;s review and understand the generated getQuote proxy interface first before writing calling logic:</p>

<figure class='code'><figcaption><span>StockQuoteSoap_SOAPClient.m </span><a href='https://github.com/bulldog2011/pico/blob/master/Examples/StockQuote/StockQuote/Proxy/client/StockQuoteSoap_SOAPClient.h'>source  </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">// Generated by wsdl compiler for ios/objective-c</span>
</span><span class='line'><span class="c1">// DO NOT CHANGE!</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="cp">#import &lt;Foundation/Foundation.h&gt;</span>
</span><span class='line'><span class="cp">#import &quot;PicoSOAPClient.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;GetQuoteResponse.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;GetQuote.h&quot;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> This class is the SOAP client to the StockQuoteSoap Web Service.</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="k">@interface</span> <span class="nc">StockQuoteSoap_SOAPClient</span> : <span class="nc">PicoSOAPClient</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> Get Stock quote for a company Symbol</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="o">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nl">getQuote:</span><span class="p">(</span><span class="n">GetQuote</span> <span class="o">*</span><span class="p">)</span> <span class="n">requestObject</span>
</span><span class='line'>      <span class="nl">success:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">GetQuoteResponse</span> <span class="o">*</span><span class="n">responseObject</span><span class="p">))</span><span class="n">success</span>
</span><span class='line'>      <span class="nl">failure:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">NSError</span> <span class="o">*</span><span class="n">error</span><span class="p">,</span> <span class="kt">id</span><span class="o">&lt;</span><span class="n">PicoBindable</span><span class="o">&gt;</span> <span class="n">soapFault</span><span class="p">))</span><span class="n">failure</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<p>This is just a plain old interface generated from wsdl, unlike normal interface, this interface is asynchronous, when you call <code>getQuote</code> service, you need to provide a request of type <code>GetQuote</code> as first parameter, also you need to provide(or register) one <code>success</code> and one <code>failure</code> callbacks using Objective-C block, success callback will be called if the service invocation succeed, and you will get a response object of type <code>GetQuoteResponse</code>, usually, in success callback, you implement response handling logic and update UI according to the response; failure callback will be called if the service invocation fail, or there is any HTTP or Pico parsing error, you may either get a <code>NSError</code>(indicationg HTTP or Pico parsing error), or get a <code>SOAPFault</code>(indicating service call fail), usually, you implement error handling logic in failure callback and update UI accordingly.</p>

<p>By the way, although not necessary, I suggest you to review the proxy code generated by mwsc, this will help you better understand the inner working of Pico.</p>

<p>Let&#8217;s see the service call implementation of the demo, it&#8217;s in the <code>getQuotePressed</code> method in the ViewController implementation, <code>getQuotePressed</code> will be triggered when you click the GetQuote button on the UI:</p>

<figure class='code'><figcaption><span>ViewController.m </span><a href='https://github.com/bulldog2011/pico/blob/master/Examples/StockQuote/StockQuote/ViewController.m'>source  </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">getQuotePressed:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">sender</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// Hide the keyboard.</span>
</span><span class='line'>    <span class="p">[</span><span class="n">_symbolText</span> <span class="n">resignFirstResponder</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">_symbolText</span><span class="p">.</span><span class="n">text</span><span class="p">.</span><span class="n">length</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// start progress activity</span>
</span><span class='line'>        <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="n">makeToastActivity</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Get shared service client</span>
</span><span class='line'>        <span class="n">StockQuoteServiceClient</span> <span class="o">*</span><span class="n">client</span> <span class="o">=</span> <span class="p">[</span><span class="n">StockQuoteServiceClient</span> <span class="n">sharedClient</span><span class="p">];</span>
</span><span class='line'>        <span class="n">client</span><span class="p">.</span><span class="n">debug</span> <span class="o">=</span> <span class="n">YES</span><span class="p">;</span> <span class="c1">// enable request/response message logging</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Build request object</span>
</span><span class='line'>        <span class="n">GetQuote</span> <span class="o">*</span><span class="n">request</span> <span class="o">=</span> <span class="p">[[[</span><span class="n">GetQuote</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">]</span> <span class="n">autorelease</span><span class="p">];</span>
</span><span class='line'>        <span class="n">request</span><span class="p">.</span><span class="n">symbol</span> <span class="o">=</span> <span class="n">_symbolText</span><span class="p">.</span><span class="n">text</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// make API call and register callbacks</span>
</span><span class='line'>        <span class="p">[</span><span class="n">client</span> <span class="nl">getQuote:</span><span class="n">request</span> <span class="nl">success:</span><span class="o">^</span><span class="p">(</span><span class="n">GetQuoteResponse</span> <span class="o">*</span><span class="n">responseObject</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">// stop progress activity</span>
</span><span class='line'>            <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="n">hideToastActivity</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">// show result</span>
</span><span class='line'>            <span class="n">_resultText</span><span class="p">.</span><span class="n">text</span> <span class="o">=</span> <span class="n">responseObject</span><span class="p">.</span><span class="n">getQuoteResult</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span> <span class="nl">failure:</span><span class="o">^</span><span class="p">(</span><span class="n">NSError</span> <span class="o">*</span><span class="n">error</span><span class="p">,</span> <span class="kt">id</span><span class="o">&lt;</span><span class="n">PicoBindable</span><span class="o">&gt;</span> <span class="n">soapFault</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">// stop progress activity</span>
</span><span class='line'>            <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="n">hideToastActivity</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="n">error</span><span class="p">)</span> <span class="p">{</span> <span class="c1">// http or parsing error</span>
</span><span class='line'>                <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">makeToast:</span><span class="p">[</span><span class="n">error</span> <span class="n">localizedDescription</span><span class="p">]</span> <span class="nl">duration:</span><span class="mf">3.0</span> <span class="nl">position:</span><span class="s">@&quot;center&quot;</span> <span class="nl">title:</span><span class="s">@&quot;Error&quot;</span><span class="p">];</span>
</span><span class='line'>            <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">soapFault</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">SOAP11Fault</span> <span class="o">*</span><span class="n">soap11Fault</span> <span class="o">=</span> <span class="p">(</span><span class="n">SOAP11Fault</span> <span class="o">*</span><span class="p">)</span><span class="n">soapFault</span><span class="p">;</span>
</span><span class='line'>                <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">makeToast:</span><span class="n">soap11Fault</span><span class="p">.</span><span class="n">faultstring</span> <span class="nl">duration:</span><span class="mf">3.0</span> <span class="nl">position:</span><span class="s">@&quot;center&quot;</span> <span class="nl">title:</span><span class="s">@&quot;SOAP Fault&quot;</span><span class="p">];</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}];</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>The call logic can&#8217;t simpler, I&#8217;ve added comments in the service call code for you to better understand the call flow. Also, I&#8217;ve enabled the debug mode of the proxy, so you can see the detailed request/response messages when you run the demo, this feature is extremely useful for troubleshooting.</p>

<h2>Final Step - Run the Demo</h2>

<p>Now it&#8217;s time to run the demo, let&#8217;s try it in the simulator(you may use a real device of course ), I just want to see the stock quote of Apple(company symbol AAPL), below is a screenshot of the simulator.</p>

<p><img class="center" src="http://bulldog2011.github.com/images/pico/tutorial01/screen_shot2.png" width="300" height="500"></p>

<p>The StockQuote web service just return stock quote information in XML format, so you see the result in xml.</p>

<p>You can also find the debug output in the XCode, like below:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>2013-03-28 11:33:35.793 StockQuoteDemo[761:c07] Sending request to : http://www.webservicex.net/stockquote.asmx
</span><span class='line'>2013-03-28 11:33:35.794 StockQuoteDemo[761:c07] Request message:
</span><span class='line'>2013-03-28 11:33:35.794 StockQuoteDemo[761:c07] &lt;?xml version="1.0" encoding="UTF-8" ?>
</span><span class='line'>&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.webserviceX.NET/">
</span><span class='line'>  &lt;soapenv:Body>
</span><span class='line'>      &lt;GetQuote>
</span><span class='line'>          &lt;symbol>AAPL&lt;/symbol>
</span><span class='line'>      &lt;/GetQuote>
</span><span class='line'>  &lt;/soapenv:Body>
</span><span class='line'>&lt;/soapenv:Envelope>
</span><span class='line'>2013-03-28 11:33:35.795 StockQuoteDemo[761:c07] Request HTTP Headers : 
</span><span class='line'>{
</span><span class='line'>    Accept = "text/xml";
</span><span class='line'>    "Accept-Language" = "en, fr, de, ja, nl, it, es, pt, pt-PT, da, fi, nb, sv, ko, zh-Hans, zh-Hant, ru, pl, tr, uk, ar, hr, cs, el, he, ro, sk, th, id, ms, en-GB, ca, hu, vi, en-us;q=0.8";
</span><span class='line'>    "Content-Type" = "text/xml";
</span><span class='line'>    SOAPAction = "http://www.webserviceX.NET/GetQuote";
</span><span class='line'>    "User-Agent" = "StockQuoteDemo/1.0 (iPhone Simulator; iOS 6.0; Scale/1.00)";
</span><span class='line'>}
</span><span class='line'>2013-03-28 11:33:37.367 StockQuoteDemo[761:4a03] Response HTTP status : 
</span><span class='line'>200
</span><span class='line'>2013-03-28 11:33:37.367 StockQuoteDemo[761:4a03] Response HTTP headers : 
</span><span class='line'>{
</span><span class='line'>    "Cache-Control" = "private, max-age=0";
</span><span class='line'>    "Content-Encoding" = gzip;
</span><span class='line'>    "Content-Length" = 634;
</span><span class='line'>    "Content-Type" = "text/xml; charset=utf-8";
</span><span class='line'>    Date = "Thu, 28 Mar 2013 03:33:54 GMT";
</span><span class='line'>    Server = "Microsoft-IIS/7.0";
</span><span class='line'>    Vary = "Accept-Encoding";
</span><span class='line'>    "X-AspNet-Version" = "4.0.30319";
</span><span class='line'>    "X-Powered-By" = "ASP.NET";
</span><span class='line'>}
</span><span class='line'>2013-03-28 11:33:37.367 StockQuoteDemo[761:1c03] Response message : 
</span><span class='line'>2013-03-28 11:33:37.367 StockQuoteDemo[761:1c03] &lt;?xml version="1.0" encoding="utf-8"?>&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">&lt;soap:Body>&lt;GetQuoteResponse xmlns="http://www.webserviceX.NET/">&lt;GetQuoteResult>&lt;StockQuotes&gt;&lt;Stock&gt;&lt;Symbol&gt;AAPL&lt;/Symbol&gt;&lt;Last&gt;452.08&lt;/Last&gt;&lt;Date&gt;3/27/2013&lt;/Date&gt;&lt;Time&gt;4:00pm&lt;/Time&gt;&lt;Change&gt;-9.056&lt;/Change&gt;&lt;Open&gt;456.80&lt;/Open&gt;&lt;High&gt;456.80&lt;/High&gt;&lt;Low&gt;450.7301&lt;/Low&gt;&lt;Volume&gt;11836042&lt;/Volume&gt;&lt;MktCap&gt;424.5B&lt;/MktCap&gt;&lt;PreviousClose&gt;461.136&lt;/PreviousClose&gt;&lt;PercentageChange&gt;-1.96%&lt;/PercentageChange&gt;&lt;AnnRange&gt;419.00 - 705.07&lt;/AnnRange&gt;&lt;Earns&gt;44.107&lt;/Earns&gt;&lt;P-E&gt;10.45&lt;/P-E&gt;&lt;Name&gt;Apple Inc.&lt;/Name&gt;&lt;/Stock&gt;&lt;/StockQuotes&gt;&lt;/GetQuoteResult>&lt;/GetQuoteResponse>&lt;/soap:Body>&lt;/soap:Envelope></span></code></pre></td></tr></table></div></figure>


<p>If you have any problem to run the demo, please check the debug output first.</p>

<p>Now you see the Power of pico framework, you don&#8217;t get troubled with error prone and tedious SOAP/XML parsing or http handling, the generic Pico framework will do these stuff for you, you only need to use a plain old asynchronous interface for service invocation, this can not only accelerate application development, but reduce the long term maintenance cost.</p>

<p>StockQuote is just a bare minimum demo, there are other more featured demos(like Amazon, eBay search demo) in the Examples folder of Pico source project, please try them to better understand how Pico works, then you can begin to develop your own service based applications, using wsdl driven methodology supported by Pico.</p>

<p>See your next great application!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Architecture and Design of a Publish & Subscribe Messaging System Tailored for Big Data Collecting and Analytics]]></title>
    <link href="http://bulldog2011.github.com/blog/2013/03/27/the-architecture-and-design-of-a-pub-sub-messaging-system/"/>
    <updated>2013-03-27T16:30:00+08:00</updated>
    <id>http://bulldog2011.github.com/blog/2013/03/27/the-architecture-and-design-of-a-pub-sub-messaging-system</id>
    <content type="html"><![CDATA[<h1>Overview</h1>

<p>With the advent of big data era, we are facing more and more challenges from big data collecting and analytics requirements. Typical big data or activity stream includes but not limited to:</p>

<blockquote><ul>
<li>Logs generated by frontend applications or backend services</li>
<li>User behavior data</li>
<li>Application or system performance trace</li>
<li>Business, application or system metrics data.</li>
<li>Events that need immediate action.</li>
</ul>
</blockquote>

<p>The Luxun messaging system is just tailored for big data collecting and analytics scenario, following are the main design objectives of Luxun messaging system:</p>

<!--more-->


<blockquote><ul>
<li><strong><em>Fast and High-Throughput</em></strong> : This is the top priority feature, without this capability, the system will be easily overwhelmed by flooding data continuously generated by hundreds or thousands of machines, it is expected that both enqueue and dequeue speed should be close to O(1) memory access, and that even with modest hardware Luxun can support hundreds of thousands of messages per second.</li>
<li><strong><em>Persistent and Durable</em></strong> : Real business value can be derived from big data, so any data lose should be avoided as far as possible. Also, nowadays backend system maintenance(or even crash) is common, Luxun should persist messages on disk longer than the maintenance(or system recovery) window, to let backend systems continue to consume messages when they are up again. Regarding durability, Luxun should ensure the persistence of the message even the service process crashes.</li>
<li><strong><em>Separation of Producers and Consumers</em></strong> : Luxun should separate messaging producers and consumers using pub-sub style exchange pattern, each one can work without knowing the existence of the others, such kind of loosely coupled architecture can make the whole system robust, horizontal scalable, and easy to maintain.</li>
<li><strong><em>Realtime</em></strong> : Messages produced by producer threads should be immediately visible to consumer threads, this feature is critical to event based system like Complex Event Processing(CEP) system.</li>
<li><strong><em>Distributed</em></strong> : Luxun should explicitly support partitioning messages over Luxun servers and distributing consumption over a cluster of consumer machines while maintaining per-partition ordering semantics.</li>
<li><strong><em>Multiple Client Support</em></strong> : Luxun system should support easy integration of clients from different kinds of platforms(such as Java, .Net, PHP, Ruby, Python, etc), it&#8217;s desirable that producers and consumers can be auto-generated from Luxun service interface, by leveraging technology like Thrift RPC.</li>
<li><strong><em>Flexible consuming semantics</em></strong> : Luxun should support typical consume once queue, fanout queue, and provides more flexible consuming mechanism like consuming by index.</li>
<li><strong><em>Light Weight</em></strong> : The footprint of Luxun binary should be light, and the interface exposed should be simple and be understandable by normal user. Zookeeper like distributed coordination should be avoided since many small or medium scale companies still can&#8217;t afford it, and the learning curve of zookeeker to average developers is still steep.</li>
</ul>
</blockquote>

<p>Luxun makes a unified big data platform(or pipeline) possible, as illustrated in the figure below:</p>

<p><img class="center" src="http://bulldog2011.github.com/images/luxun/arch-1.png" width="600" height="800"></p>

<p>The figure shows a typical big data collecting and analytics scenario supported by Luxun messaging system:<br/>
At the producing side, there are different kinds of producers, such as:</p>

<blockquote><ul>
<li>Frontend web applications producing application logs.</li>
<li>External tracking proxies producing web analytics logs.</li>
<li>Backend services producing service invocation trace logs.</li>
</ul>
</blockquote>

<p>At the consuming side, there are different kinds of consumers, such as:</p>

<blockquote><ul>
<li>Offline consumers consuming messages and storing them in Hadoop or traditional Data Warehouse for offline analysis.</li>
<li>Near realtime consumers consuming messages and store them in HBase or Cassandra for near realtime analytics.</li>
<li>Realtime consumers filter messages in in-memory DB and trigger alert events to related groups.</li>
</ul>
</blockquote>

<h1>Basic Concepts:</h1>

<blockquote><ol>
<li><strong><em>Topic</em></strong> : Logically it&#8217;s a named place to send messages to or to consume messages from, physically it&#8217;s a persistent queue.</li>
<li><strong><em>Broker</em></strong> : Aka Luxun server.</li>
<li><strong><em>Message</em></strong> : Datum to produce or consume</li>
<li><strong><em>Producer</em></strong> : A role which will send messages to topics.</li>
<li><strong><em>Consumer</em></strong> : A role which will consume messages from topics.</li>
<li><strong><em>Consumer Group</em></strong> : A group of consumers that will receive only one copy of a message from a topic(or more).</li>
</ol>
</blockquote>

<h1>Overall Architecture</h1>

<p><img class="center" src="http://bulldog2011.github.com/images/luxun/arch-2.png" width="600" height="800"></p>

<p>Luxun has a simple architecture, the main components of a broker are:</p>

<blockquote><ol>
<li><strong><em>Persistent Queue</em></strong> : Physical implementation of logic topic, internally use memory mapped file, automatic paging and swapping algorithm, sliding window, index based access for fast queue operation while use memory in an efficient way.</li>
<li><strong><em>Thrift based Interface</em></strong> : Simple RPC based API exposing queue service to external clients.</li>
<li><strong><em>Producer Client</em></strong> : Wrapper around Luxun producing API, provides simplified interface for developers, also provides advanced partitioning, batching, compression and asynchronous producing features.</li>
<li><strong><em>Consumer Client</em></strong> : Wrapper around Luxun consuming API, provides simplified and stream style consuming interface for developers, supporting advanced distributed consuming,  multi-threads concurrent consuming, group consuming features.</li>
<li><strong><em>Management and Monitoring</em></strong>: Server management and JMX based monitoring interface.</li>
</ol>
</blockquote>

<h1>The Core Principle</h1>

<p>The core principle of a fast while persistent queue system like Luxun is from a key observation that <strong><em><a href="http://queue.acm.org/detail.cfm?id=1563874">sequential disk read can be comparable to or even faster than random memory read</a></em></strong>, see a comparison figure below:</p>

<p><img class="center" src="http://bulldog2011.github.com/images/luxun/core_principle.png" width="600" height="800"></p>

<p>So if we can effectively organize the disk access pattern, then we can get fast performance comparable to memory which still have persistence. Queue is a rear append(or append only) and front read data structure, a nature fit to be implemented in sequential disk access mode.</p>

<h1>The Design of the Persistent Queue</h1>

<h3>Logical View</h3>

<p>The logic view of the persistent queue is fairly simple and intuitive, it&#8217;s just like a big array, see figure below:</p>

<p><img class="center" src="http://bulldog2011.github.com/images/luxun/queue_logical_view.png" width="400" height="600"></p>

<p>you can access the queue using array like index, one special thing is that the index is of type long(in typical programming language, array index is of type int), so the queue can accomodate huge amount of data, only limited by available disk space. You may also think of the queue as a circular queue as shown in figure above, since the queue will wrap around when the long.max index is reached(although in practice, we don&#8217;t think current application will get chance to reach the long.max index:)).</p>

<p>With simple array like abstraction, we can implement queue semantics with ease:</p>

<blockquote><ol>
<li>For a typical consume once queue, we just need one rear pointer pointing to the queue rear index, aka the next to be appended index, another pointer pointing to the queue front index, aka the next to be consumed index. When an item is produced into the queue, we add the data in the queue then advance the rear index, when an item is consumed from the queue, we fetch the data in the queue then advance the front index. In this case, multi-threads can concurrently produce into the queue, the queue internally will sync the append operation, and multi-threads can concurrently consume(by contention) the queue, and every item will only be consumed by one thread once. see figure below.</li>
<li>For a fanout queue, we also just need one rear pointer pointing to the queue rear index, aka the next to be appended index, but on the consuming side, we let the queue maintain one queue front index for every fanout group, in other word, the fanout semantics is implemented in Luxun by letting Luxun server to maintain consuming state for every fanout group. In such case, multi-threads can concurrently and independently consume the queue, and every item will be consumed multiple times by different consumers as long as they belong to different consumer group(or fanout group). see figure below.</li>
</ol>
</blockquote>

<p><img class="center" src="http://bulldog2011.github.com/images/luxun/queue_semantics.png" width="400" height="600"></p>

<p>By the way, consume once queue is just a special case of fanout queue, so it&#8217;s not necessary for luxun to provide a separate consume one queue, as long as fanout queue has been provided.</p>

<p>In summary, Luxun queue is an append only queue, means at producing side, item can only be appended into the queue, while at the consuming side, flexible queue consuming semantics are provided by array like index access model and state maintained on server side.</p>

<p>Note, the Luxun queue service even expose the index based queue access interface to user, in case some user may need more flexible queue semantics, for example, to support transactional queue semantics by committing and saving index in DB or Zookeeper. It&#8217;s even possible to consume the queue randomly by index, although there may have performance issue in such case.</p>

<h3>Physical View</h3>

<p>Luxun queue is built on a big array abstraction, physically, one big array is implemented by:</p>

<blockquote><ul>
<li>One <strong><em>Index file</em></strong> : store fix sized index item, aka pointer to data item in <strong><em>Data File</em></strong>.</li>
<li>One <strong><em>Data file</em></strong> : store actual data item with variable length.</li>
</ul>
</blockquote>

<p>Index file and data file may grow very big, map whole index file or data file into memory may lead to unpredictable memory issue, so both Index file and Data file are further paged into fix sized sub-page files(in current setting, index page is 32M which can index 1M items, data page is 128M), and every sub-page has a corresponding index, at runtime, these sub-page files will be mapped into memory on demand.</p>

<p><img class="center" src="http://bulldog2011.github.com/images/luxun/queue_physical_view.png" width="700" height="900"></p>

<p>A fix sized <strong><em>Index Item</em></strong> consists of :</p>

<blockquote><ol>
<li>4 bytes <code>Data Page Index</code> - pointing to the data page index where the target data item resides.</li>
<li>2 bytes <code>Item Offset</code> - data item offset within the data page file.</li>
<li>2 bytes <code>Item Length</code> - the length of the data item.</li>
<li>4 bytes <code>Item Timestamp</code> - the timestamp when the data item is appended into the big array.</li>
</ol>
</blockquote>

<p>Besides structures above, every big array has :</p>

<blockquote><ol>
<li>An <strong><em>Array Header Index Pointer</em></strong> : pointing to the next to be appended array index.</li>
<li>An <strong><em>Array Tail Index Pointer</em></strong> : pointing to the first array index(usually it&#8217;s 0 if we haven&#8217;t truncated the array)</li>
<li>A <strong><em>Header Data Page Index Pointer</em></strong> : pointing to the next to be appended data page index.</li>
<li>A <strong><em>Header Data Item Offset Pointer</em></strong> : pointing to the next to be appended data item offset within a data page.  <br/>
Pointers 1 &amp; 2 are persisted in memory mapped file, while pointers 3 &amp; 4 are not persisted since they can be derived from pointers 1 &amp; 2.</li>
</ol>
</blockquote>

<p>With data and file structures defined above, let&#8217;s see the simplified data item indexing and appending(producing) flow(we will use number listed above as abbreviated representation of pointer):</p>

<blockquote><ol>
<li>Find the header data page file through pointer 3.</li>
<li>Append the data into the data page file, starting offset from pointer 4, then update pointer 4 by adding the data length.</li>
<li>Find the header index item through pointer 1.</li>
<li>Update <code>Data Page Index</code>, <code>Item Offset</code>, <code>Item Length</code> and <code>Item Timestamp</code> within the index item.</li>
<li>Advance pointer 1 by plus one(this also has transactional commit effect).</li>
</ol>
</blockquote>

<p>The simplified reading(or consuming) by index flow is even simpler:</p>

<blockquote><ol>
<li>find the index item by the given index</li>
<li>find the data item by inspecting <code>Data Page Index</code>, <code>Item Offset</code> in the index item</li>
<li>read the data item and then return it.</li>
</ol>
</blockquote>

<p>Algorithm to find index item given an array index:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>index page index = array index / number of index items per page;
</span><span class='line'>index item offset = (array index `mod` index items per page) * length of index item</span></code></pre></td></tr></table></div></figure>


<p>The divide, mod and multiply operations are further optimized by fast shifting operations.</p>

<h4>Concurrency Consideration</h4>

<p>In the design above, the append operation must be synchronized in concurrent case, while read operation is thread safe, the <strong><em>Array Header Index Pointer</em></strong> is just like a read/writer barrier, one and only one append thread will push the barrier, while multiple threads can concurrently read items behind the barrier.</p>

<h3>Components View</h3>

<p><img class="center" src="http://bulldog2011.github.com/images/luxun/components_view.png" width="300" height="400"></p>

<p>Luxun persistent queue consists of following components:</p>

<blockquote><ol>
<li>At the top is the <strong><em>Fanout Queue</em></strong> abstraction layer, Luxun interacts with this layer directly for queue operations like enqueue and dequeue.</li>
<li><strong><em>Fanout Queue</em></strong> is built on the <strong><em>Append Only Big Array</em></strong> structure, just as we explained in the logical and physical view above.</li>
<li>The <strong><em>Append Only Big Array</em></strong> structure is built on <strong><em>Mapped Page Factory</em></strong> which are responsible for mapped page management, like page creation, on-demand load, caching, swapping, etc.</li>
<li>At the lowest level are the <strong><em>Mapped Page</em></strong> which is the object model of memory mapped file, and the <strong><em>LRU Cache</em></strong> which are responsible for the page cache and swapping, for efficient memory usage.</li>
</ol>
</blockquote>

<h3>Dynamic View</h3>

<p><img class="center" src="http://bulldog2011.github.com/images/luxun/sliding_window.png" width="600" height="800"></p>

<p>At runtime, Luxun queue looks just like a memory mapped sliding window:</p>

<blockquote><ol>
<li>As new items are appended into the queue, the queue rear index will slide gradually towards the right, and the current appended page will be mapped and kept in memory.</li>
<li>As items are read from the queue, the queue front index will slide gradually towards the right, and the current read page will be mapped and kept in memory.</li>
</ol>
</blockquote>

<p>Only the current active page files are mapped into memory, and they will be unloaded from memory if they are inactive in a specified time window, then new active page(s) will be loaded into memory as needed. The access pattern of queue((rear append and front read)) has very good locality, as long as we keep the current working set in memory, we&#8217;ll obtain both fast read/write performance and persistence, while at the same time the memory usage is efficient.</p>

<h3>Other Design Consideration</h3>

<h4>The Queue Interface</h4>

<p>The persistent queue exposes following interfaces for queue operations, monitoring and maintenance:</p>

<blockquote><ol>
<li><strong><em>enqueue(byte[] item)</em></strong> : append(or produce) binary data into the queue.</li>
<li><strong><em>byte[] dequeue</em></strong> : read(or consume) binary data from the queue.</li>
<li><strong><em>isEmpty</em></strong> : check if the queue is empty.</li>
<li><strong><em>getSize</em></strong> : total number of items remaining in the queue</li>
<li><strong><em>removeBefore(long timestamp)</em></strong> : remove index and data pages before a given timestamp, this may delete back files and advance the queue front pointer accordingly. This interface is useful to remove expired data files, to clean up already consumed data or to avoid too much disk space being used up. Luxun supports a <code>log.retention.hours</code> setting, internally, Luxun will periodically check data files outside the retention window, and remove them using the <code>removeBefore</code> interface.</li>
<li><strong><em>limitBackFileSize(long sizeLimit)</em></strong> : limit the total size of back index and data page files, this may delete back files and advance the queue front pointer accordingly. This interface is useful to limit the total size of back files, to clean up already consumed data or to avoid too much disk space being used up.  Luxun supports a <code>log.retention.size</code> setting, internally, Luxun will periodically check the total size of back files and use <code>limitBackFileSize</code> interface to prune some old back files to maintain size.</li>
<li><strong><em>getBackFileSize</em></strong> : Get current total size of back files of a queue.</li>
<li><strong><em>findClosestIndex(long timestamp)</em></strong> : find index closest to a given timestamp, this interface is useful in some cases that user want to consume by index and from a specific timestamp.</li>
<li><strong><em>flush</em></strong> : force to persist newly appended data, usually, this interface is not needed since OS will be responsible for the persistence of memory mapped buffer. We leave this interface to user in case they may need transactional reliability and they are aware of the cost to performance.</li>
</ol>
</blockquote>

<p>Note, in our queue design, enqueue only accept binary data as input, and dequeue only returns binary data, serialization and deserialization are outside the consideration of big queue design, in other word, Luxun can only see plain and raw bytes, we choose this design because:</p>

<blockquote><ol>
<li>This can simplify the queue design and implementation.</li>
<li>There are already a couple of mature and high performance serialization frameworks out there, such as protobuf, thrift, avro, just name a few, We can&#8217;t do better than these already established frameworks.</li>
<li>We give the flexibility to user to choose their preferred serialization framework.</li>
</ol>
</blockquote>

<h4>Reusability</h4>

<p>The big array structure(aka the persistent queue) is implemented as a standalone library, since its usage it not limited to Luxun only, any applications that need a fast, big and persistent queue can reuse the big array library, the source of this library is <a href="https://github.com/bulldog2011/bigqueue">here</a>.</p>

<h1>The Design of Thrift based Communication Layer</h1>

<h3>Rationality</h3>

<p>We choosed Thrift to implement the communication layer of Luxun, because:</p>

<blockquote><ol>
<li>Thrift is <strong><em>stable and mature</em></strong>, it was created by Facebook, now it&#8217;s an Apache project, it has been successfully used by famous projects like Cassandra and HBase.</li>
<li>Thrift has <strong><em>high performance</em></strong>, it provides highly effective serialization protocols like <code>TBinaryProtocol</code> and server model like <code>TNonBlockingServer</code>(so you won&#8217;t get troubled with building your own NIO server which is very tricky and error prone). High performance binary RPC support and non blocking server model are main attractive features that lead us to choose Thrift, since <strong><em>Fast Wire Serialization, High Throughput, Highly Concurrent and NonBlocking Communication</em></strong> are top priority architecture and design objectives of Luxun.</li>
<li>Thrift is <strong><em>simple and light-weight</em></strong>, you just need to define a simple interface using its light-weight IDL(interface definition language), then you can auto-generate basic server and client proxy code without much effort, this can not only minimize development effort, but later upgrading effort - you just need to update the IDL then re-generate.</li>
<li>Thrift has good <strong><em>cross-language</em></strong> support, supported platforms include but not limited to Java, CSharp, C++, PHP, Ruby, Python. One big factor we choose Thrift is - after we build the Thrift based Luxun queue service, clients for different language platforms are basically ready, If We need a client for languge X, We can easily generate one using its universal code generator.</li>
<li>Thrift is <strong><em>flexible</em></strong>, Thrift has a pluggable architecture, transport protocols(like tcp or http), serialization protocol(like TBinaryProtocol, TJSONProtocol) and server models(like TNonBlockingServer, TThreadPoolServer) are all changeable according to your real needs.</li>
</ol>
</blockquote>

<p>Basically, We think guys at Facebook have made a really cool RPC framework, greatly simplified service development.</p>

<h3>Components View</h3>

<p>Programming with Thrift just like playing with building blocks, see components view of the Luxun client and server below:</p>

<p><img class="center" src="http://bulldog2011.github.com/images/luxun/communication_components.png" width="600" height="800"></p>

<blockquote><ol>
<li>At the lowest layer is the underlying IO supported by Java language platform.</li>
<li>In the middle layer are components provided by Thrift, in Luxun implementation,
on server side, we chosen:

<ul>
<li><code>TnonblockingServerSocket</code> as <code>TTransport</code> protocol;</li>
<li><code>TBinaryProtocol</code> as <code>TProtocol</code> serialization protocol;</li>
<li>and <code>TNonblockingServer</code> as server model.<br/>
on client side, we chosen:</li>
<li><code>TSocket</code> as <code>TTransport</code> protocol;</li>
<li><code>TBinaryProtocol</code> as <code>TProtocol</code> serialization protocol.</li>
</ul>
</li>
<li>The <code>QueueService.Processor</code> and <code>QueueService.Client</code> are proxy auto-generated from Luxun service IDL, will be elaborated on later.</li>
<li>On top layer are the Luxun implementation of the queue service interface, on server side, we implement <code>QueueService.Iface</code> in a class called <code>LogManager</code>, which will communicate with clients through the generated <code>QueueService.Processor</code> proxy and delegate the real queue operations to the underlying persistent queue; On client side, we implement producer or consumer specific code, which communicates with the server through the generated <code>QueueService.Client</code> proxy.</li>
</ol>
</blockquote>

<h3>Luxun Thrift IDL</h3>

<p>The Luxun Thrift IDL is the messaging contract between Luxun server and clients(producers or consumers), see its formal definition below:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>namespace java com.leansoft.luxun.api.generated
</span><span class='line'>namespace csharp Leansoft.luxun.Api.Generated
</span><span class='line'>
</span><span class='line'>const i32 RANDOM_PARTION = -1;
</span><span class='line'>
</span><span class='line'>const string EARLIEST_INDEX_STRING = "earliest";
</span><span class='line'>const string LATEST_INDEX_STRING = "latest";
</span><span class='line'>
</span><span class='line'>const i64 EARLIEST_TIME = -1;
</span><span class='line'>const i64 LATEST_TIME = -2;
</span><span class='line'>
</span><span class='line'>enum ResultCode
</span><span class='line'>{
</span><span class='line'>  SUCCESS,
</span><span class='line'>  FAILURE,
</span><span class='line'>  TRY_LATER
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>enum ErrorCode
</span><span class='line'>{
</span><span class='line'>  INTERNAL_ERROR,
</span><span class='line'>  TOPIC_NOT_EXIST,
</span><span class='line'>  INDEX_OUT_OF_BOUNDS,
</span><span class='line'>  INVALID_TOPIC,
</span><span class='line'>  TOPIC_IS_EMPTY,
</span><span class='line'>  AUTHENTICATION_FAILURE,
</span><span class='line'>  MESSAGE_SIZE_TOO_LARGE,
</span><span class='line'>  ALL_MESSAGE_CONSUMED
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>struct Result
</span><span class='line'>{
</span><span class='line'>    1: required ResultCode resultCode,
</span><span class='line'>    2: ErrorCode errorCode,
</span><span class='line'>    3: string errorMessage
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>struct ProduceRequest {
</span><span class='line'>    1: required binary item,
</span><span class='line'>    2: required string topic,
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>struct ProduceResponse {
</span><span class='line'>    1: required Result result,
</span><span class='line'>    2: i64 index
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>struct ConsumeRequest {
</span><span class='line'>    1: required string topic,
</span><span class='line'>    2: string fanoutId, 
</span><span class='line'>    3: i64 startIndex,
</span><span class='line'>    4: i32 maxFetchSize,
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>struct ConsumeResponse {
</span><span class='line'>    1: required Result result,
</span><span class='line'>    2: list&lt;binary> itemList,
</span><span class='line'>    3: i64 lastConsumedIndex
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>struct FindClosestIndexByTimeRequest {
</span><span class='line'>    1: required i64 timestamp,
</span><span class='line'>    2: required string topic,
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>struct FindClosestIndexByTimeResponse {
</span><span class='line'>    1: required Result result,
</span><span class='line'>    2: i64 index,
</span><span class='line'>    3: i64 timestampOfIndex
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>struct DeleteTopicRequest {
</span><span class='line'>    1: required string topic,
</span><span class='line'>    2: required string password
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>struct DeleteTopicResponse {
</span><span class='line'>    1: required Result result,
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>struct GetSizeRequest {
</span><span class='line'>    1: required string topic,
</span><span class='line'>    3: string fanoutId
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>struct GetSizeResponse {
</span><span class='line'>    1: required Result result,
</span><span class='line'>    2: i64 size
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>service QueueService {
</span><span class='line'>    ProduceResponse produce(1: ProduceRequest produceRequest);
</span><span class='line'>    
</span><span class='line'>    // The 'oneway' modifier indicates that the client only makes a request and
</span><span class='line'>    // does not wait for any response at all. Oneway methods MUST be void.
</span><span class='line'>    oneway void asyncProduce(1: ProduceRequest produceRequest);
</span><span class='line'>
</span><span class='line'>    ConsumeResponse consume(1: ConsumeRequest consumeRequest);
</span><span class='line'>    
</span><span class='line'>    FindClosestIndexByTimeResponse findClosestIndexByTime(1: FindClosestIndexByTimeRequest findClosestIndexByTimeRequest);
</span><span class='line'>    
</span><span class='line'>    DeleteTopicResponse deleteTopic(1: DeleteTopicRequest deleteTopicRequest);
</span><span class='line'>    
</span><span class='line'>    GetSizeResponse getSize(1: GetSizeRequest getSizeRequest);
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>This is a quite simple and intuitive interface, let&#8217;s elaborate on supported calls one by one:</p>

<blockquote><ol>
<li>The <strong><em>produce</em></strong> call append binary data into the queue, you need to provide the target topic and the binary data as input, the response will return the operation result and the appended index if the operation is successful. The is a confirmed produce call, suitable for use case when strong transactional confirmation is needed.</li>
<li>The <strong><em>asyncProduce</em></strong> is similar in functionality to the <strong><em>produce</em></strong> call, the difference is that <strong><em>asyncProduce</em></strong> is an one way call, this call does not block to wait for the response, it just fires the request then forgets,  hence it will have better performance, our tests show <strong><em>asychProduce</em></strong> is 3 times faster than <strong><em>produce</em></strong>, this interface is used in Luxun high-level producer implementation for better producing performance.</li>
<li>The <strong><em>consume</em></strong> call supports to kinds of operation modes,

<ul>
<li><strong><em>consume by fanout id</em></strong>: this is just the fanout queue semantics support, in such mode, you need to provide target topic, a fanout id and a max fetch size as input, the response will return a list of binary data if the operation is successful.</li>
<li><strong><em>consume by index</em></strong>: this is a more flexible queue semantics support, in such mode, you need to provide target topic, a start index and a max fetch size as input, the response will return a list of binary data if the operation is successful.    <br/>
Note, if both fanout id and start index are provided, then fanout id will take precedence.
The max fetch size parameter is required to support batch consuming - one consume operation can fetch data up to the max fetch size, then return the whole batch list of binary data, this can improve consuming throughput a lot. If you just need to consume one item at a time, set max fetch size to &lt;= 0;</li>
</ul>
</li>
<li>The <strong><em>findClosestIndexByTime</em></strong> call is useful if you want <strong><em>consume by index</em></strong> semantics and want to find an index by a specific timestamp. You need to provide a target topic and a timestamp as input, the response will return closest index if the find operation is successful.</li>
<li>The <strong><em>deleteTopic</em></strong> call is used for deleting any unused topics, you need to provide a target topic and a authentication password(set on server side) as input, the response will return operation result, this is a call for queue administration.</li>
<li>The <strong><em>getSize</em></strong> call just returns the total number of items remaining in a topic, this is a call for queue status query, if fanout id is provided, then the size of specific fanout queue will be returned, if no fanout id is provided, then the size of underlying queue(big array) will be returned.</li>
</ol>
</blockquote>

<p>Simplicity is the ultimate design objective of the Luxun queue IDL, in order to simplify clients implementation and to make the interface understandable by average developer, at the time, future extension is easy because of the flexibility and IDL driven development provided by Thrift.</p>

<h1>The Design of the Producer</h1>

<p>The raw producer client generated from Luxun queue IDL can be used directly in real application, however, we believe the raw client is too low level for most average developers, so we provided a high-level and feature rich client which is actually a wrapper around the low level raw client generated from IDL. The high level producer not only provides a simpler and intuitive interface for average application developers, but provides advanced features like partitioning, compression, asynchronous batching, further improving the message producing performance. Let&#8217;s see the main design elements of the producer below.</p>

<h3>The Interface</h3>

<figure class='code'><figcaption><span>IProducer.java </span><a href='https://github.com/bulldog2011/luxun/blob/master/src/main/java/com/leansoft/luxun/producer/IProducer.java'>source  </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * Producer interface</span>
</span><span class='line'><span class="cm"> * </span>
</span><span class='line'><span class="cm"> * @author bulldog</span>
</span><span class='line'><span class="cm"> * @param &lt;K&gt; partition key</span>
</span><span class='line'><span class="cm"> * @param &lt;V&gt; real message</span>
</span><span class='line'><span class="cm"> * </span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">IProducer</span><span class="o">&lt;</span><span class="n">K</span><span class="o">,</span> <span class="n">V</span><span class="o">&gt;</span> <span class="kd">extends</span> <span class="n">Closeable</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     * Send messages</span>
</span><span class='line'><span class="cm">     * </span>
</span><span class='line'><span class="cm">     * @param data message data</span>
</span><span class='line'><span class="cm">     * @throws NoBrokersForTopicException no broker for this topic</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="kt">void</span> <span class="nf">send</span><span class="o">(</span><span class="n">ProducerData</span><span class="o">&lt;</span><span class="n">K</span><span class="o">,</span> <span class="n">V</span><span class="o">&gt;</span> <span class="n">data</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">NoBrokersForTopicException</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     * get message encoder</span>
</span><span class='line'><span class="cm">     * </span>
</span><span class='line'><span class="cm">     * @return message encoder</span>
</span><span class='line'><span class="cm">     * @see Encoder</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="n">Encoder</span><span class="o">&lt;</span><span class="n">V</span><span class="o">&gt;</span> <span class="nf">getEncoder</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     * get partition chooser</span>
</span><span class='line'><span class="cm">     * </span>
</span><span class='line'><span class="cm">     * @return partition chooser</span>
</span><span class='line'><span class="cm">     * @see IPartitioner</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="n">IPartitioner</span><span class="o">&lt;</span><span class="n">K</span><span class="o">&gt;</span> <span class="nf">getPartitioner</span><span class="o">();</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>ProducerData.java </span><a href='https://github.com/bulldog2011/luxun/blob/master/src/main/java/com/leansoft/luxun/producer/ProducerData.java'>source  </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm">* Represents the data to be sent using the Producer send API</span>
</span><span class='line'><span class="cm">*</span>
</span><span class='line'><span class="cm">* @author bulldog</span>
</span><span class='line'><span class="cm">* @param&lt;K&gt; partition key</span>
</span><span class='line'><span class="cm">* @param&lt;V&gt; real data</span>
</span><span class='line'><span class="cm">*</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ProducerData</span><span class="o">&lt;</span><span class="n">K</span><span class="o">,</span> <span class="n">V</span><span class="o">&gt;</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/** the topic under which the message is to be published */</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">String</span> <span class="n">topic</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/** the key used by the partitioner to pick a broker */</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">K</span> <span class="n">key</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/** variable length data to be published as Luxun messages under topic */</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">V</span><span class="o">&gt;</span> <span class="n">data</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">.</span>
</span><span class='line'>  <span class="o">.</span>
</span><span class='line'>  <span class="o">.</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>This interface is quite self explanatory, a real <code>IProducer</code> implementation is <a href="https://github.com/bulldog2011/luxun/blob/master/src/main/java/com/leansoft/luxun/producer/Producer.java">here</a>, to publish data to Luxun server, you just call <code>send</code> with target topic and data(or a list of data) as input, optionally, you may :</p>

<blockquote><ul>
<li>Provide an <a href="https://github.com/bulldog2011/luxun/blob/master/src/main/java/com/leansoft/luxun/serializer/Encoder.java">Encoder</a> to let the producer know how to convert your data into binary format,</li>
<li>Provide an <a href="https://github.com/bulldog2011/luxun/blob/master/src/main/java/com/leansoft/luxun/producer/IPartitioner.java">IPartitioner</a> to let the producer know how to choose the target Luxun borker, in such case, you may also provide a partition key as part of the data.</li>
</ul>
</blockquote>

<h3>Partitioning</h3>

<p>At producer side, Luxun supports distribution through client side partitioning - the producer will choose a target broker using the default or user specified partitioner, if the default <a href="https://github.com/bulldog2011/luxun/blob/master/src/main/java/com/leansoft/luxun/producer/DefaultPartitioner.java">random partitioner</a> is used, then the producer will pick a server at random when producing data, this end up with a distributed queue that each server stands alone and is strongly ordered, making the cluster loosely ordered.
In many situations, loose ordering is sufficient. Dropping the requirement on cross communication makes it horizontally scale to infinity and beyond: no multicast, not &#8220;elections&#8221;, no coordination at all.</p>

<p><img class="center" src="http://bulldog2011.github.com/images/luxun/partitioning.png" width="400" height="600"></p>

<p>It&#8217;s also feasible to use a VIP between the producers and the Luxun cluster, in such case, producers only need to know the address of VIP, the VIP will be responsible for distributing traffic to different brokers.</p>

<p><img class="center" src="http://bulldog2011.github.com/images/luxun/vip.png" width="400" height="600"></p>

<h3>Compression</h3>

<p>Big data is big consumer of network bandwidth and disk storage, compression, if used appropriately, can
reduce bandwidth and storage usage to an acceptable level. Most of big data like logs are text data, making compression a high priority choice when designing the collecting system.</p>

<p>In current implementation, Luxun supports <a href="https://en.wikipedia.org/wiki/Gzip">gzip</a> and <a href="http://en.wikipedia.org/wiki/Snappy_%28software%29">snappy</a> compression, enabled by producer side setting. Below is the message encoding flow at producer side:</p>

<blockquote><ol>
<li>Use user specified or default <code>Encoder</code> to convert user provided data into binary format then wrap them in a TMessageList container object, TMessageList is generated from Thrift IDL, see definition <a href="https://github.com/bulldog2011/luxun/blob/master/src/main/resources/thrift/message.thrift">here</a>.</li>
<li>Convert the TMessageList into binary format using Thrift serialization, compress the binary according to user specified codec, if no codec specified, then the binary data won&#8217;t be compressed.</li>
<li>Wrap the compressed binary data with codec into another TMessagePack container object, TMessagePack is also generated from Thrift IDL, see definition <a href="https://github.com/bulldog2011/luxun/blob/master/src/main/resources/thrift/message.thrift">here</a>.</li>
<li>Convert the TMessagePack into binary format using Thrift serialization, then send the binary to Luxun broker by calling <code>produce</code> raw API.</li>
</ol>
</blockquote>

<p>Below is corresponding message decoding flow at consumer side:</p>

<blockquote><ol>
<li>Get binary data from Luxun broker by calling <code>consume</code> raw API.</li>
<li>Convert the binary data into a TMessagePack object by using Thrift serialization.</li>
<li>Extract codec and the wrapped binary data from the TMessagePack object, decompress the binary data according to the codec.</li>
<li>Convert the decompressed binary data into a TMessageList object by using Thrift serialization.</li>
<li>Extract data wrapped in the TMessageList object and convert them into user format by using user specified or default <code>Decoder</code>.</li>
</ol>
</blockquote>

<h3>Batch &amp; Asynchronous Producing</h3>

<p>The roundtrip overhead of RPC call over network has a significant impact on the system throughput and performance, as a best practice, many big data systems use batch and asynchronous producing technology at producer side for higher throughput, our testing also showed that the performance of batch producing is far better(order of magnitude differences) than the performance of producing without batch.</p>

<p>Figures below vividly show the inner working of synchronous and asynchronous(aka batch) producing:</p>

<p><img class="center" src="http://bulldog2011.github.com/images/luxun/sync_producer.png" width="400" height="600"></p>

<p><img class="center" src="http://bulldog2011.github.com/images/luxun/async_producer.png" width="400" height="600"></p>

<p>First, in both sync and async producing modes, there are a couple of sync(or async) producers cached on the producer side, and there is a one to one mapping between a sync(or async) producer and a Luxun broker, at runtime, whenever there is a producing request, the producer will pick one concrete producer instance from cache by partition policy .</p>

<p>In sync producer mode, the sync producer will send a message to Luxun broker everytime it gets a message sending request from calling threads, and the calling thread will block before the <code>send</code> call return.</p>

<p>In asyn producer mode, messages from sending threads will be cached in an inner blocking queue first, and there is an inner sender thread which will continuously poll messages from the queue, collate and pack messages into chunk according to target topic, and send the chunk to Luxun server eventually. In async mode, message sending is actually triggered by <strong><em>either</em></strong> of following configurable conditions:</p>

<blockquote><ol>
<li>The number of messages in the blocking queue has reached a threshhold.</li>
<li>A time interval has expired.</li>
</ol>
</blockquote>

<p>Async producing does not block calling thread, the calling thread just fire the message then forget, so async producing has no performance impact on upper layer calling application, it&#8217;s a preferred mode for most big data collecting scenarios.</p>

<p>Although the throughput of sync producing does not compare with async producing, in some situations, sync producing is a preferred mode, for example, in real time event system, speed is a top priority  while throughput is a secondary consideration.</p>

<h1>The Design of the Consumer</h1>

<p>In current implementation, Luxun provides two kinds of consumers:</p>

<h3>A Simple Consumer</h3>

<p>Simple consumer only supports consuming from one broker, it is just provided for demo, testing, or for user extension, following is the main interface of simple consumer:</p>

<figure class='code'><figcaption><span>SimpleConsumer.java </span><a href='https://github.com/bulldog2011/luxun/blob/master/src/main/java/com/leansoft/luxun/consumer/SimpleConsumer.java'>source  </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">MessageList</span><span class="o">&gt;</span> <span class="nf">consume</span><span class="o">(</span><span class="n">String</span> <span class="n">topic</span><span class="o">,</span> <span class="kt">long</span> <span class="n">index</span><span class="o">,</span> <span class="kt">int</span> <span class="n">fetchSize</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">MessageList</span><span class="o">&gt;</span> <span class="nf">consume</span><span class="o">(</span><span class="n">String</span> <span class="n">topic</span><span class="o">,</span> <span class="n">String</span> <span class="n">fanoutId</span><span class="o">,</span> <span class="kt">int</span> <span class="n">fetchSize</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>As the interface show, <code>consume by index</code> and <code>consume by fanoutId</code> are supported, fetchSize setting is used for batch consuming, once the consume succeeds, a list of <code>MessageList</code> will be returned, one <code>MessageList</code> is one compressed and encoded version of <code>ProducerData</code> produced by producer, so before you can get real data in user format, you still need to decode according to the message decode flow described in section above.</p>

<h3>Advanced Consumer</h3>

<p>The advanced consumer provides high-level abstraction to simplify consuming operation, it supports distributed consuming, multi-threads consuming and group consuming features. Below is main interface to create advanced consumer:</p>

<figure class='code'><figcaption><span>IStreamFactory.java </span><a href='https://github.com/bulldog2011/luxun/blob/master/src/main/java/com/leansoft/luxun/consumer/IStreamFactory.java'>source  </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm">* Factory interface for streaming consumer</span>
</span><span class='line'><span class="cm">*</span>
</span><span class='line'><span class="cm">* @author bulldog</span>
</span><span class='line'><span class="cm">*</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">IStreamFactory</span> <span class="kd">extends</span> <span class="n">Closeable</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm">* Create a list of {@link MessageStream} for each topic</span>
</span><span class='line'><span class="cm">*</span>
</span><span class='line'><span class="cm">* @param topicThreadNumMap a map of (topic, number of threads/streams) pair</span>
</span><span class='line'><span class="cm">* @param decoder message decoder</span>
</span><span class='line'><span class="cm">* @return a map of (topic,list of MessageStream) pair. The number of</span>
</span><span class='line'><span class="cm">* items in the list is the number of threads/streams. Each MessageStream supports</span>
</span><span class='line'><span class="cm">* an iterator of messages.</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">MessageStream</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;&gt;&gt;</span> <span class="n">createMessageStreams</span><span class="o">(</span>
</span><span class='line'>            <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Integer</span><span class="o">&gt;</span> <span class="n">topicThreadNumMap</span><span class="o">,</span> <span class="n">Decoder</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="n">decoder</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm">* Create a list of {@link MessageStream} for each topic with default Luxun message decoder</span>
</span><span class='line'><span class="cm">*</span>
</span><span class='line'><span class="cm">* @param topicThreadNumMap a map of (topic, number of threads/streams) pair</span>
</span><span class='line'><span class="cm">* @return a map of (topic,list of MessageStream) pair. The number of</span>
</span><span class='line'><span class="cm">* items in the list is the number of threads/streams. Each MessageStream supports</span>
</span><span class='line'><span class="cm">* an iterator of messages.</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">MessageStream</span><span class="o">&lt;</span><span class="n">Message</span><span class="o">&gt;&gt;&gt;</span> <span class="n">createMessageStreams</span><span class="o">(</span>
</span><span class='line'>            <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Integer</span><span class="o">&gt;</span> <span class="n">topicThreadNumMap</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm">* Shut down the consumer</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">close</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">IOException</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>In this interface, the message consumer is abstracted as message stream, to create message streams, you provide a map with :</p>

<blockquote><ul>
<li>target topic as key</li>
<li>number of consuming threads(or streams) as value</li>
</ul>
</blockquote>

<p>The concrete <code>IStreamFactory</code> implementation will return a list of message streams per topic, then you can delegate these message streams to different threads for concurrent consuming.
Behind the scene, concrete <code>IStreamFactory</code> implementation will spawn a couple of fetcher threads(one thread for one broker) that will concurrently fetch messages in target topic in Luxun servers, and put the fetched messages into a blocking queue, <code>MessageStream</code> abstraction is just a wrapper around the blocking queue with additional <code>Iterable</code> support, when upper layer threads concurrently consume on their respective streams, they are actually contenting messages in one blocking queue.</p>

<p><img class="center" src="http://bulldog2011.github.com/images/luxun/concurrent_consuming.png" width="400" height="600"></p>

<p>Advanced consumer has encapsulated the message decoding flow, so when you iterate on the message stream, you will get message in user format directly.</p>

<p>Similar to producer, consumer uses a simple and random policy for distributed consuming, the spawned  fetcher threads will continuously check broker for message, if no message available in a certain broker, the corresponding thread will back off till message is available again, this can avoid frequent while fruitless server pull.</p>

<p>When you finish with consuming, call <code>close</code> on the <code>IStreamFactory</code> will stop the underlying fetcher threads, then wait the blocking queue to be emptied by upper consuming threads. Call <code>close</code> is a must to avoid message lose.</p>

<p>In case one consumer is not enough to keep up with the speed of producers, several consumer can form a <code>consumer group</code>, in such case, every consumer in the same group will use same <code>group id</code>(or <code>fanout id</code>), and every message in a topic will be consumed by one and only one consumer. This is just the <code>consume once semantics</code>.</p>

<p>If different consumers or consumer groups use different <code>group id</code>(or <code>fanout id</code>) to consume messages in same topic, then every consumer(or consumer group) can consume independently, means every message in a topic will go to every consumer(or consume group). This is just the <code>fanout queue semantics</code>.</p>

<p>Below is a figure vividly shows the <code>consume once</code> queue, <code>fanout</code> queue and <code>group consuming</code> semantics, in the figure:</p>

<blockquote><ol>
<li>There is a topic called <code>moon</code> distributed on four Luxun brokers.</li>
<li>There are two topic <code>moon</code> consuming groups, group A and group B.</li>
<li>In group A, there are four topic <code>moon</code> consumers.</li>
<li>In group B, there are six topic <code>moon</code> consumers.</li>
</ol>
</blockquote>

<p>Within a consumer group, a message in a topic can only be consumed by exact one consumer, for example, in consumer group A, message marked red can only be consumed by exact one consumer. Among different consumer groups, a message can be consumed by respective groups independently, for example, both group A and B will receive a separate copy of message marked green.</p>

<p><img class="center" src="http://bulldog2011.github.com/images/luxun/consumer_group.png" width="400" height="600"></p>

<p>Although Luxun only provides two kinds of consumer interface, it does not limit user to build more advanced consuming semantics, such as consume by index, transactional consuming, etc, by extending the raw consuming interface provide by Luxun.</p>

<h1>Management &amp; Monitoring</h1>

<p>Luxun is a system software, no fancy UI, management and monitoring are de factor UI of Luxun, also essential parts of Luxun architecture.</p>

<p>In current implementation, management functionality is limited, administrator can only delete useless topic in Luxun broker, in the future, more management functionality will be integrated as needed.</p>

<p>Luxun relies on <a href="http://en.wikipedia.org/wiki/Java_Management_Extensions">JMX</a> for system metrics monitoring, a list of monitored metrics will be listed in a separate post for operation reference.</p>

<h1>Performance</h1>

<p>Intensive tests show the performance of Luxun messaging system is quite good, in single sever grade machine and single topic case, the average throughput of both producing and consuming can be <strong><em>>> 100MBps</em></strong>, this is amazing given that Luxun is a persistent messaging system. See detailed performance analysis and conclusion <a href="http://bulldog2011.github.io/blog/2013/04/20/luxun-performance-test/">here</a>.</p>

<h1>Luxun vs Apache Kafka - the Main Differences</h1>

<p>Although Luxun borrowed many design ideas from Apache Kafka, Luxun is not a simple clone of Kafka, it has some obvious differentiating factors:</p>

<blockquote><ol>
<li>Luxun is based on <a href="http://en.wikipedia.org/wiki/Memory-mapped_file">Memory Mapped file</a>, while Kafka is based on filesystem and OS page cache, memory mapped file is a natural bridge between volatile memory and persistent disk, hence it will have better throughput, memory mapped file also has following unique features:

<ul>
<li>Message appended by producer thread will be immediately visible to consumer threads, even producer thread hasn&#8217;t flushed the message explicitly, this makes realtime consuming possible.</li>
<li>OS will ensure the message persistence even the process crashes and there is no explicit flush before the crash.</li>
<li>In Java implementation, memory mapped file dose not use heap memory directly, so the GC impact is limited.</li>
</ul>
</li>
<li>Luxun leveraged <a href="http://thrift.apache.org/">Thrift RPC</a> as communication layer, while Kafka built its custom NIO communication layer and messaging protocol, custom NIO layer may have better performance, while Thrift makes generating communication infrastructure and cross-language clients(producer or consumer) fairy simple, this is a typical maintainability over performance design decision.</li>
<li>Luxun message consuming is index(array like) based, while Kafka message consuming is offset based, we believe index access mode can simplify design and can separate error domain better than offset.</li>
<li>Luxun uses simple and random distribution mechanism for scalability, similar to <a href="https://github.com/robey/kestrel">Kestrel</a>, each server handles a set of reliable, ordered message queues. When you put a cluster of these server together, with no cross communication, and pick a server at random whenever you do a <code>produce</code> or <code>consume</code>, you end up with a reliable, loosely ordered message queue(in many situations, loose ordering is sufficient). On the other hand, Kafka relies on Zookeeper for distributed coordination, We believe Zookeeper is still too heavy-weight for small to medium sized companies(the main targets of Luxun), and the learning curve is still steep for average developers. Of cause, Luxun has extension point left for future possible Zookeeper integration.</li>
<li>Luxun only supports server level partitioning - partition a topic on different servers, while Kafka supports partitioning within a topic. Our performance test show partitioning within a topic has no performance gain, at the same time, it makes design complex.</li>
</ol>
</blockquote>

<p>The difference above is just difference, it&#8217;s not to say that one is better than the other, Luxun and Kafka have different architectural objectives,  different target user and applications.</p>

<h2>Contributions</h2>

<p>Luxun borrowed design ideas and adapted source from following open source projects:</p>

<blockquote><ol>
<li><a href="http://kafka.apache.org/index.html">Apache Kafka</a>, a distributed publish-subscribe messaging system using Scala as implementation language.</li>
<li><a href="https://github.com/adyliu/jafka">Jafka</a>, a Kafka clone using Java as implementation language.</li>
<li><a href="https://github.com/peter-lawrey/Java-Chronicle">Java Chronicel</a>, an ultra low latency, high throughput, persisted, messaging and event driven in memory database. using memory mapped file and index based access mode, implemented in Java.</li>
<li><a href="http://code.google.com/p/fqueue/">fqueue</a>, fast and persistent queue based on memory mapped file and paging algorithm, implemented in Java.</li>
<li><a href="http://code.google.com/p/ashes-queue/">ashes-queue</a>, FIFO queue based on memory mapped file and paging algorithm, implemented in Java.</li>
<li><a href="https://github.com/robey/kestrel">Kestrel</a>, a simple, distributed message queue system implemented in Scala, supporting reliable, loosely ordered message queue.</li>
</ol>
</blockquote>

<p>Many thanks to the authors of these open source projects!</p>

<h2>Next Step</h2>

<ol>
<li>Add a sharding layer to support partition(for distribution and scalability) and replication(for reliability and performance), may leverage <a href="https://github.com/twitter/gizzard">gizzard</a> sharding framework or <a href="http://zookeeper.apache.org/">Zookeeper</a>.</li>
<li>More clients, like C#, PHP, Ruby, Python, C++.</li>
<li>Big data applications, like centralized logging, tracing, metrics, realtime events system based on Luxun.</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WSDL Driven Development on iOS - the Big Picture]]></title>
    <link href="http://bulldog2011.github.com/blog/2013/03/25/wsdl-driven-development-on-ios-the-big-picture/"/>
    <updated>2013-03-25T20:03:00+08:00</updated>
    <id>http://bulldog2011.github.com/blog/2013/03/25/wsdl-driven-development-on-ios-the-big-picture</id>
    <content type="html"><![CDATA[<p>WSDL driven development is a popular and mature development methodology on platforms like Java and .Net, tools like Axis, CXF, JAX-WS, WCF are used by many developers for rapid web service development. With WSDL as interface contract, both server side and client side proxies can be automatically generated from WSDL, developer can work with plain old interfaces/objects directly, no need to worry about low level SOAP/XML serialization/deserialization and service invocation details(which are very tedious and error-prone), this kind of model driven development(or meta-data driven development) can not only dramatically reduce initial development cost, but reduce long term maintenance cost.</p>

<!--more-->


<p>Although nowadays there is a trend toward RESTful service(which has no formal interface definition like WSDL), many industries(such as ecommerce industry) have a complex business domain, it&#8217;s very hard to expose complex business logic as RESTful service(a typical maintenance nightmare), so we will keep seeing that many enterprises will keep exposing their services as traditional SOAP or XML based web services, some examples are <a href="https://affiliate-program.amazon.com/gp/advertising/api/detail/main.html">Amazon Product Advertising Web Service</a>, eBay <a href="https://www.x.com/developers/ebay/products/finding-api">Finding</a>, <a href="https://www.x.com/developers/ebay/products/shopping-api">Shopping</a> and <a href="https://www.x.com/developers/ebay/products/trading-api">Trading</a> Web Services, etc.</p>

<p>Can WSDL driven development be put into practice on iOS platform? Yes, now with <a href="https://github.com/bulldog2011/pico">Pico Web Service Client Framework</a> and <a href="https://github.com/bulldog2011/mwsc">WSDL compiler for iOS</a>, you can also leverage WSDL driven development technology on iOS platform, dramatically improving your application development speed.</p>

<p>Let&#8217;s see the big picture:</p>

<p><img class="center" src="http://bulldog2011.github.com/images/pico/big_picture.png" width="600" height="800"></p>

<p>The picture above is the blueprint of WSDL driven development on iOS. The left part of the blueprint is a build-time phase view, in this phase, we will leverage <a href="https://github.com/bulldog2011/mwsc">mwsc</a> wsdl compiler to automatically generate service proxy from wsdl, the service proxy alone can&#8217;t be used directly, it must be integrated with the generic <a href="https://github.com/bulldog2011/pico">Pico Web Service client framework</a> to take effect; The right part of the blueprint is a runtime view, a typical flow starts from your iOS app, your app issues request on service proxy, the proxy passes the request to the Pico runtime framework which will delegate the object to XML/SOAP marshalling work to Pico binding framework then send serialized XML/SOAP request to external service through <a href="https://github.com/AFNetworking/AFNetworking">AFNetworking HTTP client</a> component, when an XML/SOAP response is received by the HTTP client component, the Pico runtime framework will also delegate the XML/SOAP to object unmarshalling work to Pico binding framework and passes the deserialized response object to the proxy which will eventually return the response object back to the calling app.</p>

<p>We used the synchronous flow in the picture just for simple demonstration, the real call flow in the runtime is asynchronous, by leveraging <code>NSOperation</code>, <code>NSOperationQueue</code> and <code>GCD</code>, in order not to block main UI thread.</p>

<p>The Pico binding framework is the core of the Pico runtime, the real object<->xml binding magic happens here, below is the architecture of the binding runtime:</p>

<p><img class="center" src="http://bulldog2011.github.com/images/pico/binding.png" width="500" height="600"></p>

<p>There are four main components:</p>

<blockquote><ol>
<li><strong><em>Marshaller</em></strong> - responsible for object to xml marshalling</li>
<li><strong><em>Unmarshaller</em></strong> - responsible for xml to object unmarshalling</li>
<li><strong><em>BindingSchema</em></strong> - store object<->xml mapping information, used by both Marshaller and Unmarshaller to guide the marshalling/unmarshalling process at runtime, schema is extracted from classes and is cached for better performance.</li>
<li><strong><em>Converter</em></strong> - type converter for primitive types or frequently used types.</li>
</ol>
</blockquote>

<p>The marshalling/unmarshalling algorithm is recursive in nature:</p>

<blockquote><ol>
<li>for field of primitive or frequently used type, use corresponding converter to convert the field directly.</li>
<li>for field of object type, convert the fields of the object one by one and recursively.</li>
</ol>
</blockquote>

<p>The code generator component is based on <a href="http://docs.oracle.com/javase/6/docs/technotes/tools/share/wsimport.html">JAX-WS Wsimport</a> and <a href="http://freemarker.org/">Freemarker</a> template engine, see the whole architecture below:</p>

<p><img class="center" src="http://bulldog2011.github.com/images/pico/codegen-arch.png" width="600" height="750"></p>

<p>The whole architecture can be summarized as <strong><em>Model + Template = Code</em></strong>, code generation flow as following:</p>

<blockquote><ol>
<li>WSDL doc is first fed into Wsimport and a JAXB/JAX-WS model is generated.</li>
<li>The JAXB/JAX-WS model is then transformed into a language independent intermediate codegen model.</li>
<li>The codegen model and corresponding target language templates(Objective-C or Android) are then fed into the Freemarker template engine.</li>
<li>The Freemarker template engine will eventually transform the in-memory model into target code, guided by the templates.</li>
</ol>
</blockquote>

<p>There are other WSDL to Objective-C code generation tools, like <a href="http://code.google.com/p/wsdl2objc/">wsdl2objc</a> and <a href="http://sudzc.com/">SudzC</a>, it&#8217;s ok to use these tools to generate code from simple wsdl, but when fed with an industry level wsdl like eBay or Amazon wsdl, seems these tools will always break. Unlike these simple tools, the mwsc code generator provided by Pico framework is backed by JAX-WS Wsimport, which is mature and stable, and can recognize most standard WSDL/Schema components, by delegating the most tricky and complex wsdl model transformation task to Wsimport, the mwsc code generator solved the WSDL to Objective-C(or Android Java) problem in a simple while elegant way.</p>

<p>The mwsc code generator not only generates simple bean classes from WSDL/Schema, but also generates the XML<->object mapping information(schema) and records these information in the class as meta-data, the meta-data will later be leveraged by Pico binding framework to guide the XML<->Object transformation at runtime.</p>

<p>With a generic code generation tool and a generic web service client runtime, web service based app development on iOS platform becomes easy, there is no low level xml parsing and http handling(which are tedious, error-prone and hard to maintain) any more, developers only need to work with a plain old service interface for service invocation, now they can put their real effort on application logic and UI, leading to agile iOS app development.</p>

<p>In later posts, I will show how to put WSDL driven iOS app development into practice in a series of tutorials, just stay tuned.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[fanout queue tutorial]]></title>
    <link href="http://bulldog2011.github.com/blog/2013/03/25/fanout-queue-tutorial/"/>
    <updated>2013-03-25T15:34:00+08:00</updated>
    <id>http://bulldog2011.github.com/blog/2013/03/25/fanout-queue-tutorial</id>
    <content type="html"><![CDATA[<p>This is a tutorial to show the basic API usage of fanout queue, the source of this tutorial is <a href="https://github.com/bulldog2011/bigqueue/blob/master/src/test/java/com/leansoft/bigqueue/tutorial/FanOutQueueTutorial.java">here</a>.</p>

<p>Why we need a queue with fanout semantics? here is a typical case:
Suppose we have a queue for log collecting, at the backend, we have two(or more) use cases of the log data, for example, one use case is real-time log analysis and alerting, another use case is offline log analysis and reporting, in these cases, we will have two(or more) independent consumers, such as one real-time log consumer and one offline log consumer, but we only have one queue, if we just use a typical queue, then it only supports one consumer(this is called consume once queue), the data consumed by one consumer will not be available to other consumer(s) again. One solution to this problem is to create two(or more) queues for each consumer, and let producers produce messages into all these queues, but this is a silly and bandwidth/storage cost solution. A more elegant solution is to add fanout semantics to the queue - one queue can be independently consumed by multiple consumers, internally, fanout queue will maintain queue front pointers for each consumer. The fanout queue in the bigqueue library supports fanout semantics, it also supports a group consuming scenario - multiple consumers form a group(use same fanout id) to consume a queue concurrently for higher consuming throughput.</p>

<!--more-->


<p>Below is figure visually show the fanout semantics:</p>

<p><img class="center" src="http://bulldog2011.github.com/images/bigqueue/fanout-queue.png" width="300" height="300"></p>

<p>The interface of fanout queue is <a href="https://github.com/bulldog2011/bigqueue/blob/master/src/main/java/com/leansoft/bigqueue/IFanOutQueue.java">here</a>.</p>

<p>You can create(initialize) a new fanout queue in just one statement:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// create a new fanout queue</span>
</span><span class='line'><span class="n">IFanOutQueue</span> <span class="n">foQueue</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FanOutQueueImpl</span><span class="o">(</span><span class="s">&quot;d:/tutorial/fanout-queue&quot;</span><span class="o">,</span> <span class="s">&quot;demo&quot;</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>the first parameter is a directory you want to store the queue data file, the second parameter is the queue name. Now you have a reference to an empty queue.</p>

<p>At producing side, fanout queue is the same as typical queue, to add or produce item into the queue, you just call the <strong><em>enqueue</em></strong> method on the queue reference, here we enqueue 10 logs into the queue:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// enqueue some logs</span>
</span><span class='line'><span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">String</span> <span class="n">log</span> <span class="o">=</span> <span class="s">&quot;log-&quot;</span> <span class="o">+</span> <span class="n">i</span><span class="o">;</span>
</span><span class='line'>  <span class="n">foQueue</span><span class="o">.</span><span class="na">enqueue</span><span class="o">(</span><span class="n">log</span><span class="o">.</span><span class="na">getBytes</span><span class="o">());</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong><em>Note:</em></strong> the enqueue method only accept byte array data as input, if your object is not byte array data, you are responsible to convert your object into byte array first before enqueue, this is called serialization, when you dequeue later, you are also response to de-serialize the byte array data into your object format.</p>

<p>Now let&#8217;s see the fanout semantics, to consume from a fanout queue, you need to provide a fanout id to uniquely identify the fanout queue, then call the <strong><em>dequeue</em></strong> method with fanout id as parameter, below we use a fanout id called &#8216;realtime&#8217; to consume all logs in the &#8216;realtime&#8217; fanout queue(&#8216;realtime&#8217; is just a logic name, there is only one physical underlying queue):</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// consuming the queue with fanoutId 1</span>
</span><span class='line'><span class="n">String</span> <span class="n">fanoutId1</span> <span class="o">=</span> <span class="s">&quot;realtime&quot;</span><span class="o">;</span>
</span><span class='line'><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;output from &quot;</span> <span class="o">+</span> <span class="n">fanoutId1</span> <span class="o">+</span> <span class="s">&quot; consumer:&quot;</span><span class="o">);</span>
</span><span class='line'><span class="k">while</span><span class="o">(!</span><span class="n">foQueue</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">(</span><span class="n">fanoutId1</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">String</span> <span class="n">item</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="n">foQueue</span><span class="o">.</span><span class="na">dequeue</span><span class="o">(</span><span class="n">fanoutId1</span><span class="o">));</span>
</span><span class='line'>  <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">item</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>below is the output:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>output from realtime consumer
</span><span class='line'>log-0
</span><span class='line'>log-1
</span><span class='line'>log-2
</span><span class='line'>log-3
</span><span class='line'>log-4
</span><span class='line'>log-5
</span><span class='line'>log-6
</span><span class='line'>log-7
</span><span class='line'>log-8
</span><span class='line'>log-9</span></code></pre></td></tr></table></div></figure>


<p>Now let&#8217;s suppose there is another consumer called &#8216;offline&#8217;, to consume all logs in the &#8216;offline&#8217; fanout queue, we just use similar consuming logic:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'> <span class="c1">// consuming the queue with fanoutId 2</span>
</span><span class='line'>  <span class="n">String</span> <span class="n">fanoutId2</span> <span class="o">=</span> <span class="s">&quot;offline&quot;</span><span class="o">;</span>
</span><span class='line'>  <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;output from &quot;</span> <span class="o">+</span> <span class="n">fanoutId2</span> <span class="o">+</span> <span class="s">&quot; consumer:&quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="k">while</span><span class="o">(!</span><span class="n">foQueue</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">(</span><span class="n">fanoutId2</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">String</span> <span class="n">item</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="n">foQueue</span><span class="o">.</span><span class="na">dequeue</span><span class="o">(</span><span class="n">fanoutId2</span><span class="o">));</span>
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">item</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>The only difference is now we use &#8216;offline&#8217; as fanout id instead of &#8216;realtime&#8217;, below is the output:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>output from offline consumer
</span><span class='line'>log-0
</span><span class='line'>log-1
</span><span class='line'>log-2
</span><span class='line'>log-3
</span><span class='line'>log-4
</span><span class='line'>log-5
</span><span class='line'>log-6
</span><span class='line'>log-7
</span><span class='line'>log-8
</span><span class='line'>log-9</span></code></pre></td></tr></table></div></figure>


<p>By comparing the output, you can see that both &#8216;realtime&#8217; consumer and &#8216;offline&#8217; consumer can consume one queue independently.</p>

<p>Finally, when you finish with the queue, just call <strong><em>close</em></strong> method to release resource used by the queue, this is not mandatory, just a best practice, call close will release part of used memory immediately. Usually, you initialize big queue in a try block and close it in the finally block, here is the usage paradigm:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// typical queue initialization and closing paradigm</span>
</span><span class='line'><span class="n">IFanOutQueue</span> <span class="n">foQueue</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'><span class="k">try</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">foQueue</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FanOutQueueImpl</span><span class="o">(</span><span class="s">&quot;d:/tutorial/fanout-queue&quot;</span><span class="o">,</span> <span class="s">&quot;demo&quot;</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span> <span class="k">finally</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">foQueue</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">foQueue</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>By the way, in current implementation, the fantout queue provided by bigqueue library does not limit the number of fanout queues, in other word, one queue can support arbitrary fanout consumers, as long as all consumer are using their respective fanout ids.</p>

<p>Fanout is a very powerful queue sementics, in a last project, we successfully used one log queue to support 3 kinds of log consumers:</p>

<blockquote><ol>
<li>realtime consumer, filter and store log events in in-memory db for real-time event alerting.</li>
<li>near-realtime consumer, store logs in HBase for daily log search and analysis.</li>
<li>offline consumer, store logs in Hadoop for long term analysis and reporting.</li>
</ol>
</blockquote>

<h3>Advanced Usage</h3>

<p>Sometimes, one consumer is not enough to keep up the speed of the producers, in such case, we can let multiple consumers(may host on same machines or multiple machines) to form a <code>consumer group</code>, in such case, every consumer in the same group will use same <code>fanout id</code>, and every message in the queue will be consumed by one and only one consumer in the group. This is just the <code>consume once semantics</code>.</p>

<p>If different consumers or consumer groups use different <code>fanout id</code> to consume messages in same queue, then every consumer(or consumer group) can consume independently, means every message in the queue will go to every consumer(or consumer group). This is just the <code>fanout queue semantics</code>.</p>

<p>Fanout queue is backed by the big array structure, so it is also big, fast and persistent, the capacity of fanout queue is only limited by available disk storage, fanout queue also provides methods to clean up expired back data files or to limit the total size of the back data files, please see the interface and unit tests for details.</p>

<p><strong><em>Note</em></strong>, the fanout queue interface also exposes the raw index based queue access interface to user, which means it&#8217;s possible to consume the queue by index, the interface is provided in case some user may need more flexible queue semantics, for example, to support transactional queue consuming by committing and saving index in DB or other persistent storage. It&#8217;s even possible to consume the queue randomly by index, although there may have performance issue in such case.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Schema driven web service client development on Android, Part 2: eBay Search App]]></title>
    <link href="http://bulldog2011.github.com/blog/2013/02/19/schema-driven-on-android-part-2-ebay-search/"/>
    <updated>2013-02-19T20:47:00+08:00</updated>
    <id>http://bulldog2011.github.com/blog/2013/02/19/schema-driven-on-android-part-2-ebay-search</id>
    <content type="html"><![CDATA[<p>This is the second part of my schema driven web service client development on Android series, in <a href="http://bulldog2011.github.com/blog/2013/02/17/schema-driven-on-android-part-1-hello-ebay-finding/">part one</a>, I introduced the blueprint of scheam driven development on Android, then I created a web service client proxy for eBay Finding API and built a minimum App as demo. In this second part, I will continue to create a functional eBay search app on Android by leveraging the proxy created in part one.</p>

<!--more-->


<p>There is a <a href="http://huguesjohnson.com/programming/java/android-ebay/">good post</a> showing how to integrate Android Application with the eBay API, the author did a very good job, the steps are shown in great detail, this is definitely the recommended reading if you want to develop eBay API based application on Android, however, the author created the application with much low-level passing and plumbing code, there are at least three problems with such approach:<br/>
1. The effort to create such simple application is nontrival, this is enough to scare away average developers.<br/>
2. The application is hard to maintain, whenever eBay changes some API interface, much effort is needed to rewrite and debug the json parsing code.<br/>
3. The application is hard to scale, if more functions and more API calls are needed, much effort is needed to write additional parsing and calling code.</p>

<p>I&#8217;ve created a similar application without much effort, I just leveraged the proxy code base created in part one of this series and focused my effort on writing some application logic and UI code. In fact, since I don&#8217;t get troubled in backend parsing and plumbing code, I can write far less code than the above mentioned author, this is the power of scheam driven or proxy driven development, below is the main UI of the finished application.</p>

<p><img class="center" src="http://bulldog2011.github.com/images/nano-rest/ebay_search.png" width="400" height="600"></p>

<p>I won&#8217;t post much code here since this is a typical andorid application and the code of the whole application is quite self explanatory, you can download the whole application <a href="https://github.com/bulldog2011/nano-rest/tree/master/sample/EBaySearch">here</a></p>

<p>Let me drop a few notes about this application here:</p>

<ol>
<li>The application uses the FindItemsByKeywords request processor built in part 1, and the API call follows the same paradigm shown in part 1.</li>
<li>This is a typical eBay search application, there is only one <a href="https://github.com/bulldog2011/nano-rest/blob/master/sample/EBaySearch/src/com/leansoft/nanorest/sample/FindingActivity.java">main activity</a> which extends ListActivity, user input a search keyword and click search, the application calls the FindItemsByKeywords request processor with asynchronous callback specified, inside the callback, UI is updated by populating the list view with search result items, not much code in the main activity.</li>
<li><a href="https://github.com/mttkay/droid-fu/blob/master/src/main/java/com/github/droidfu/widgets/WebImageView.java">Droidfu WebImageView</a> component is used to shown ebay item gallary thumbnail image, note, I removed the cache part of the component to minimize the code base, in real application, image cache is required for better performance.</li>
<li>I&#8217;ve added a dynamic sliding with pagination feature which makes the applciation look cool and friendly.</li>
<li>Before you run the application, please don&#8217;t forget to fill your <strong><em>APP NAME</em></strong> in the <a href="https://github.com/bulldog2011/nano-rest/blob/master/sample/EBaySearch/src/com/ebay/finding/auth/AppNameAuthenticationProvider.java">AppNameAuthenticationProvider class</a>.</li>
</ol>


<p>With the eBay Finding API proxy as SDK and the sample app as template, it&#8217;s not hard for you to create a more functional eBay Finding App on Android, I am looking forward that someone will build one, and let me know when you build one.</p>

<p>Let me reinterate three main <strong><em>highhights</em></strong> of scheam driven development on Android:</p>

<ol>
<li>Development effort is minimized, focus on application and UI logic instead of low level plumbling code.</li>
<li>Easy to maintain and scale, whenever the schema changes, resynchronize the proxy with the new schema and update application and UI logic accordingly, no manual xml parsing and debugging anymore.</li>
<li>Better quality and reliability, code generation and component resue foster better software quality and reliability.</li>
</ol>


<h4>Update 1 (2.23.2013)</h4>

<p>The eBay Search App has been enhanced to show how to mix API calls in one App:</p>

<ol>
<li>Search eBay using eBay Finding <a href="http://developer.ebay.com/DevZone/finding/CallRef/findItemsByKeywords.html">FindItemsByKeywords</a> API.</li>
<li>Show item details using eBay Shopping <a href="http://developer.ebay.com/DevZone/shopping/docs/CallRef/GetSingleItem.html">GetSingleItem</a> API.</li>
<li>Add item to watch list using eBay Trading <a href="http://developer.ebay.com/DevZone/XML/docs/Reference/eBay/AddToWatchList.html">AddToWatchList</a> API</li>
</ol>


<p>below is the item details UI:</p>

<p><img class="center" src="http://bulldog2011.github.com/images/nano-rest/ebay_demo.png" width="400" height="600"></p>

<p>Now with eBay Finding/Shopping/Trading API proxy as SDK and the demo app as template, you may create whatever eBay application you can think of, just let loose your imagination!</p>

<p>You can get the whole source of the enhanced App <a href="https://github.com/bulldog2011/nano-rest/tree/master/sample/EBayDemo">here</a>, Note, before you run the App, please fill in your eBay AppId and auth token in the <a href="https://github.com/bulldog2011/nano-rest/blob/master/sample/EBayDemo/src/com/leansoft/nanorest/sample/ConfigFactory.java">ConfigFactory</a> class.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Schema driven web service client development on Android, Part 1: Hello eBay Finding]]></title>
    <link href="http://bulldog2011.github.com/blog/2013/02/17/schema-driven-on-android-part-1-hello-ebay-finding/"/>
    <updated>2013-02-17T12:48:00+08:00</updated>
    <id>http://bulldog2011.github.com/blog/2013/02/17/schema-driven-on-android-part-1-hello-ebay-finding</id>
    <content type="html"><![CDATA[<p>Scheam driven web service development is quite popular in Java world, JAXB and JAX-WS are both mature standard, and frameworks like CXF, Axis are famous amount many developers for fast service development. It&#8217;s common to do scheam driven developent on server side, can scheam driven client development be done on Android? Yes, it can. Today I will show you how do do scheam driven development on Android by leveraging following light-weight frameworks:</p>

<!--more-->


<blockquote><ol>
<li><a href="https://github.com/bulldog2011/nano-rest">Nano-rest</a> restful client framework for Android, with Nano xml binding support.</li>
<li><a href="https://github.com/bulldog2011/mxjc">mxjc</a> scheam to Android java binding compiler.</li>
</ol>
</blockquote>

<p>The serivce I choose for demo is <a href="https://www.x.com/developers/ebay/products/finding-api">eBay Finding service</a>, here are why I choose this service:</p>

<blockquote><ol>
<li>I have some direct experience with this service.</li>
<li>eBay Finding serivce supports schema driven development since it provides a wsdl, at the same time, it also supports RESTful style service call.</li>
</ol>
</blockquote>

<p>If you are not familar with this serivce, please visit its <a href="https://www.x.com/developers/ebay/products/finding-api">official site</a>.</p>

<h3>The Big Picture</h3>

<p><img class="center" src="http://bulldog2011.github.com/images/nano-rest/big_picture.png" width="600" height="800"></p>

<p>The picture above is the blueprint of scheam driven development on Android. The left part of the blueprint is a build time view, here we leverage mxjc binding compiler to automatically generate service or domain classes from scheam or wsdl; The right part of the blueprint is a runtime view, a typical flow starts from your Android app, it issues request object on proxy component, the proxy passes the request to the Nano restful framework which will delegate the object to xml marshalling work to Nano binding framework and send the xml request to external service through HTTP transportation component, when an xml resposne is received by the HTTP transportation component, the Nano restful framework will also delegate the xml to object unmarshalling work to Nano binding framework and passes the response object to the proxy which will return the response object back to the calling app.</p>

<p>Let&#8217;s follow the blueprint and build a simple Android app step by step:</p>

<h3>Step 1 : Generate service classes from schema</h3>

<p>The first step of scheam driven development is to generate service classes from schema or wsdl, let&#8217;s download eBay Finding serivce wsdl <a href="http://developer.ebay.com/webservices/finding/latest/FindingService.wsdl">here</a>, also, let&#8217;s download <a href="https://github.com/bulldog2011/mxjc">mxjc binding compiler</a> zip package by following links on the github site, extract the zip package, suppose we put the wsdl in the same folder as the extracted zip package, then we execute command(suppose we are in Windows environment, Unix environment will be similar).</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bin\mxjc.bat -wsdl FindingService.wsdl</span></code></pre></td></tr></table></div></figure>


<p>When we execute this command, the schema inside the wsdl will be parsed by the binding compiler and Nano bindable classes will be generated, by default, the binding compiler will derive package name from wsdl, but you can override this by providing custom package name directly as command line options.
&#8216;-wsdl&#8217; option is needed since we are generating from wsdl, not default xsd. <br/>
By default, the service classes will be generated in the current directory.</p>

<h3>Step 2: Create a New Android Project</h3>

<p>Now let&#8217;s create a new Android project in IDE like Eclipse with ADT installed, to use Nano-rest client framework, the Android API version must be equal to or newer than 7(Androdi 2.1 or above), this is required since Nano-rest leverages Android Service mechanism for asynchronous service invocation.</p>

<p>With new Android project created, let&#8217;s add Nano-rest jar in the <strong><em>libs</em></strong> folder of the project, the Nano-rest jar can be downloaded by following link on the <a href="https://github.com/bulldog2011/nano-rest">Nano-rest github site</a>, the shaded jar is preferred since it already includes Nano xml binding framework dependency, otherwise, you have to add Nano xml binding framework jar separately.
Now, let&#8217;s copy the above generated service classes into the <strong><em>src</em></strong> folder the project, if we refresh the project, there should be no compiling error since all imports in the generated classes can be resolved by the Nano-rest shaded jar reference.</p>

<p>To let Nano-rest framework work correctly at runtime, we <strong><em>must</em></strong> added following declarations in the manifest file of the project:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>  <span class="nt">&lt;uses-permission</span> <span class="na">android:name=</span><span class="s">&quot;android.permission.INTERNET&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;uses-sdk</span> <span class="na">android:minSdkVersion=</span><span class="s">&quot;7&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;application&gt;</span>
</span><span class='line'>    <span class="nt">&lt;service</span> <span class="na">android:name=</span><span class="s">&quot;com.leansoft.nanorest.service.HTTPRequestExecutorService&quot;</span> <span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/service&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/application&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>The uses-permission declaration is needed for internet access, the minSdkVersion declaration has be explained above, and the HTTPRequestExecutorService class is required for asynchronous service invocation, synchronous service invocation may block Android main UI, leading to process crash, this is not expected, so as a best practice, we should always invoke service asynchronously on Android.</p>

<h3>Step 3 : Create eBay Finding API Proxy</h3>

<p>Web service client proxy can simplify service invocation code, usually, web serivce framework like CXF or JAX-WS has tool to auto-generate service proxy from wsdl, however, current mxjc binding compiler does not support proxy generation yet(it can only generate service classes from schema), but it&#8217;s not hard for us to write proxy class manually since Nano-rest has already encapsulated generic service invocation logic for us, we only need to extend it and add a few service specific logic, let&#8217;s just do it:</p>

<p>First, let&#8217;s definite some constants which will be used later:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">ebay</span><span class="o">.</span><span class="na">finding</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">FindingConstants</span> <span class="o">{</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="n">String</span> <span class="n">PRODUCTION_ENDPOINT</span> <span class="o">=</span> <span class="s">&quot;http://svcs.ebay.com/services/search/FindingService/v1&quot;</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="n">String</span> <span class="n">SANDBOX_ENDPOINT</span> <span class="o">=</span> <span class="s">&quot;http://svcs.sandbox.ebay.com/services/search/FindingService/v1&quot;</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="n">String</span> <span class="n">X_EBAY_SOA_OPERATION_NAME</span> <span class="o">=</span> <span class="s">&quot;X-EBAY-SOA-OPERATION-NAME&quot;</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="n">String</span> <span class="n">X_EBAY_SOA_SECURITY_APPNAME</span> <span class="o">=</span> <span class="s">&quot;X-EBAY-SOA-SECURITY-APPNAME&quot;</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>These constants are quite self explanatory, so I won&#8217;t give more comments.</p>

<p>Then we build a simple authentication class, eBay Finding serivce need a <strong><em>APP NAME</em></strong> as one of http request headers, so we just add it,</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">ebay</span><span class="o">.</span><span class="na">finding</span><span class="o">.</span><span class="na">auth</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.finding.FindingConstants</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.leansoft.nanorest.auth.AuthenticationProvider</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.leansoft.nanorest.client.BaseRestClient</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">AppNameAuthenticationProvider</span> <span class="kd">implements</span> <span class="n">AuthenticationProvider</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">authenticateRequest</span><span class="o">(</span><span class="n">BaseRestClient</span> <span class="n">client</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">client</span><span class="o">.</span><span class="na">addHeader</span><span class="o">(</span><span class="n">FindingConstants</span><span class="o">.</span><span class="na">X_EBAY_SOA_SECURITY_APPNAME</span><span class="o">,</span> <span class="s">&quot;YOUR_APPNAME_HERE&quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong><em>Note</em></strong>, before you can run the final finished application, you mush replace the APP NAME placeholder with your own eBay developer APP NAME which can be applied on eBay developer site.</p>

<p>Next, let&#8217;s build a generic request processor for eBay Finding serivce, with this base request processor, all specific request processors(supported by eBay Finding service) can be easily built later, let&#8217;s see the full definition of this base request processor:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">ebay</span><span class="o">.</span><span class="na">finding</span><span class="o">.</span><span class="na">request</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.finding.FindingConstants</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.finding.auth.AppNameAuthenticationProvider</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.marketplace.search.v1.services.AckValue</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.marketplace.search.v1.services.BaseServiceResponse</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.marketplace.search.v1.services.ErrorMessage</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.leansoft.nanorest.callback.HttpCallback</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.leansoft.nanorest.client.RestClient</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.leansoft.nanorest.domain.ResponseStatus</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.leansoft.nanorest.logger.ALog</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.leansoft.nanorest.parser.NanoXmlResponseParser</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.leansoft.nanorest.request.NanoXmlRequestProcessor</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">BaseFindingRequestProcessor</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="kd">extends</span> <span class="n">NanoXmlRequestProcessor</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="o">{</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">private</span> <span class="kd">final</span> <span class="n">Class</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="n">responseType</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="nf">BaseFindingRequestProcessor</span><span class="o">(</span><span class="n">Object</span> <span class="n">requestObject</span><span class="o">,</span> <span class="n">String</span> <span class="n">opName</span><span class="o">,</span> <span class="n">Class</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="n">responseType</span><span class="o">,</span>
</span><span class='line'>          <span class="n">HttpCallback</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="n">callback</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      
</span><span class='line'>      <span class="kd">super</span><span class="o">(</span><span class="n">requestObject</span><span class="o">,</span>
</span><span class='line'>            <span class="n">responseType</span><span class="o">,</span>
</span><span class='line'>            <span class="n">callback</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">responseType</span> <span class="o">=</span> <span class="n">responseType</span><span class="o">;</span>
</span><span class='line'>      
</span><span class='line'>      
</span><span class='line'>      <span class="n">RestClient</span> <span class="n">client</span> <span class="o">=</span> <span class="n">getRestClient</span><span class="o">();</span>
</span><span class='line'>      <span class="n">client</span><span class="o">.</span><span class="na">setUrl</span><span class="o">(</span><span class="n">FindingConstants</span><span class="o">.</span><span class="na">PRODUCTION_ENDPOINT</span><span class="o">);</span>
</span><span class='line'>      <span class="n">client</span><span class="o">.</span><span class="na">setAuthentication</span><span class="o">(</span><span class="k">new</span> <span class="n">AppNameAuthenticationProvider</span><span class="o">());</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">client</span><span class="o">.</span><span class="na">addHeader</span><span class="o">(</span><span class="n">FindingConstants</span><span class="o">.</span><span class="na">X_EBAY_SOA_OPERATION_NAME</span><span class="o">,</span>  <span class="n">opName</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">private</span> <span class="n">NanoXmlResponseParser</span><span class="o">&lt;</span><span class="n">ErrorMessage</span><span class="o">&gt;</span> <span class="n">errorMessageParser</span> <span class="o">=</span>
</span><span class='line'>          <span class="k">new</span> <span class="n">NanoXmlResponseParser</span><span class="o">&lt;</span><span class="n">ErrorMessage</span><span class="o">&gt;(</span><span class="n">ErrorMessage</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">handleResponse</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      
</span><span class='line'>        <span class="kd">final</span> <span class="n">RestClient</span> <span class="n">client</span> <span class="o">=</span> <span class="n">getRestClient</span><span class="o">();</span>
</span><span class='line'>        <span class="kd">final</span> <span class="n">ResponseStatus</span> <span class="n">status</span> <span class="o">=</span> <span class="n">client</span><span class="o">.</span><span class="na">getResponseStatus</span><span class="o">();</span>
</span><span class='line'>        <span class="n">String</span> <span class="n">response</span> <span class="o">=</span> <span class="n">client</span><span class="o">.</span><span class="na">getResponse</span><span class="o">();</span>
</span><span class='line'>        <span class="n">ALog</span><span class="o">.</span><span class="na">d</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="n">status</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">status</span><span class="o">.</span><span class="na">getStatusCode</span><span class="o">()</span> <span class="o">&lt;</span> <span class="mi">200</span> <span class="o">||</span> <span class="n">status</span><span class="o">.</span><span class="na">getStatusCode</span><span class="o">()</span> <span class="o">&gt;=</span> <span class="mi">300</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">if</span> <span class="o">(</span><span class="n">isXmlResponse</span><span class="o">(</span><span class="n">response</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">parseErrorMessage</span><span class="o">(</span><span class="n">response</span><span class="o">);</span>
</span><span class='line'>          <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">getResponseHandler</span><span class="o">().</span><span class="na">handleError</span><span class="o">(</span><span class="n">status</span><span class="o">);</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">parseHttpResponse</span><span class="o">(</span><span class="n">response</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>      
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">private</span> <span class="kt">void</span> <span class="nf">parseErrorMessage</span><span class="o">(</span><span class="n">String</span> <span class="n">response</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>            <span class="kd">final</span> <span class="n">ErrorMessage</span> <span class="n">errorMessage</span> <span class="o">=</span> <span class="n">errorMessageParser</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="n">response</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">T</span> <span class="n">responeData</span> <span class="o">=</span> <span class="n">responseType</span><span class="o">.</span><span class="na">newInstance</span><span class="o">();</span>
</span><span class='line'>            <span class="n">BaseServiceResponse</span> <span class="n">baseServiceResponse</span> <span class="o">=</span> <span class="o">(</span><span class="n">BaseServiceResponse</span><span class="o">)</span><span class="n">responeData</span><span class="o">;</span>
</span><span class='line'>            <span class="n">baseServiceResponse</span><span class="o">.</span><span class="na">setAck</span><span class="o">(</span><span class="n">AckValue</span><span class="o">.</span><span class="na">FAILURE</span><span class="o">);</span>
</span><span class='line'>            <span class="n">baseServiceResponse</span><span class="o">.</span><span class="na">setErrorMessage</span><span class="o">(</span><span class="n">errorMessage</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">getResponseHandler</span><span class="o">().</span><span class="na">handleSuccess</span><span class="o">(</span><span class="n">responeData</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="kd">final</span> <span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">ResponseStatus</span> <span class="n">responseStatus</span> <span class="o">=</span> <span class="n">ResponseStatus</span><span class="o">.</span><span class="na">getParseErrorStatus</span><span class="o">();</span>
</span><span class='line'>            <span class="n">ALog</span><span class="o">.</span><span class="na">d</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="n">responseStatus</span><span class="o">.</span><span class="na">toString</span><span class="o">(),</span> <span class="n">e</span><span class="o">);</span>
</span><span class='line'>            <span class="n">getResponseHandler</span><span class="o">().</span><span class="na">handleError</span><span class="o">(</span><span class="n">responseStatus</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">private</span> <span class="kt">boolean</span> <span class="nf">isXmlResponse</span><span class="o">(</span><span class="n">String</span> <span class="n">response</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">response</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">response</span><span class="o">.</span><span class="na">startsWith</span><span class="o">(</span><span class="s">&quot;&lt;?xml&quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>Base request processor is the core of the proxy, let me give more comments about the base processor:<br/>
1. we extend NanoXmlRequestProcessor class, since we want to leverage Nano xml framework for request marshalling and response unmarshalling.<br/>
2. In the constuctor, we provides request object, operaion name and
a HttpCallback instance as parameters and delegate these parameters to the super class, the requst object is an eBay Finding request object like FindItemsByKeywordsRequest object, the operation name is required by eBay Finding service as request header, and I will give more explanation about the HttpCallback instance later. <br/>
3. Also in the constructor, we set eBay Finding service production endpoint url on the rest client(replace here if you need to access sandbox instead), plug in authentication provider defined above, and add operation name as request header. Note, authentication provider plugin is not necessary, you can always add APP NAME directly on the rest client as a request header, I use authentication provider here just to show the formal way to do authentication when Nano-rest framework is used.<br/>
4. The response handling logic of the eBay Finding serivce needs a special fix, usually, eBay service supports RRE(resposne resident error), means error message are wrapped in a normal response message, but in some cases, eBay Finding service may return a single error xml message without a wrapping response. In order to fix this, I overrided the Nano-rest response handling logic, please see handleResponse and
parseErrorMessage methods for details.</p>

<p>The responseHandler(defined in super class and returned by getResponseHandler method) is assocated with the HttpCallback instance passed in the constructor, it only has two methods: handleSuccess and handleError, usually, if the service invocation is successful, then handleSuccess method should be called, otherwise, handleError method should be called, responseHandler is only responsilbe for the callback, concrete success or error handling logic is defined by application logic.</p>

<p>With base processor defined, it&#8217;s quite easy to define a specific request processor, let&#8217;s define a FindItemsByKeywordsReqeustProcessor since I will use this function of eBay Finding service as demo:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">ebay</span><span class="o">.</span><span class="na">finding</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.finding.request.BaseFindingRequestProcessor</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.marketplace.search.v1.services.FindItemsByKeywordsRequest</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.marketplace.search.v1.services.FindItemsByKeywordsResponse</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.leansoft.nanorest.RequestProcessor</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.leansoft.nanorest.callback.HttpCallback</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">FindingService</span> <span class="o">{</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">TAG</span> <span class="o">=</span> <span class="n">FindingService</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getSimpleName</span><span class="o">();</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="n">RequestProcessor</span> <span class="nf">getFindItemsByKeywordsRequestProcessor</span><span class="o">(</span>
</span><span class='line'>          <span class="n">FindItemsByKeywordsRequest</span> <span class="n">requestObject</span><span class="o">,</span>
</span><span class='line'>          <span class="n">HttpCallback</span><span class="o">&lt;</span><span class="n">FindItemsByKeywordsResponse</span><span class="o">&gt;</span> <span class="n">callback</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="k">new</span> <span class="n">BaseFindingRequestProcessor</span><span class="o">&lt;</span><span class="n">FindItemsByKeywordsResponse</span><span class="o">&gt;(</span><span class="n">requestObject</span><span class="o">,</span> <span class="s">&quot;findItemsByKeywords&quot;</span><span class="o">,</span> <span class="n">FindItemsByKeywordsResponse</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">callback</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Not much code, and no magic here if you are familar with Java generic. We just define a factory method, provide specific parameters requried by FindItemsByKeywords API call. Use this method as template, it&#8217;s not hard for you to create other request processors, like <br/>
getFindItemsAdvandedRequestProcessor, getFindItemsByCategoryRequestProcessor, etc, all functions of eBay Finding service can be defined in this way, actually, you can even build a complete eBay Finding SDK in this way for later reuse.</p>

<h3>Step 4: Write real application logic and UI</h3>

<p>Now it&#8217;s time for us to write real application logic and UI, in this demo, I just want to show minimum application logic and UI, the UI part only has an EditText as keywords input and a Button to trigger search by calling FindingItemsByKeywords API, and a Toast for response display.
The application logic is even simpler, let&#8217;s see the whole definition of the Main Activity:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">leansoft</span><span class="o">.</span><span class="na">nanorest</span><span class="o">.</span><span class="na">sample</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.finding.FindingService</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.marketplace.search.v1.services.AckValue</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.marketplace.search.v1.services.FindItemsByKeywordsRequest</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.marketplace.search.v1.services.FindItemsByKeywordsResponse</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ebay.marketplace.search.v1.services.PaginationInput</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.leansoft.nanorest.RequestProcessor</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.leansoft.nanorest.callback.HttpCallback</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.leansoft.nanorest.domain.ResponseStatus</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.os.Bundle</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.view.View</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.view.View.OnClickListener</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.Button</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.Toast</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.EditText</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.app.Activity</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MainActivity</span> <span class="kd">extends</span> <span class="n">Activity</span> <span class="o">{</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">private</span> <span class="n">Button</span> <span class="n">btn</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>
</span><span class='line'>      <span class="n">setContentView</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">activity_main</span><span class="o">);</span>
</span><span class='line'>          
</span><span class='line'>        <span class="n">btn</span> <span class="o">=</span> <span class="o">(</span><span class="n">Button</span><span class="o">)</span> <span class="k">this</span><span class="o">.</span><span class="na">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">btn</span><span class="o">);</span>
</span><span class='line'>        <span class="n">btn</span><span class="o">.</span><span class="na">setOnClickListener</span><span class="o">(</span><span class="k">new</span> <span class="n">OnClickListener</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>          <span class="nd">@Override</span>
</span><span class='line'>          <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">View</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">String</span> <span class="n">keywords</span> <span class="o">=</span> <span class="o">((</span><span class="n">EditText</span><span class="o">)</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">edit_input</span><span class="o">)).</span><span class="na">getText</span><span class="o">().</span><span class="na">toString</span><span class="o">();</span>    
</span><span class='line'>              <span class="n">FindItemsByKeywordsRequest</span> <span class="n">request</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FindItemsByKeywordsRequest</span><span class="o">();</span>
</span><span class='line'>              <span class="n">request</span><span class="o">.</span><span class="na">setKeywords</span><span class="o">(</span><span class="n">keywords</span><span class="o">);</span>
</span><span class='line'>              <span class="n">PaginationInput</span> <span class="n">pi</span> <span class="o">=</span> <span class="k">new</span> <span class="n">PaginationInput</span><span class="o">();</span>
</span><span class='line'>              <span class="n">pi</span><span class="o">.</span><span class="na">setPageNumber</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>
</span><span class='line'>              <span class="n">pi</span><span class="o">.</span><span class="na">setEntriesPerPage</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>
</span><span class='line'>              <span class="n">request</span><span class="o">.</span><span class="na">setPaginationInput</span><span class="o">(</span><span class="n">pi</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>              <span class="n">RequestProcessor</span> <span class="n">requestProcessor</span> <span class="o">=</span> <span class="n">FindingService</span><span class="o">.</span><span class="na">getFindItemsByKeywordsHttpRequest</span><span class="o">(</span>
</span><span class='line'>                      <span class="n">request</span><span class="o">,</span>
</span><span class='line'>                      <span class="k">new</span> <span class="nf">FindItemsByKeywordsCallback</span><span class="o">()</span>
</span><span class='line'>                      <span class="o">);</span>
</span><span class='line'>              <span class="n">requestProcessor</span><span class="o">.</span><span class="na">invokeAsync</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">.</span><span class="na">getApplicationContext</span><span class="o">());</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>          
</span><span class='line'>        <span class="o">});</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">final</span> <span class="kd">class</span> <span class="nc">FindItemsByKeywordsCallback</span> <span class="kd">implements</span> <span class="n">HttpCallback</span><span class="o">&lt;</span><span class="n">FindItemsByKeywordsResponse</span><span class="o">&gt;</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>      <span class="nd">@Override</span>
</span><span class='line'>      <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onSuccess</span><span class="o">(</span><span class="n">FindItemsByKeywordsResponse</span> <span class="n">responseData</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          
</span><span class='line'>          <span class="k">if</span> <span class="o">(</span><span class="n">responseData</span><span class="o">.</span><span class="na">getAck</span><span class="o">()</span> <span class="o">==</span> <span class="n">AckValue</span><span class="o">.</span><span class="na">SUCCESS</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="n">getApplicationContext</span><span class="o">(),</span>
</span><span class='line'>                      <span class="n">responseData</span><span class="o">.</span><span class="na">getSearchResult</span><span class="o">().</span><span class="na">getItem</span><span class="o">().</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">).</span><span class="na">getTitle</span><span class="o">(),</span>
</span><span class='line'>                      <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>          <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="n">getApplicationContext</span><span class="o">(),</span>
</span><span class='line'>                      <span class="n">responseData</span><span class="o">.</span><span class="na">getErrorMessage</span><span class="o">().</span><span class="na">getError</span><span class="o">().</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">).</span><span class="na">getMessage</span><span class="o">(),</span>
</span><span class='line'>                      <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="nd">@Override</span>
</span><span class='line'>      <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onHttpError</span><span class="o">(</span><span class="n">ResponseStatus</span> <span class="n">responseCode</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="n">getApplicationContext</span><span class="o">(),</span>
</span><span class='line'>                    <span class="n">responseCode</span><span class="o">.</span><span class="na">getStatusCode</span><span class="o">()</span> <span class="o">+</span> <span class="s">&quot; &quot;</span> <span class="o">+</span> <span class="n">responseCode</span><span class="o">.</span><span class="na">getStatusMessage</span><span class="o">(),</span>
</span><span class='line'>                    <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>          
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>The code is easy to understand if you know Java and Android, let me give a few comments:<br/>
1. We register a click listener to the button, inside the listener is the main application logic:
get keywords input and build a FindItemByKeywordsRequest object, get a FindItemByKeywordsRequestProcessor from the factory we defined above, and invoke the request processor asynchronously at last.<br/>
2. When we build the FindItemByKeywordsRequestProcessor instance, we passed in a FindItemsByKeywordsCallback instance as parameter, FindItemsByKeywordsCallback implements HttpCallback interface, it contains the main response logic, this is the place when final asynchronous response handling happen. Usually, inside a HttpCallback, we update UI according to the success or failure of the response, in this case, if the response is successful, we show the title of the result item, if there is http error, we show the status code and message. Since eBay Finding service support Response Resident Error(RRE), even in the onSuccess callback, we still need to check the Ack value to find out if there is application error and handle accordingly.</p>

<p>Here I just show a typical asynchronous service invocation paradigm using Nano-rest framework, you can follow this paradigm for other service invocations according to your real needs.</p>

<h3>Step 5 : Run the application</h3>

<p>Now lets run the application, note again, please fill in your APP NAME before you run the application, below is the UI of a success case:</p>

<p><img class="center" src="http://bulldog2011.github.com/images/nano-rest/hello_ebay_finding_success.png" width="400" height="600"></p>

<p>Let&#8217;s provide an invalid APP NAME and try again, below is the UI of the failed case since the APP NAME is invalid:</p>

<p><img class="center" src="http://bulldog2011.github.com/images/nano-rest/hello_ebay_finding_failure.png" width="400" height="600"></p>

<p>To facilitate debug and trouble shooting, you can always check the request or response xml by looking at the log in the LogCat provided by ADT.</p>

<h3>Conclusion:</h3>

<p>The demo shown in this tutorial is just a bare minimum or starter kit, there is still much work to do before you can release a fully functional service backed Android application, but anyway, with a reuseable service proxy, you are free from low level and error-prone serivce message parsing and http handling anymore, instead, you can put your effor on main application logic and UI, this can definitly accelerate the development of the application.</p>

<p>Scheam driven development is a popular and mature development methodology, when used appropriately, it can improve development efficiency and enhance the reliability and maintainability of the application. Now with the support of Nano-rest framework and the mxjc binding compiler, we can also do schema driven client development on Android.</p>

<p>You can find the whole source of the sample application and all the generated eBay Finding service classes <a href="https://github.com/bulldog2011/nano-rest/tree/master/sample/HelloEBayFinding">here</a>.</p>

<h4>Update 1 (2.20.2013)</h4>

<p>A similar proxy and a demo for <a href="https://www.x.com/developers/ebay/products/shopping-api">eBay Shopping API</a> have been created, get the whole source <a href="https://github.com/bulldog2011/nano-rest/tree/master/sample/HelloEBayShopping">here</a>. With the Shopping API proxy as SDK and the demo as template, you may create a functional eBay Shopping API based appliction for Android, you may even mix both eBay Finding and Shopping APIs in your application, cool.</p>

<h4>Update 2 (2.21.2013)</h4>

<p>A similar proxy and a demo for <a href="https://www.x.com/developers/ebay/products/trading-api">eBay Trading API</a> have been created, get the whole source <a href="https://github.com/bulldog2011/nano-rest/tree/master/sample/HelloEBayTrading">here</a>. Now you can build more cool eBay Apps on Android, like buying and selling Apps, enjoy! <br/>
<strong><em>Note </em></strong> eBay Trading wsdl has some issue to work with mxjc directly, if you want to generate eBay Trading proxy from <a href="http://developer.ebay.com/webservices/latest/ebaySvc.wsdl">eBay Trading wsdl</a> using mxjc, you need to do following fix:</p>

<ol>
<li>Remove an any element declaration in ReviseInventoryStatusRequestType, since any has already been declarated in the AbstractRequestType(from which ReviseInventoryStatusRequestType extends).</li>
<li>Add a RequesterCredentials(of type CustomSecurityHeaderType) element in AbstractRequestType, such that eBay token authentication can work with XML call.</li>
<li>Add following annotation in the schema definition(at the beginning):</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>   <span class="nt">&lt;xs:annotation&gt;</span>
</span><span class='line'>   <span class="nt">&lt;xs:appinfo&gt;</span>
</span><span class='line'>     <span class="nt">&lt;jaxb:globalBindings</span> <span class="na">typesafeEnumMaxMembers=</span><span class="s">&quot;1000&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>   <span class="nt">&lt;/xs:appinfo&gt;</span>
</span><span class='line'>   <span class="nt">&lt;/xs:annotation&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>since the numbe of members in some enum types in wsdl exceeds the maximum allowed by defult xjc/jaxb processor. Of couse, you also need to declare jaxb namespace and version in wsdl definition.
<a href="https://github.com/bulldog2011/nano-rest/tree/master/sample/HelloEBayTrading/wsdl">Here</a> is a fixed eBay Trading wsdl(version 809), you can search &#8216;mxjc&#8217; to find out what I have fixed.</p>

<p>Also, eBay Trading wsdl is very big(> 5M), leading to big jar after code generation and compilation, however, eBay provides a <a href="http://developer.ebay.com/DevZone/codebase/wsdlpruner/pruner.zip">wsdl pruner tool</a>, to minimize jar of your application on Android, you can use this tool to prune the wsdl according to the operations you need, for example, if you only need <a href="http://developer.ebay.com/DevZone/XML/docs/Reference/eBay/AddItem.html">AddItem</a> operation, just choose this operation, the pruner will ensure only AddItem call related types are left in wsdl after pruning.</p>
]]></content>
  </entry>
  
</feed>
